window.wbBuilderLoadPlugins(
	{"TextArea":{"id":"TextArea","textId":"TextArea","name":"Text","icon":"ico-tb-text","iconImage":false,"borderless":false,"active":true},"Picture":{"id":"Picture","textId":"Picture","name":"Picture","icon":"ico-tb-picture","iconImage":false,"borderless":false,"active":true},"Table":{"id":"Table","textId":"Table","name":"Table","icon":"ico-tb-table","iconImage":false,"borderless":false,"active":true},"Gallery":{"id":"Gallery","textId":"Gallery","name":"Gallery","icon":"ico-tb-gallery","iconImage":false,"borderless":false,"active":true},"Youtube":{"id":"Youtube","textId":"Youtube","name":"YouTube","icon":"ico-tb-youtube","iconImage":false,"borderless":false,"active":true},"GoogleMaps":{"id":"GoogleMaps","textId":"GoogleMaps","name":"Google Maps","icon":"ico-tb-google-maps","iconImage":false,"borderless":false,"active":true},"Video":{"id":"Video","textId":"Video","name":"Video","icon":"fa fa-play-circle","iconImage":false,"borderless":false,"active":true},"Shape":{"id":"Shape","textId":"Shape","name":"Shape","icon":"ico-tb-shape","iconImage":false,"borderless":false,"active":true},"Line":{"id":"Line","textId":"Line","name":"Line","icon":"ico-tb-line","iconImage":false,"borderless":false,"active":true},"Button":{"id":"Button","textId":"Button","name":"Button","icon":"ico-tb-button","iconImage":false,"borderless":false,"active":true},"Form":{"id":"Form","textId":"Form","name":"Form","icon":"ico-tb-form","iconImage":false,"borderless":false,"active":true},"Menu":{"id":"Menu","textId":"Menu","name":"Menu","icon":"ico-tb-menu","iconImage":false,"borderless":false,"active":true},"Languages":{"id":"Languages","textId":"Languages","name":"Languages","icon":"ico-tb-lang","iconImage":false,"borderless":false,"active":true},"Blocks":{"id":"Blocks","textId":"Blocks","name":"Blocks","icon":"ico-tb-blocks","iconImage":false,"borderless":false,"active":false},"Store":{"id":"Store","textId":"Store","name":"Store","icon":"ico-tb-store","iconImage":false,"borderless":false,"active":true},"StoreCart":{"id":"StoreCart","textId":"StoreCart","name":"Store Cart","icon":"ico-tb-store-cart","iconImage":false,"borderless":false,"active":true},"BuyNow":{"id":"BuyNow","textId":"BuyNow","name":"Buy Now","icon":"ico-tb-buynow","iconImage":false,"borderless":false,"active":true},"MusicPlayer":{"id":"MusicPlayer","textId":"MusicPlayer","name":"Music","icon":"ico-tb-musicplayer","iconImage":false,"borderless":false,"active":true},"Banner":{"id":"Banner","textId":"Banner","name":"Banner","icon":"ico-tb-banner","iconImage":false,"borderless":false,"active":true},"Flash":{"id":"Flash","textId":"Flash","name":"Flash","icon":"ico-tb-flash","iconImage":false,"borderless":true,"active":false},"GoogleAdSense":{"id":"GoogleAdSense","textId":"GoogleAdSense","name":"Google AdSense","icon":"ico-tb-google-adsense","iconImage":false,"borderless":false,"active":true},"CustomHtml":{"id":"CustomHtml","textId":"CustomHtml","name":"Custom HTML","icon":"ico-tb-html","iconImage":false,"borderless":false,"active":true},"FacebookFans":{"id":"FacebookFans","textId":"FacebookFans","name":"Facebook Fans","icon":"ico-tb-facebook-fans","iconImage":false,"borderless":true,"active":true},"FacebookLike":{"id":"FacebookLike","textId":"FacebookLike","name":"Facebook Like","icon":"ico-tb-facebook-like","iconImage":false,"borderless":true,"active":true},"BookmarksShare":{"id":"BookmarksShare","textId":"BookmarksShare","name":"Bookmarks Share","icon":"ico-tb-share","iconImage":false,"borderless":true,"active":true},"SkypeImOnline":{"id":"SkypeImOnline","textId":"SkypeImOnline","name":"Skype I'm Online","icon":"ico-tb-skype-imonline","iconImage":false,"borderless":true,"active":true},"Twitter":{"id":"Twitter","textId":"Twitter","name":"Twitter","icon":"ico-tb-twitter","iconImage":false,"borderless":true,"active":true},"FlickrGallery":{"id":"FlickrGallery","textId":"FlickrGallery","name":"Flickr Gallery","icon":"ico-tb-flickr-gallery","iconImage":false,"borderless":true,"active":false},"Blog":{"id":"Blog","textId":"Blog","name":"Blog","icon":"ico-tb-blog","iconImage":false,"borderless":false,"active":true},"LayoutElement":{"id":"LayoutElement","textId":"LayoutElement","name":"Layout Element","icon":"ico-tb-shape","iconImage":false,"borderless":false,"active":true}},
	[
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"youku","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/youku","customConfiguration":null};
PluginWrapper._config.id = 'youku';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/youku\/main.png";
PluginWrapper._config.template = "<div style=\"width: 100%; height: 100%; background: #000;\">\n\t<div style=\"width: 0; height: 100%; display: inline-block; vertical-align: middle;\">\n\t<\/div><div style=\"display: inline-block; vertical-align: middle; width: 100%;\">\n\t\t<div style=\"position: relative; padding-bottom: 56.25%; height: 0;\">\n\t\t\t<iframe style=\"position: absolute; top: 0; left: 0; width: 100%; height: 100%;\" width=\"1000\" height=\"563\" src=\"https:\/\/player.youku.com\/embed\/{{content.finalGroupId}}?autoplay={{content.play}}&starttime={{content.startAt}}\" frameborder=\"0\" allowfullscreen><\/iframe>\n\t\t<\/div>\n\t<\/div>\n<\/div>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('youku', {
	name: 'Youku',
	element: {
		minSize: {width: 100, height: 56},
		defaultSize: {width: 420, height: 236},
		resizable: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Youku video URL'),
						helpText: __('Copy full Youku video URL') + ' <br /><div style="display: inline-block; max-width: 100%; word-break: break-all;">(http://v.youku.com/v_show/id_XMTYzOTI2OTE4MA==.html...)</div>'},
					{type: 'TextField', id: 'groupId', placeholder: 'https://v.youku.com/v_show/id_XNDgxNjgwODcyOA==.html?spm=a2ha1.14919748_WEBHOME_GRAY.drawer5.d_zj1_3&scm=20140719.rcmd.7182.video_XNDgxNjgwODcyOA%3D%3D'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'autoplay', label: __('Autoplay')},
					{type: 'VerticalLayout', ignore: true, children: [
						{type: 'Label', text: __('Start at')},
						{type: 'TextField', id: 'startAt', placeholder: '00:00'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, ignore: true, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label',
							text: __('Autoplay'),
							helpText: __('Disable or enable autoplay.')},
						{type: 'RadioBox', id: 'autoplay0', label: __('Enable'), group: 'play'},
						{type: 'RadioBox', id: 'autoplay1', label: __('Disable'), group: 'play'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Video quality settings'),
							helpText: __('Allows to preset video quality settings.')},
						{type: 'RadioBox', id: 'quality0', label: __('low'), group: 'quality'},
						{type: 'RadioBox', id: 'quality1', label: __('autolow'), group: 'quality'},
						{type: 'RadioBox', id: 'quality2', label: __('autohigh'), group: 'quality'},
						{type: 'RadioBox', id: 'quality3', label: __('Medium'), group: 'quality'},
						{type: 'RadioBox', id: 'quality4', label: __('high'), group: 'quality'},
						{type: 'RadioBox', id: 'quality5', label: __('best'), group: 'quality'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Window Mode settings'),
							helpText: __('Changes settings to window mode.')},
						{type: 'RadioBox', id: 'wmode0', label: __('window'),	   group: 'wmode', helpText: __('Broadest accessibility support.')},
						{type: 'RadioBox', id: 'wmode1', label: __('Transparent'), group: 'wmode',helpText: __('Transparency and alpha blending over HTML elements supported. HTML elements can overlap SWF content. Explicit layering control (all browsers).') },
						{type: 'RadioBox', id: 'wmode2', label: __('opaque'),	group: 'wmode', helpText: __('HTML elements can overlap SWF content. Explicit layering control (all browsers).')},
						{type: 'RadioBox', id: 'wmode3', label: __('direct'),	group: 'wmode', helpText: __('Best performance. Hardware accelerated presentation, including Stage Video and Stage 3D (all browsers).')},
						{type: 'RadioBox', id: 'wmode4', label: __('gpu'),	  group: 'wmode', helpText: __('Additional hardware acceleration on some Internet connected TVs and mobile devices.')}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Video background color'),
							helpText: __('Sets background color while video is loading')},
						{type: 'ColorSelector', id: 'color'}
					]}
				]}
			]}
		]
	},
	properties: [
		{id: 'groupId', type: 'YoukuGroupId', helpText: __('Copy full Youku video URL') + ' <br /><div style="display: inline-block; max-width: 100%; word-break: break-all;">(http://v.youku.com/v_show/id_XMTYzOTI2OTE4MA==.html...)</div>',
			get: function(data) { return data.content.groupId; },
			validate: function (value, data, api) {
				this._resolveFinalGroupId(value, api);
			},
			set: function(value, data) {
				data.content.groupId = value;
				data.content.finalGroupId = value ? this._resolveFinalGroupId(data.content.groupId) : 'XNDgxNjgwODcyOA==';

			}
		},
		{id: 'autoplay', type: 'YoukuAutoplay',
			get: function(data) {console.log(data.content.play_checkbox); return data.content.play_checkbox; },
			set: function(value, data) {
				data.content.play_checkbox = value;
				data.content.play = value ? '1' : '0';
			}
		}
	],
	setFinalGroupId: function (data) {
		data.content.finalGroupId = data.content.groupId ? this._resolveFinalGroupId(data.content.groupId) : 'XNDgxNjgwODcyOA==';
	},
	openAction: function (fields, data, elem) {
		fields.groupId.setText(data.content.groupId);
		fields.autoplay.setValue(data.content.play === '1');
//		fields.startAt.setValue(data.content.startAt);
		/* fields.color.setValue(data.content.color);
		fields.autoplay0.setValue(data.content.play === 'true');
		fields.autoplay1.setValue(data.content.play === 'false');

		fields.quality0.setValue(data.content.quality === 'low');
		fields.quality1.setValue(data.content.quality === 'autolow');
		fields.quality2.setValue(data.content.quality === 'autohigh');
		fields.quality3.setValue(data.content.quality === 'medium');
		fields.quality4.setValue(data.content.quality === 'high');
		fields.quality5.setValue(data.content.quality === 'best');

		fields.wmode0.setValue(data.content.wmode === 'window');
		fields.wmode1.setValue(data.content.wmode === 'transparent');
		fields.wmode2.setValue(data.content.wmode === 'opaque');
		fields.wmode3.setValue(data.content.wmode === 'direct');
		fields.wmode4.setValue(data.content.wmode === 'gpu'); */
	},
	applyAction: function (fields, data, elem) {
		data.content.groupId = fields.groupId.getText();
		data.content.play = fields.autoplay.getValue() ? '1' : '0';
		this.setFinalGroupId(data);
//		data.content.startAt = fields.startAt.getValue();
		/* data.content.color = fields.color.getValue().replace('#', '');
		data.content.finalGroupId = this._resolveFinalGroupId(data.content.groupId);

		if (fields.autoplay0.getValue()) data.content.play = 'true';
		if (fields.autoplay1.getValue()) data.content.play = 'false';

		if (fields.quality0.getValue()) data.content.quality = 'low';
		if (fields.quality1.getValue())data.content.quality = 'autolow';
		if (fields.quality2.getValue())data.content.quality = 'autohigh';
		if (fields.quality3.getValue())data.content.quality = 'medium';
		if (fields.quality4.getValue())data.content.quality = 'high';
		if (fields.quality5.getValue())data.content.quality = 'best';

		if (fields.wmode0.getValue())data.content.wmode = 'window';
		if (fields.wmode1.getValue())data.content.wmode = 'transparent';
		if (fields.wmode2.getValue())data.content.wmode = 'opaque';
		if (fields.wmode3.getValue())data.content.wmode = 'direct';
		if (fields.wmode4.getValue())data.content.wmode = 'gpu'; */
	},
	_resolveFinalGroupId: function(groupId, api) {
		if (/https?:\/\/v.youku.com\/v_show\/id_([A-Za-z0-9=]+)(?:$|[^A-Za-z0-9=])/.test(groupId)
				|| /https?:\/\/player\.youku\.com\/player\.php\/sid\/([A-Za-z0-9=]+)(?:$|[^A-Za-z0-9=])/.test(groupId)
				|| /https?:\/\/player\.youku\.com\/embed\/([A-Za-z0-9=]+)(?:$|[^A-Za-z0-9=])/.test(groupId)) {
			if(api) api.setError('');
			return RegExp.$1;
		} else {
			if(api) api.setError(__('Invalid URL'));
		}
		return groupId;
	},
	loadAction: function (data) {
		if (!data.content.groupId) data.content.groupId = '';
//		if (!data.content.startAt) data.content.startAt = '';
		if (!data.content.play) data.content.play = '0';
		if (!data.content.play_checkbox) data.content.play_checkbox = false;
		/* if (!data.content.quality) data.content.quality = 'high';
		if (!data.content.wmode) data.content.wmode = 'window';
		if (!data.content.color) data.content.color = 'ffffff'; */
		this.setFinalGroupId(data);
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"instagram","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/instagram","customConfiguration":null};
PluginWrapper._config.id = 'instagram';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "<style>\n#{{id}}_instafeed {\n\tlist-style:none;\n\tfloat: left;\n\tpadding: 0;\n\tmargin-right: -{{content.imgMargin}}px;\n\tmargin-bottom: -{{content.imgMargin}}px;\n}\n#{{id}}_instafeed li {\n\tfloat: left;\n\twidth: {{content.imgSize}}px;\n\theight: {{content.imgSize}}px;\n\tmargin-right: {{content.imgMargin}}px;\n\tmargin-bottom: {{content.imgMargin}}px;\n}\n{{#content.imgCrop}}\n#{{id}}_instafeed li a {\n\tdisplay: block;\n\tbackground-size: cover;\n\tbackground-position: center center;\n\twidth: 100%;\n\theight: 100%;\n}\n{{\/content.imgCrop}}\n{{^content.imgCrop}}\n#{{id}}_instafeed li a img {\n\twidth: 100%;\n\theight: auto;\n}\n{{\/content.imgCrop}}\n#{{id}}_preloader {\n\tfont-size: 28px;\n}\n#{{id}}_state {\n\tdisplay: block;\n\tfont-size: 16px;\n}\n#{{id}}_container {\n\tdisplay: block;\n\twidth: 100%;\n\theight: 100%;\n\toverflow: hidden;\n}\n#{{id}}_preloader {\n\tdisplay: none;\n}\n<\/style>\n<span id=\"{{id}}_preloader\" class=\"fa fa-pulse fa-spinner wb-prevent-layout-click\"><\/span>\n<span id=\"{{id}}_state\" class=\"alert alert-warning wb-prevent-layout-click\" style=\"display: none;\"><\/span>\n<div id=\"{{id}}_container\" class=\"wb-prevent-layout-click\">\n\t<ul id=\"{{id}}_instafeed\"><\/ul>\n<\/div>\n<script>\n\t(function() {\n\t\tvar shuffle = ('{{content.shuffle}}' === '1' || '{{content.shuffle}}' === 'true');\n\t\tvar count = {{content.images}};\n\t\tvar stateElem = $('#{{id}}_state');\n\t\tvar accessToken = '{{content.accessToken}}';\n\t\tif (!accessToken) accessToken = '';\n\t\tvar userId = '{{content.userId}}';\n\t\tif (!userId) userId = '';\n\t\tvar preloader = $('#{{id}}_preloader');\n\t\t\n\t\tvar setLoading = function(loading) {\n\t\t\tif (loading) {\n\t\t\t\tpreloader.show();\n\t\t\t} else {\n\t\t\t\tpreloader.hide();\n\t\t\t}\n\t\t};\n\t\tvar setMessage = function(message) {\n\t\t\tstateElem.text(message);\n\t\t\tif (message) {\n\t\t\t\tstateElem.show();\n\t\t\t} else {\n\t\t\t\tstateElem.hide();\n\t\t\t}\n\t\t}\n\t\tvar refreshToken = function(completeCallback) {\n\t\t\tif (!userId || !accessToken) {\n\t\t\t\tsetMessage('You are not logged in.');\n\t\t\t} else {\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: 'https:\/\/graph.instagram.com\/refresh_access_token',\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tgrant_type: 'ig_refresh_token',\n\t\t\t\t\t\taccess_token: accessToken\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(resp) {\n\t\t\t\t\t\tif (resp.access_token) accessToken = resp.access_token;\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tif (typeof(completeCallback) === 'function') completeCallback();\n\t\t\t\t\t},\n\t\t\t\t\terror: function(xhr, status) {\n\t\t\t\t\t\tvar resp = xhr.responseJSON ? xhr.responseJSON : null;\n\t\t\t\t\t\tconsole.log((resp && resp.error)\n\t\t\t\t\t\t\t\t? ('Instagram error refreshing token (' + resp.error.code + '): ' + resp.error.message)\n\t\t\t\t\t\t\t\t: 'Error refreshing token' + (status ? ': status code (' + status + ')' : ''));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\tvar loadImages = function(completeCallback) {\n\t\t\tif (!userId || !accessToken) {\n\t\t\t\tsetMessage('You are not logged in.');\n\t\t\t} else {\n\t\t\t\tsetLoading(true);\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: 'https:\/\/graph.instagram.com\/me\/media',\n\t\t\t\t\tdataType: 'json',\n\t\t\t\t\ttype: 'GET',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\taccess_token: accessToken,\n\t\t\t\t\t\tfields: 'media_url,permalink,timestamp,thumbnail_url'\n\t\t\t\t\t},\n\t\t\t\t\tsuccess: function(resp) {\n\t\t\t\t\t\tif (resp && resp.error) {\n\t\t\t\t\t\t\tsetMessage('Instagram error retrieving images (' + resp.error.code + '): ' + resp.error.message);\n\t\t\t\t\t\t} else if (!resp || !resp.data) {\n\t\t\t\t\t\t\tsetMessage('Error retrieving images: invalid response.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (resp.data && resp.data.length) {\n\t\t\t\t\t\t\t\tvar list = resp.data, i;\n\t\t\t\t\t\t\t\tlist.sort(function(a,b) {\n\t\t\t\t\t\t\t\t\tif (a.timestamp == b.timestamp) return 0;\n\t\t\t\t\t\t\t\t\treturn (a.timestamp < b.timestamp) ? 1 : -1;\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tif (shuffle) {\n\t\t\t\t\t\t\t\t\tvar shuffleArray = function(a) {\n\t\t\t\t\t\t\t\t\t\tvar j, x, i;\n\t\t\t\t\t\t\t\t\t\tfor (i = a.length - 1; i > 0; i--) {\n\t\t\t\t\t\t\t\t\t\t\tj = Math.floor(Math.random() * (i + 1));\n\t\t\t\t\t\t\t\t\t\t\tx = a[i];\n\t\t\t\t\t\t\t\t\t\t\ta[i] = a[j];\n\t\t\t\t\t\t\t\t\t\t\ta[j] = x;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\treturn a;\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\tlist = shuffleArray(list);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t$('#{{id}}_instafeed').html('');\n\t\t\t\t\t\t\t\tvar feed = $('#{{id}}_instafeed');\n\t\t\t\t\t\t\t\tfor (var i = 0, len = list.length; i < len; i++) {\n\t\t\t\t\t\t\t\t\tif (i >= count) break;\n\t\t\t\t\t\t\t\t\tvar link = list[i].permalink;\n\t\t\t\t\t\t\t\t\tvar thumbUrl = list[i].thumbnail_url || list[i].media_url;\n\t\t\t\t\t\t\t\t\t{{#content.imgCrop}}\n\t\t\t\t\t\t\t\t\tfeed.append($('<li>').append($('<a>').attr('href', link).attr('target', '_blank').css('background-image', 'url(\"' + thumbUrl + '\")')));\n\t\t\t\t\t\t\t\t\t{{\/content.imgCrop}}\n\t\t\t\t\t\t\t\t\t{{^content.imgCrop}}\n\t\t\t\t\t\t\t\t\tfeed.append($('<li>').append($('<a>').attr('href', link).attr('target', '_blank').append($('<img>').attr('src', thumbUrl))));\n\t\t\t\t\t\t\t\t\t{{\/content.imgCrop}}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetMessage('No images found.');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\terror: function(xhr, status) {\n\t\t\t\t\t\tvar resp = xhr.responseJSON ? xhr.responseJSON : null;\n\t\t\t\t\t\tsetMessage((resp && resp.error)\n\t\t\t\t\t\t\t\t? ('Instagram Error retrieving images [ERR] (' + resp.error.code + '): ' + resp.error.message)\n\t\t\t\t\t\t\t\t: 'Error retrieving images' + (status ? ': status code(' + status + ')' : ''));\n\t\t\t\t\t},\n\t\t\t\t\tcomplete: function() {\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t\tif (typeof(completeCallback) === 'function') completeCallback();\n\t\t\t\t\t\t{{^isPublished}}\n\t\t\t\t\t\tif (('{{id}}_loaded_deferred' in window) && window.{{id}}_loaded_deferred) {\n\t\t\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\t\t\twindow.{{id}}_loaded_deferred.resolve();\n\t\t\t\t\t\t\t}, 50);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{{\/isPublished}}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar timerFlag = '{{id}}_instagram_timer';\n\t\tvar inProgressFlag = '{{id}}_instagram_in_progress';\n\t\tif (timerFlag in window) {\n\t\t\tclearTimeout(window[timerFlag]);\n\t\t\twindow[inProgressFlag] = false;\n\t\t}\n\t\twindow[timerFlag] = setTimeout(function() {\n\t\t\tif (!window[inProgressFlag]) {\n\t\t\t\twindow[inProgressFlag] = true;\n\t\t\t\trefreshToken(function() {\n\t\t\t\t\tloadImages(function() {\n\t\t\t\t\t\twindow[inProgressFlag] = false;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t}, 250);\n\t})();\n<\/script>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('instagram', {
	name: 'Instagram',
	element: {
		minSize: {width: 140, height: 140},
		defaultSize: {width: 910, height: 600},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'Image', src: wb_builder.pluginRepoPath + '/instagram/logo.png', id: 'logo', css: {width: 80, display: 'block', margin: '0 auto'}},
				{type: 'VerticalLayout', id: 'container', css: {marginTop: 10, textAlign: 'center'}, children: [
					{type: 'Button', text: __('Connect with Instagram'), id: 'loginButton', enabled: true, css: {marginTop: 10}},
					{type: 'VerticalLayout', id: 'loggedInBlock', children: [
						{type: 'Label', id: 'loginState', css: {fontWeight: 'normal', marginTop: 5}},
						{type: 'Button', text: __('Sign Out'), id: 'logoutButton'}
					]}
				]},
				{type: 'CustomContainer', init: function(def, fields) {
					this._elem.append($('<div>').css({paddingTop: 30}).append(fields.logo._elem))
							.append(fields.container._elem);
				}}
			]},
			{name: __('Settings'), children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Number of items to show')},
						{type: 'SizeSelector', id: 'images', max: 25}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Image Size')},
						{type: 'SizeSelector', id: 'imgSize', max: 640, min: 150}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Thumb padding (px)')},
						{type: 'SizeSelector', id: 'imgMargin', min:0}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [4,4], children: [
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', label: __('Shuffle'), id: 'shuffle'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', label: __('Use square images'), id: 'imgCrop'}
					]}
				]}
			]}
		]
	},

	pluginScoped: {
		sessionData: null,
		
		getSessionData: function(callback) {
			if (typeof(callback) !== 'function') return;
			if (!this.sessionData) {
				var thisSelf = this;
				$.get(wb_builder.baseUrl + 'instagram/get-data', function(resp) {
					if (resp && resp.data) thisSelf.sessionData = resp.data;
					callback(thisSelf.sessionData, ((resp && resp.error) ? resp.error : null));
				});
			} else {
				callback(this.sessionData);
			}
		},
		clearSessionData: function() {
			this.sessionData = null;
		},
		waitForSessionData: function(succClb, errClb) {
			var thisSelf = this;
			this.getSessionData(function(sessData, error) {
				if (sessData) {
					if (typeof(succClb) === 'function') succClb(sessData);
				} else {
					if (error) {
						if (typeof(errClb) === 'function') errClb(error);
					} else {
						setTimeout(function() {
							thisSelf.clearSessionData();
							thisSelf.waitForSessionData(succClb, errClb);
						}, 1000);
					}
				}
			});
		},
		logout: function(callback) {
			var thisSelf = this;
			$.get(wb_builder.baseUrl + 'instagram/logout', function(resp) {
				if (resp && resp.ok) {
					thisSelf.sessionData = null;
					if (typeof(callback) === 'function') callback();
				}
			});
		}
	},
	
	openAction: function(fields, data, elem) {
		var thisSelf = this;
		if (!fields.eventsIsSet) {
			fields.eventsIsSet = true;
			fields.loginButton.on('click', function() {
				fields.loginButton.setLoading(true);
				var w = 760, h = 800,
				left = parseInt((screen.availWidth - w) / 2),
				top = parseInt((screen.availHeight - h) / 2);
				thisSelf.pluginScoped.loginWindow = window.open(wb_builder.baseUrl + 'instagram', 'Instagram', 'width=' + w + ',height=' + h + ',left=' + left + ',top=' + top);
				
				var timer = setInterval(function() {
					if (thisSelf.pluginScoped.loginWindow.closed) {
						fields.loginButton.setLoading(false);
						clearInterval(timer);
					}
				}, 500);
				
				thisSelf.pluginScoped.waitForSessionData(
					function(sessData) {
						fields.loginButton.setLoading(false);
						data.content.accessToken = sessData.accessToken;
						data.content.userId = sessData.userId;
						data.content.userName = sessData.userName;
						thisSelf.updateLoginBlock(fields, data);
					},
					function(error) {
						fields.loginButton.setLoading(false);
						setTimeout(function() { alert(error); }, 50);
					}
				);
			});
			fields.logoutButton.on('click', function() {
				fields.logoutButton.setLoading(true);
				thisSelf.pluginScoped.logout(function() {
					fields.logoutButton.setLoading(false);
					data.content.accessToken = null;
					data.content.userId = null;
					data.content.userName = null;
					thisSelf.updateLoginBlock(fields, data);
				});
			});
		}
		this.updateLoginBlock(fields, data);
		fields.images.setValue(data.content.images);
		fields.imgSize.setValue(data.content.imgSize);
		fields.imgMargin.setValue(data.content.imgMargin);
		fields.shuffle.setValue(data.content.shuffle);
		fields.imgCrop.setValue(data.content.imgCrop);
	},
	
	updateLoginBlock: function(fields, data) {
		this.pluginScoped.getSessionData(function(sessData) {
			if (sessData) {
				fields.loginButton.setVisible(false);
				fields.loginState.setHtml('Logged in as <strong>' + sessData.userName + '</strong>');
				fields.loggedInBlock.setVisible(true);
			} else {
				fields.loggedInBlock.setVisible(false);
				fields.loginButton.setVisible(true);
			}
		});
	},
	
	applyAction: function(fields, data, elem) {
		data.content.images = Math.max(Math.min(fields.images.getValue(), 25), 0);
		data.content.imgSize = Math.max(Math.min(fields.imgSize.getValue(), 640), 150);
		data.content.imgMargin = fields.imgMargin.getValue();
		data.content.shuffle = fields.shuffle.getValue();
		data.content.imgCrop = fields.imgCrop.getValue();
	},
	
	loadAction: function (data) {
		if (!data.content.images) data.content.images = 6;
		data.content.images = Math.min(parseInt(data.content.images), 25);
		if (!data.content.imgSize) data.content.imgSize = '200';
		if (!data.content.imgMargin) data.content.imgMargin = '10';
		if (data.content.shuffle === undefined) data.content.shuffle = false;
		if (data.content.imgCrop === undefined) data.content.imgCrop = false;
	},
	
	loadedAction: function(data, elem) {
		window[data.id + '_loaded_deferred'] = this.loadDeferred;
		var thisSelf = this;
		if (!data.content.accessToken || data.content.accessToken.length < 100) { // old format
			this.pluginScoped.getSessionData(function(sessData) {
				if (sessData) {
					data.content.accessToken = sessData.accessToken;
					data.content.userId = sessData.userId;
					data.content.userName = sessData.userName;
				} else {
					data.content.accessToken = null;
					data.content.userId = null;
					data.content.userName = null;
				}
				thisSelf.updateElement();
			});
		}
	},
	
	supportsAutoWidth: function() {
		return true;
	},
	
	supportsAutoHeight: function() {
		return true;
	},
	
	loadDeferred: $.Deferred(),
	
	onLoaded: function() {
		return this.loadDeferred;
	}
	
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"gestpay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/gestpay","customConfiguration":null};
PluginWrapper._config.id = 'gestpay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/gestpay\/main.png";
PluginWrapper._config.template = "<form {{#content.store}}action=\"{{#content.demo}}https:\/\/testecomm.sella.it\/pagam\/pagam.aspx{{\/content.demo}}{{^content.demo}}https:\/\/ecomm.sella.it\/pagam\/pagam.aspx{{\/content.demo}}{{\/content.store}}\" method=\"post\" data-gateway-id=\"Gestpay\" style=\"width: 100%; height: 100%;\"{{^content.store}} target=\"_blank\"{{\/content.store}}>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"name\" value=\"{{content.name}}\" \/>\n\t<input type=\"hidden\" name=\"price\" value=\"{{content.price}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"{{id}}_submit\" value=\"1\" \/>\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#516b85',
			button_border: {
				color: '#ccc',
				style: 'none',
				weight: 1,
				css: { border: '1px none #ccc' },
				cssRaw: 'border: 1px none #ccc'
			},
			logo: 'gestpay.png',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#fff'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://www.gestpay.it/" target="_blank">https://www.gestpay.it/</a></p>'
				+ '<p><strong>These parameters must be enabled in Gestpay Back Office:</strong></p>'
				+ '<ul><li>Language</li></ul>'
				+ '<p><strong>URL for positive response</strong> (IT: <em>"URL per risposta positiva"</em>)<strong>:</strong><br />'
				+ '<pre>' + base_url + 'store-return/Gestpay' + '</pre></p>'
				+ '<p><strong>URL for negative response</strong> (IT: <em>"URL per risposta negativa"</em>)<strong>:</strong><br />'
				+ '<pre>' + base_url + 'store-cancel/Gestpay' + '</pre></p>'
				+ '<p><strong>URL Server to Server</strong> (IT: <em>"URL Server to Server"</em>)<strong>:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Gestpay' + '</pre></p>';
	},
	_settingsDialog: null,
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Gestpay',
	id: 'gestpay',
	keyFieldId: 'shop',
	keyField2Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [12,12], children: [
		{type: 'TextField', placeholder: __('Shop login'), id: 'key'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key2', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'price',
	currencyFieldId: 'currency',
	globalVars: ['shop', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	settingsTabDef: Globals.getSettingsContent()
});

PluginWrapper.registerPlugin('gestpay', {
	name: 'Gestpay',
	element: {
		minSize: {width: 70, height: 35},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Shop login'), helpText: __('Shop login code on Gestpay site')},
						{type: 'TextField', id: 'shop'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'price'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '242', name: 'EUR'},
							{id:   '1', name: 'USD'},
							{id: '187', name: 'AED'},
							{id: '109', name: 'AUD'},
							{id: '262', name: 'BGN'},
							{id: '234', name: 'BRL'},
							{id:  '12', name: 'CAD'},
							{id:   '3', name: 'CHF'},
							{id: '144', name: 'CNY'},
							{id: '223', name: 'CZK'},
							{id:   '7', name: 'DKK'},
							{id:   '2', name: 'GBP'},
							{id: '103', name: 'HKD'},
							{id: '229', name: 'HRK'},
							{id: '153', name: 'HUF'},
							{id: '123', name: 'IDR'},
							{id: '203', name: 'ILS'},
							{id:  '31', name: 'INR'},
							{id:  '62', name: 'ISK'},
							{id:  '71', name: 'JPY'},
							{id: '119', name: 'KRW'},
							{id:  '55', name: 'MYR'},
							{id:  '81', name: 'NGN'},
							{id:   '8', name: 'NOK'},
							{id: '113', name: 'NZD'},
							{id:  '66', name: 'PHP'},
							{id:  '26', name: 'PKR'},
							{id: '237', name: 'PLN'},
							{id: '270', name: 'RON'},
							{id: '244', name: 'RUB'},
							{id:  '75', name: 'SAR'},
							{id:   '9', name: 'SEK'},
							{id: '124', name: 'SGD'},
							{id:  '73', name: 'THB'},
							{id: '267', name: 'TRY'},
							{id: '143', name: 'TWD'},
							{id: '241', name: 'UAH'},
							{id: '145', name: 'VND'},
							{id:  '82', name: 'ZAR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Mode'), init: function() {
						var link = $('<a>').attr('href', 'javascript:void(0)').text(__('Settings'));
						link.on('click', function() {
							Globals.getSettingsDialog().setVisible(true);
						});
						var cont = $('<span>').css({fontWeight: 'normal', marginLeft: '4px'});
						cont.append('(');
						cont.append(link);
						cont.append(')');
						this._elem.append(cont);
					}},
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef()
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		fields.shop.setText(data.content.shop);
		fields.name.setText(data.content.name);
		fields.price.setText(data.content.price);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.shop = fields.shop.getText();
		data.content.name = fields.name.getText();
		data.content.price = fields.price.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.shop) data.content.shop = '';
		if (!data.content.name) data.content.name = '';
		if (!data.content.price) data.content.price = '1';
		if (!data.content.currency) data.content.currency = '242'; // EUR
		if (data.content.demo === undefined) data.content.demo = false;
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"payu","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/payu","customConfiguration":null};
PluginWrapper._config.id = 'payu';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/payu\/main.png";
PluginWrapper._config.template = "<form method=\"post\" action=\"https:\/\/secure.payu.com\/api\/v2_1\/orders\"{{^content.store}} target=\"_blank\"{{\/content.store}} data-gateway-id=\"Payu\" style=\"width: 100%; height: 100%;\">\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"merchantPosId\" value=\"{{content.merchantPosId}}\" \/>\n\t<input type=\"hidden\" name=\"currencyCode\" value=\"{{content.currencyCode}}\" \/>\n\t<input type=\"hidden\" name=\"description\" value=\"{{content.productName}}\" \/>\n\t<input type=\"hidden\" name=\"products[0].name\" value=\"{{content.productName}}\" \/>\n\t<input type=\"hidden\" name=\"products[0].unitPrice\" value=\"{{content.productPrice}}\" data-fixed-decimal=\"0\" data-multiplier=\"100\" \/>\n\t<input type=\"hidden\" name=\"products[0].quantity\" value=\"1\" \/>\n\t<input type=\"hidden\" name=\"totalAmount\" value=\"{{content.productPrice}}\" data-fixed-decimal=\"0\" data-multiplier=\"100\" \/>\n\t<input type=\"hidden\" name=\"extOrderId\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"notifyUrl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"continueUrl\" value=\"{returnUrl}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/payu/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: "#cccccc",
				style: 'solid',
				weight: 1,
				differ: false,
				css: "1px solid #cccccc",
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'payu_color.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'payu_color.svg', name: 'coloured'},
			{id: 'payu_black.svg', name: 'black'},
			{id: 'payu_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'PayU',
	id: 'payu',
	pageUrl: 'https://corporate.payu.com/',
	keyField: __('POS identifier'),
	keyFieldId: 'merchantPosId',
	keyField2: __('Private Key'),
	keyField2Id: 'privateKey',
	titleFieldId: 'label',
	nameFieldId: 'productName,description',
	priceFieldId: 'productPrice,totalAmount',
	currencyFieldId: 'currencyCode',
	globalVars: ['merchantPosId', 'privateKey'],
	defaultStyles: Globals.getDefaultStyles(true),
	useStylesInStoreCart: true,
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payu', true)
});
PluginWrapper.registerPlugin('payu', {
	name: 'PayU',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'productName', type: 'PayuProductName',
			get: function(data) { return data.content.productName; },
			set: function(value, data) {
				data.content.productName = value;
			}
		},
		{id: 'merchantPosId', type: 'PayuMerchantPosId', helpText: __("POS identifier provided by PayU"),
			get: function(data) { return data.content.merchantPosId; },
			set: function(value, data) {
				data.content.merchantPosId = value;
			}
		},
		{id: 'privateKey', type: 'PayuPrivateKey', helpText: __("Available in PayU Panel Manager as Second key (MD5)"),
			get: function(data) { return data.content.privateKey; },
			set: function(value, data) {
				data.content.privateKey = value;
			}
		},
		{id: 'productPrice', type: 'PayuProductPrice', helpText: __("Amount to be transferred"),
			get: function(data) { return data.content.productPrice; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.productPrice = value;
			}
		},
		{id: 'currencyCode', type: 'PayuCurrencyCode',
			get: function(data) { return data.content.currencyCode; },
			set: function(value, data) {
				data.content.currencyCode = value;
			}
		},
	], Globals.getLogosList(), 'payu'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'productName'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currencyCode', options: [
								{id: '#AED', name: 'AED', value: 'AED'},
								{id: '#ALL', name: 'ALL', value: 'ALL'},
								{id: '#AMD', name: 'AMD', value: 'AMD'},
								{id: '#ARS', name: 'ARS', value: 'ARS'},
								{id: '#AUD', name: 'AUD', value: 'AUD'},
								{id: '#AZN', name: 'AZN', value: 'AZN'},
								{id: '#BAM', name: 'BAM', value: 'BAM'},
								{id: '#BDT', name: 'BDT', value: 'BDT'},
								{id: '#BGN', name: 'BGN', value: 'BGN'},
								{id: '#BHD', name: 'BHD', value: 'BHD'},
								{id: '#BOB', name: 'BOB', value: 'BOB'},
								{id: '#BRL', name: 'BRL', value: 'BRL'},
								{id: '#BYN', name: 'BYN', value: 'BYN'},
								{id: '#CAD', name: 'CAD', value: 'CAD'},
								{id: '#CHF', name: 'CHF', value: 'CHF'},
								{id: '#CLP', name: 'CLP', value: 'CLP'},
								{id: '#CNY', name: 'CNY', value: 'CNY'},
								{id: '#COP', name: 'COP', value: 'COP'},
								{id: '#CRC', name: 'CRC', value: 'CRC'},
								{id: '#CVE', name: 'CVE', value: 'CVE'},
								{id: '#CZK', name: 'CZK', value: 'CZK'},
								{id: '#DKK', name: 'DKK', value: 'DKK'},
								{id: '#DOP', name: 'DOP', value: 'DOP'},
								{id: '#DZD', name: 'DZD', value: 'DZD'},
								{id: '#EGP', name: 'EGP', value: 'EGP'},
								{id: '#ETB', name: 'ETB', value: 'ETB'},
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#GBP', name: 'GBP', value: 'GBP'},
								{id: '#GEL', name: 'GEL', value: 'GEL'},
								{id: '#GNF', name: 'GNF', value: 'GNF'},
								{id: '#GTQ', name: 'GTQ', value: 'GTQ'},
								{id: '#HKD', name: 'HKD', value: 'HKD'},
								{id: '#HNL', name: 'HNL', value: 'HNL'},
								{id: '#HRK', name: 'HRK', value: 'HRK'},
								{id: '#HUF', name: 'HUF', value: 'HUF'},
								{id: '#IDR', name: 'IDR', value: 'IDR'},
								{id: '#ILS', name: 'ILS', value: 'ILS'},
								{id: '#INR', name: 'INR', value: 'INR'},
								{id: '#IQD', name: 'IQD', value: 'IQD'},
								{id: '#IRR', name: 'IRR', value: 'IRR'},
								{id: '#ISK', name: 'ISK', value: 'ISK'},
								{id: '#JOD', name: 'JOD', value: 'JOD'},
								{id: '#JPY', name: 'JPY', value: 'JPY'},
								{id: '#KES', name: 'KES', value: 'KES'},
								{id: '#KGS', name: 'KGS', value: 'KGS'},
								{id: '#KRW', name: 'KRW', value: 'KRW'},
								{id: '#KWD', name: 'KWD', value: 'KWD'},
								{id: '#KZT', name: 'KZT', value: 'KZT'},
								{id: '#LBP', name: 'LBP', value: 'LBP'},
								{id: '#LKR', name: 'LKR', value: 'LKR'},
								{id: '#MAD', name: 'MAD', value: 'MAD'},
								{id: '#MDL', name: 'MDL', value: 'MDL'},
								{id: '#MGA', name: 'MGA', value: 'MGA'},
								{id: '#MKD', name: 'MKD', value: 'MKD'},
								{id: '#MNT', name: 'MNT', value: 'MNT'},
								{id: '#MXN', name: 'MXN', value: 'MXN'},
								{id: '#MYR', name: 'MYR', value: 'MYR'},
								{id: '#MZN', name: 'MZN', value: 'MZN'},
								{id: '#NGN', name: 'NGN', value: 'NGN'},
								{id: '#NIO', name: 'NIO', value: 'NIO'},
								{id: '#NOK', name: 'NOK', value: 'NOK'},
								{id: '#NZD', name: 'NZD', value: 'NZD'},
								{id: '#OMR', name: 'OMR', value: 'OMR'},
								{id: '#PEN', name: 'PEN', value: 'PEN'},
								{id: '#PHP', name: 'PHP', value: 'PHP'},
								{id: '#PKR', name: 'PKR', value: 'PKR'},
								{id: '#PLN', name: 'PLN', value: 'PLN'},
								{id: '#PYG', name: 'PYG', value: 'PYG'},
								{id: '#QAR', name: 'QAR', value: 'QAR'},
								{id: '#RON', name: 'RON', value: 'RON'},
								{id: '#RSD', name: 'RSD', value: 'RSD'},
								{id: '#RUB', name: 'RUB', value: 'RUB'},
								{id: '#SAR', name: 'SAR', value: 'SAR'},
								{id: '#SEK', name: 'SEK', value: 'SEK'},
								{id: '#SGD', name: 'SGD', value: 'SGD'},
								{id: '#SYP', name: 'SYP', value: 'SYP'},
								{id: '#THB', name: 'THB', value: 'THB'},
								{id: '#TJS', name: 'TJS', value: 'TJS'},
								{id: '#TND', name: 'TND', value: 'TND'},
								{id: '#TRY', name: 'TRY', value: 'TRY'},
								{id: '#TWD', name: 'TWD', value: 'TWD'},
								{id: '#TZS', name: 'TZS', value: 'TZS'},
								{id: '#UAH', name: 'UAH', value: 'UAH'},
								{id: '#UGX', name: 'UGX', value: 'UGX'},
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#UYU', name: 'UYU', value: 'UYU'},
								{id: '#UZS', name: 'UZS', value: 'UZS'},
								{id: '#VEF', name: 'VEF', value: 'VEF'},
								{id: '#VND', name: 'VND', value: 'VND'},
								{id: '#XAF', name: 'XAF', value: 'XAF'},
								{id: '#XOF', name: 'XOF', value: 'XOF'},
								{id: '#YER', name: 'YER', value: 'YER'},
								{id: '#ZAR', name: 'ZAR', value: 'ZAR'}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred")},
							{type: 'TextField', id: 'productPrice'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('POS identifier'), helpText: __("POS identifier provided by PayU")},
							{type: 'TextField', id: 'merchantPosId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Private Key'), helpText: __("Available in PayU Panel Manager as Second key (MD5)")},
							{type: 'TextField', id: 'privateKey'}
						]}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payu')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		fields.productName.setText(data.content.productName);
		fields.productPrice.setText(data.content.productPrice);
		itm = fields.currencyCode.getItemById('#' + data.content.currencyCode);
		fields.currencyCode.selectItem(itm);
		fields.merchantPosId.setText(data.content.merchantPosId);
		fields.privateKey.setText(data.content.privateKey);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.productName = fields.productName.getText();
		data.content.productPrice = fields.productPrice.getText();
		itm = fields.currencyCode.getSelectedItem();
		data.content.currencyCode = itm.getOriginal().value;
		data.content.merchantPosId = fields.merchantPosId.getText();
		data.content.privateKey  = fields.privateKey .getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.productName) data.content.productName = '';
		if (!data.content.productPrice) data.content.productPrice = '1';
		if (!data.content.currencyCode) data.content.currencyCode = 'USD';
		if (!data.content.merchantPosId) data.content.merchantPosId = '';
		if (!data.content.privateKey) data.content.privateKey = '';
		if (['payu.png', 'payu-logo.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'payu_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"iyzico","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/iyzico","customConfiguration":null};
PluginWrapper._config.id = 'iyzico';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/iyzico\/main.png";
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\r\n{{#isPublished}}\r\n<div class=\"modal fade\" id=\"iyzicoModal_{{id}}\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\r\n                <h4 class=\"modal-title\" id=\"myModalLabel\">iyzico<\/h4>\r\n            <\/div>\r\n            <div class=\"modal-body\">\r\n                <form id=\"iyzicoForm_{{id}}\" method=\"post\" action=\"\" data-gateway-id=\"Iyzico\">\r\n                    <input type=\"hidden\" name=\"action\" value=\"pay\"\/>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>{{content.__t.first_name}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                            <input class=\"form-control input-sm\" type=\"text\" name=\"first_name\" required=\"required\" \/>\r\n                        <\/div>\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>{{content.__t.last_name}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                            <input class=\"form-control input-sm\" type=\"text\" name=\"last_name\" required=\"required\" \/>\r\n                        <\/div>\r\n                    <\/div>\r\n                    <div class=\"form-group\">\r\n                        <label>{{content.__t.email}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                        <input class=\"form-control input-sm\" type=\"email\" name=\"email\" required=\"required\" \/>\r\n                    <\/div>\r\n                    <div class=\"form-group\">\r\n                        <label>{{content.__t.identity_number}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                        <input class=\"form-control input-sm\" type=\"text\" name=\"identity_number\" minlength=\"6\" required=\"required\" \/>\r\n                        <p class=\"help-block\">{{content.__t.identity_number_helper}}<\/p>\r\n                    <\/div>\r\n                    <hr>\r\n                    <div class=\"form-group\">\r\n                        <label>{{content.__t.address}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                        <input class=\"form-control input-sm\" type=\"text\" name=\"address\" required=\"required\" \/>\r\n                    <\/div>\r\n                    <div class=\"row\">\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>{{content.__t.country}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                            <input class=\"form-control input-sm\" type=\"text\" name=\"country\" required=\"required\" \/>\r\n                        <\/div>\r\n                        <div class=\"form-group col-sm-6\">\r\n                            <label>{{content.__t.city}} <span style=\"color: #c00;\">*<\/span><\/label>\r\n                            <input class=\"form-control input-sm\" type=\"text\" name=\"city\" required=\"required\" \/>\r\n                        <\/div>\r\n                    <\/div>\r\n                    <input class=\"hidden\" type=\"submit\"\/>\r\n                    {{#content.store}}\r\n                    <input type=\"hidden\" name=\"price\" value=\"{{content.price}}\" \/>\r\n                    <input type=\"hidden\" name=\"name\" value=\"{{content.name}}\" \/>\r\n                    <input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\r\n                    <input type=\"hidden\" name=\"callbackurl\" value=\"{callbackUrl}\" \/>\r\n\t\t\t\t\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\r\n                    {{\/content.store}}\r\n                <\/form>\r\n            <\/div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\r\n                <button type=\"button\" class=\"btn btn-primary\" onclick=\"nextIyzicoStep_{{id}}()\">{{content.__t.next}}<\/button>\r\n            <\/div>\r\n        <\/div>\r\n    <\/div>\r\n<\/div>\r\n<script>\r\n\tfunction showIyzico_{{id}}(){\r\n\t\t$('#iyzicoModal_{{id}}').appendTo(\"body\");\r\n\t\t$('#iyzicoModal_{{id}}').modal('show');\r\n\t}\r\n\tfunction nextIyzicoStep_{{id}}() {\r\n\t\tvar izycoForm = $('#iyzicoForm_{{id}}');\r\n\t\tizycoForm.find(':submit').click();\r\n\t}\r\n\t{{#content.store}}\r\n\t$('#iyzicoModal_{{id}}').on('show.bs.modal', function() {\r\n\t\tvar url = $('base').attr('href') + 'requestGetBillingInfo\/Iyzico';\r\n\t\t$.get(url, function(resp) {\r\n\t\t\tvar elems = $('#iyzicoForm_{{id}}').get(0).elements;\r\n\t\t\tif (resp.firstName) elems['first_name'].value = resp.firstName;\r\n\t\t\tif (resp.lastName) elems['last_name'].value = resp.lastName;\r\n\t\t\tif (resp.email) elems['email'].value = resp.email;\r\n\t\t\tif (resp.address1) elems['address'].value = resp.address1;\r\n\t\t\tif (resp.country) elems['country'].value = resp.country;\r\n\t\t\tif (resp.city) elems['city'].value = resp.city;\r\n\t\t});\r\n\t});\r\n\t{{\/content.store}}\r\n\t$('#{{id}}_payment_gateway_button').on('click', showIyzico_{{id}});\r\n<\/script>\r\n{{\/isPublished}}\r\n{{^content.store}}\r\n{{{requireService}}}\r\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/iyzico/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#337ab7',
			button_border: {
				color: "#2e6da4",
				style: 'solid',
				weight: 1,
				differ: false,
				css: { border: "1px solid #2e6da4" },
				cssRaw: 'border: none; border-bottom: 1px solid #2e6da4;'
			},
			logo: 'iyzico_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#b0ddff'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: 'Şimdi Öde',
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'iyzico_color.svg', name: 'color'},
			{id: 'iyzico_dark.svg', name: 'dark'},
			{id: 'iyzico_white.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'iyzicopayu_color.svg', name: 'payu_color'},
			{id: 'iyzicopayu_dark.svg', name: 'payu_dark'},
			{id: 'iyzicopayu_white.svg', name: 'payu_white', backgroundColor: '#000000'}
		];
	}
};

(function() {
	if (typeof window.iyzico_translations === 'undefined') {
		window.iyzico_translations = {
			'first_name': __c('First Name'),
			'last_name': __c('Last Name'),
			'email': __c('E-mail'),
			'identity_number': __c('Identity number'),
			'identity_number_helper': __c('Identity number of buyer. TCKN for Turkish merchants, passport number for foreign merchants'),
			'address': __c('Address'),
			'country': __c('Country'),
			'city': __c('City'),
			'close': __c('Close'),
			'next': __c('Next'),
			'buyer': __c('Buyer'),
			'price': __c('Price'),
			'pay': __c('Pay'),
			'unknown_error': __c('Unknown error')
		};
	}
})();

ElementRegister.registerPaymentGateway({
	name: 'iyzico',
	id: 'iyzico',
	pageUrl: 'https://www.iyzico.com/',
	keyFieldId: 'api_key',
	keyField2Id: 'secret_key',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('API Key'), id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'price',
	currencyFieldId: 'currency',
	globalVars: ['api_key', 'secret_key', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'iyzico', true),
	__t: window.iyzico_translations
});

PluginWrapper.registerPlugin('iyzico', {
	name: 'iyzico',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'api_key', type: 'IyzicoApiKey',
			get: function(data) { return data.content.api_key; },
			set: function(value, data) {
				data.content.api_key = value;
			}
		},
		{id: 'secret_key', type: 'IyzicoSecretKey',
			get: function(data) { return data.content.secret_key; },
			set: function(value, data) {
				data.content.secret_key = value;
			}
		},
		{id: 'name', type: 'IyzicoName',
			get: function(data) { return data.content.name; },
			set: function(value, data) {
				data.content.name = value;
			}
		},
		{id: 'price', type: 'IyzicoPrice',
			get: function(data) { return data.content.price; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.price = value;
			}
		},
		{id: 'currency', type: 'IyzicoCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'IyzicoDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'iyzico'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('API Key'), helpText: __('This key you can get in account settings page')},
							{type: 'TextField', id: 'api_key'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Secret Key'), helpText: __('This key you can get in account settings page')},
							{type: 'TextField', id: 'secret_key'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'name'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'price'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: '#TRY', name: 'TRY', value: 'TRY'},
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#GBP', name: 'GBP', value: 'GBP'},
								{id: '#IRR', name: 'IRR', value: 'IRR'}
							]}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
							this.getElem().attr('title', __('For testing purpose without real payments'));
							this.getElem().tooltip({placement: 'right'});
						}}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'iyzico')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.name.setText(data.content.name);
		fields.price.setText(data.content.price);
		fields.api_key.setText(data.content.api_key);
		fields.secret_key.setText(data.content.secret_key);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.name = fields.name.getText();
		data.content.price = fields.price.getText();
		data.content.api_key = fields.api_key.getText();
		data.content.secret_key = fields.secret_key.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__t = window.iyzico_translations;
		if (!data.content.name) data.content.name = '';
		if (!data.content.price) data.content.price = '1';
		if (!data.content.currency) data.content.currency = 'TRY';
		if (!data.content.api_key) data.content.api_key = '';
		if (!data.content.secret_key) data.content.secret_key = '';
		if (data.content.demo === undefined) data.content.demo = true;
		if (['iyzico.svg'].indexOf(data.content.logo) > -1)
			data.content.logo = 'iyzico_color.svg';
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"vkontakte_like","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/vkontakte_like","customConfiguration":null};
PluginWrapper._config.id = 'vkontakte_like';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/vkontakte_like\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n\t{{#isPreview}}\n\t\t{{{content.previewHtml}}}\n\t{{\/isPreview}}\n\t{{^isPreview}}\n\t\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"\/\/vk.com\/js\/api\/openapi.js?116\"><\/script>\n<script type=\"text\/javascript\"> VK.init({apiId: '{{content.finalAppId}}', onlyWidgets: true}); <\/script>\n\t\t{{\/firstOnPage}}\n<div id=\"{{id}}_vk_like\" class=\"vk_like wb-prevent-layout-click\"><\/div>\n<script type=\"text\/javascript\">\n\tif (window.VK) VK.Widgets.Like('{{id}}_vk_like', {type: '{{content.type}}', verb: {{content.verb}}, height: {{content.height}}});\n<\/script>\n\t{{\/isPreview}}\n{{\/isPublished}}\n{{^isPublished}}\n<!-- dynamic -->\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

PluginWrapper.registerPlugin('vkontakte_like', {
	name: 'Like',
	noButton: true,
	element: {
		minSize: {width: 20, height: 20},
		defaultSize: {width: 110, height: 30},
		renderOnce: true,
		resizable: true
	},
	propertyDialog: {
		//size: {width: 500, height: 400},
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('App ID'), helpText: __('Create app at %s').replace('%s', 'https://vk.com/apps?act=manage')},
						{type: 'TextField', id: 'appId', change: function(fields) {
							fields.__self.notifyHelpSystemPlayer('prop-appId-change');
						}}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Button Layout')},
							{type: 'RadioBox', id: 'typeButton', label: __('Button with mini counter'), group: 'bl', change: function(fields) {
								fields.__self.notifyHelpSystemPlayer('prop-typeButton-change');
							}},
							{type: 'RadioBox', id: 'typeFull', label: __('Button with text counter'), group: 'bl', change: function(fields) {
								fields.__self.notifyHelpSystemPlayer('prop-typeFull-change');
							}},
							{type: 'RadioBox', id: 'typeMini', label: __('Mini button'), group: 'bl', change: function(fields) {
								fields.__self.notifyHelpSystemPlayer('prop-typeMini-change');
							}},
							{type: 'RadioBox', id: 'typeVertical', label: __('Mini button with counter at the top'), group: 'bl', change: function(fields) {
								fields.__self.notifyHelpSystemPlayer('prop-typeVertical-change');
							}}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Button Height')},
							{type: 'DropdownBox', id: 'height', options: [
								{id: '#18', name: '18 px', value: 18},
								{id: '#20', name: '20 px', value: 20},
								{id: '#22', name: '22 px', value: 22},
								{id: '#24', name: '24 px', value: 24}
							], change: function(fields) {
								fields.__self.notifyHelpSystemPlayer('prop-height-change');
							}},
							{type: 'Label', text: __('Button Name'), css: {marginTop: 15}},
							{type: 'DropdownBox', id: 'verb', options: [
								{id: '#0', name: __('Like'), value: 0},
								{id: '#1', name: __('This is interesting'), value: 1}
							], change: function(fields) {
								fields.__self.notifyHelpSystemPlayer('prop-verb-change');
							}}
						]}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		placeholderAppId: '1936057',
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://vk.com/js/api/openapi.js?116', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	properties: [
		{id: 'appId', type: 'VkontakteLikeAppId', helpText: __('Create app at %s').replace('%s', 'https://vk.com/apps?act=manage'),
			get: function(data) { return data.content.appId; },
			set: function(value, data) {
				data.content.appId = value;
				this.setFinalAppId(data);
				this.finalizePreview(data);

			}
		},
		{id: 'buttonHeight', type: 'VkontakteLikeButtonHeight',
			get: function(data) { return data.content.height; },
			set: function(value, data) {
				data.content.height = value;
				this.previewHelper.setHeight(data.content.height);
				this.finalizePreview(data);
			}
		},
		{id: 'verb', type: 'VkontakteLikeButtonName',
			get: function(data) { return data.content.verb; },
			set: function(value, data) {
			console.log(value);
				data.content.verb = value;
				this.previewHelper.setVerb(data.content.verb);
				this.finalizePreview(data);
			}
		},
		{id: 'buttonLayout', type: 'VkontakteLikeButtonLayout',
			get: function(data) { return data.content.type; },
			set: function(value, data) {
				data.content.type = value;
				this.previewHelper.setType(data.content.type);
				this.finalizePreview(data);
			}
		},
	],
	previewHelper: {
		parentElem: null,
		elem: null,
		btnElem: null,
		counterElem: null,
		textCounterElem: null,
		textElem: null,
		type: 'button',
		init: function(parent) {
			this.parentElem = parent;
			this.elem = $('<div>');
			this.btnElem = $('<div>').css({
				minWidth: '41px',
				background: '#5F83AA',
				border: 'none',
				borderRadius: '2px',
				margin: '0px',
				padding: '3px',
				fontWeight: 'bold',
				fontSize: '10px',
				lineHeight: '12px',
				fontFamily: 'tahoma,verdana,arial,sans-serif,Lucida Sans',
				color: '#ffffff',
				textAlign: 'center',
				whiteSpace: 'nowrap',
				float: 'left',
				clear: 'left'
			});
			this.counterElem = $('<div>').css({
				minWidth: '41px',
				background: '#ffffff',
				border: '1px solid #BBBFC4',
				borderRadius: '2px',
				margin: '0px 0px 8px 0px',
				padding: '2px',
				fontWeight: 'bold',
				fontSize: '10px',
				lineHeight: '12px',
				fontFamily: 'tahoma,verdana,arial,sans-serif,Lucida Sans',
				color: '#666C73',
				textAlign: 'center',
				whiteSpace: 'nowrap',
				float: 'left'
			});
			this.textCounterElem = $('<div>').css({
				padding: '2px 2px 2px 8px',
				fontWeight: 'normal',
				fontSize: '10px',
				lineHeight: '12px',
				fontFamily: 'tahoma,verdana,arial,sans-serif,Lucida Sans',
				color: '#000000',
				whiteSpace: 'nowrap',
				float: 'left'
			});
			this.textElem = $('<span>').css({
				fontWeight: 'normal',
				marginLeft: '4px',
				display: 'inline-block'
			});
			this.counterElem.text('123K');
			this.textCounterElem.html('<b>123456</b> people find this interesting');
			this.btnElem.text('VK');
			this.elem.append(this.counterElem).append(this.btnElem.append(this.textElem));
			this.parentElem.append(this.elem);
		},
		setType: function(type) {
			this.type = type;
			if (type === 'full') {
				this.counterElem.detach();
				this.textCounterElem.detach().appendTo(this.elem);
			} else if (type === 'mini') {
				this.textCounterElem.detach();
				this.counterElem.detach().appendTo(this.elem);
				this.counterElem.css({marginBottom: '0px', marginLeft: '8px'});
			} else if (type === 'vertical') {
				this.textCounterElem.detach();
				this.counterElem.detach().prependTo(this.elem);
				this.counterElem.css({marginBottom: '8px', marginLeft: '0px'});
			} else { // (type === 'button')
				this.textCounterElem.detach();
				this.counterElem.detach().appendTo(this.elem);
				this.counterElem.css({marginBottom: '0px', marginLeft: '8px'});
			}
		},
		setVerb: function(verb) {
			if (this.type === 'mini' || this.type === 'vertical') {
				this.textElem.html('<i class="icon-heart icon-white" style="color:#AFC1D5; margin-bottom: -1px; margin-top: -1px; vertical-align: top; display: inline-block;"></i>');
			} else {
				if (verb === 1) {
					this.textElem.text('This is interesting');
				} else {
					this.textElem.text('Like');
				}
			}
		},
		setHeight: function(height) {
			var fontSize, lineHeight, paddingTop, paddingBottom;
			if (height === 24) {
				fontSize = 11; lineHeight = 13; paddingTop = 4; paddingBottom = 5;
			} else if (height === 22) {
				fontSize = 11; lineHeight = 13; paddingTop = 3; paddingBottom = 4;
			} else if (height === 20) {
				fontSize = 10; lineHeight = 12; paddingTop = paddingBottom = 3;
			} else { // (height === 18)
				fontSize = 10; lineHeight = 12; paddingTop = paddingBottom = 2;
			}
			this.counterElem.css({fontSize: (fontSize + 'px'), lineHeight: (lineHeight + 'px'), paddingTop: (paddingTop + 'px'), paddingBottom: (paddingBottom + 'px')});
			this.textCounterElem.css({fontSize: (fontSize + 'px'), lineHeight: (lineHeight + 'px'), paddingTop: ((paddingTop + 1) + 'px'), paddingBottom: ((paddingBottom + 1) + 'px')});
			this.btnElem.css({fontSize: (fontSize + 'px'), lineHeight: (lineHeight + 'px'), paddingTop: ((paddingTop + 1) + 'px'), paddingBottom: ((paddingBottom + 1) + 'px')});
		}
	},

	finalizePreview: function(data) {
		data.content.previewHtml = this.previewHelper.elem.html();
		var rwidth = 1 + this.previewHelper.btnElem.outerWidth(true) + ((data.content.type === 'vertical') ? 0 : ((data.content.type === 'full') ? this.previewHelper.textCounterElem.outerWidth(true) : this.previewHelper.counterElem.outerWidth(true))),
			rheight = (data.content.type === 'vertical') ? (data.content.height * 2 + 8) : data.content.height;

		this.setSize(rwidth, rheight);
	},

	setFinalAppId: function(data) {
		if (/^\d*$/.test(data.content.appId)) {
			data.content.finalAppId = data.content.appId;
		} else {
			data.content.finalAppId = this.pluginScoped.placeholderAppId;
		}
	},
	
	openAction: function(fields, data, elem) {
		var itm;
		fields.__self = this;
		fields.appId.setText(data.content.appId);
		fields.typeButton.setValue(data.content.type === 'button');
		fields.typeFull.setValue(data.content.type === 'full');
		fields.typeMini.setValue(data.content.type === 'mini');
		fields.typeVertical.setValue(data.content.type === 'vertical');
		itm = fields.height.getItemById('#' + data.content.height);
		fields.height.selectItem(itm);
		itm = fields.verb.getItemById('#' + data.content.verb);
		fields.verb.selectItem(itm);		
	},
	applyAction: function(fields, data, elem) {
		var itm;
		data.content.appId = fields.appId.getText();
		if (fields.typeButton.getValue()) data.content.type = 'button';
		if (fields.typeFull.getValue()) data.content.type = 'full';
		if (fields.typeMini.getValue()) data.content.type = 'mini';
		if (fields.typeVertical.getValue()) data.content.type = 'vertical';
		itm = fields.height.getSelectedItem();
		data.content.height = itm.getOriginal().value;
		itm = fields.verb.getSelectedItem();
		data.content.verb = itm.getOriginal().value;
		
		this.previewHelper.setType(data.content.type);
		this.previewHelper.setVerb(data.content.verb);
		this.previewHelper.setHeight(data.content.height);
		this.finalizePreview(data);
		this.setFinalAppId(data);
	},
	loadAction: function(data) {
		if (!data.content.appId) data.content.appId = '';
		if (!data.content.finalAppId) data.content.finalAppId = '';
		if (!data.content.type) data.content.type = 'button';
		if (!data.content.verb) data.content.verb = 0;
		if (!data.content.height) data.content.height = 22;
		if (!data.content.previewHtml) data.content.previewHtml = '';
		this.setFinalAppId(data);
	},
	loadedAction: function(data, elem) {
		this.previewHelper.init(elem);
		this.previewHelper.setType(data.content.type);
		this.previewHelper.setVerb(data.content.verb);
		this.previewHelper.setHeight(data.content.height);
		data.content.previewHtml = this.previewHelper.elem.html();
		// /*this.pluginScoped.addListener(this, function() {
		// 	window.VK.init({apiId: data.content.apiId, onlyWidgets: true});
		// 	window.VK.Widgets.Like(data.id + '_vk_like', {type: data.content.type, verb: data.content.verb, height: data.content.height});
		// });*/
	}
	
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"tawkto","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/tawkto","customConfiguration":null};
PluginWrapper._config.id = 'tawkto';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/tawkto\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n\t<div class=\"wb_caption smaller\">\n\t\t<div>\n\t\t\t<i class=\"ico-pl-tawkto\"><\/i> tawk.to\n\t\t<\/div>\n\t<\/div>\n{{\/isPublished}}\n{{#firstOnPage}}\n<!--Start of Tawk.to Script-->\n<script type=\"text\/javascript\">\n\tvar Tawk_API=Tawk_API||{}, Tawk_LoadStart=new Date();\n\t(function(){\n\t\tvar s1=document.createElement(\"script\"),s0=document.getElementsByTagName(\"script\")[0];\n\t\ts1.async=true;\n\t\ts1.src='https:\/\/embed.tawk.to\/{{content.siteId}}\/default';\n\t\ts1.charset='UTF-8';\n\t\ts1.setAttribute('crossorigin','*');\n\t\ts0.parentNode.insertBefore(s1,s0);\n\t})();\n<\/script>\n<!--End of Tawk.to Script-->\n{{\/firstOnPage}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('tawkto', {
    name: 'Tawk.to',
    element: {
        minSize: {
            width: 190,
            height: 70
        },
        defaultSize: {
            width: 190,
            height: 70
        },
        resizable: false,
		supportsFullWidth: false
    },
    properties: [
        {id: 'siteId', type: 'TawktoSiteId', helpText: __('Site ID you can found in tawk.to admin dashboard on property settings page'),
            get: function(data) { return data.content.siteId; },
            validate: function(value) {
                if (/^[\d\w]*$/.test(value)) return '';
                else return __('This ID is incorrect');
            },
            set: function(value, data) {
                data.content.siteId = (/^[\d\w]*$/.test(value) ? value : '');
            }
        },
    ],
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [{
                type: 'VerticalLayout',
                children: [{
                    type: 'Label',
                    text: __('Site ID'),
					helpText: __('Site ID you can found in tawk.to admin dashboard on property settings page')
                }, {
                    type: 'TextField',
                    id: 'siteId'
                }]
            }]
        }]
    },
    resizeTimeout: null,

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.siteId.setText(data.content.siteId);
    },
    applyAction: function(fields, data, elem) {
        data.content.siteId = fields.siteId.getText();
    },
    loadAction: function(data) {
		if (!data.content.siteId) data.content.siteId = '';
    },
	loadedAction: function(data, elem) {
        var thisClass = this;
        elem.parent().children('.wb_controls').on('dblclick', function() { thisClass.openProperties(); });
    }
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"braintree","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/braintree","customConfiguration":null};
PluginWrapper._config.id = 'braintree';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/braintree\/main.png";
PluginWrapper._config.template = "{{#content.store}}\r\n<form method=\"post\" data-gateway-id=\"Braintree\" id=\"{{id}}_form\" style=\"width: 100%; height: 100%;\">\r\n\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\r\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\r\n\t{{{content.paymentGatewayButton}}}\r\n<\/form>\r\n<script type=\"text\/javascript\">\r\n\tsetTimeout(function() { \/\/ use timeout so that StoreModule.js assigned event to form in time\r\n\t\t$('#{{id}}_form').on('beforesend', function() {\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\twindow.{{id}}_show_braintree();\r\n\t\t\t}, 100);\r\n\t\t});\r\n\t}, 50);\r\n<\/script>\r\n{{\/content.store}}\r\n{{^content.store}}\r\n{{{content.paymentGatewayButton}}}\r\n{{\/content.store}}\r\n\r\n{{#isPublished}}\r\n<script type=\"text\/javascript\">\r\n\t(function() {\r\n\t\twindow.{{id}}_show_braintree = function() {\r\n\t\t\t$('#{{id}}_braintree_modal').modal('show');\r\n\t\t};\r\n\t\twindow.{{id}}_submit = function() {\r\n\t\t\t$('#{{id}}_form').find('input[type=\"submit\"]').trigger('click');\r\n\t\t};\r\n\t\t{{^content.store}}\r\n\t\t$('#{{id}}_payment_gateway_button').on('click', {{id}}_show_braintree);\r\n\t\t{{\/content.store}}\r\n\t})();\r\n<\/script>\r\n<div class=\"modal fade\" id=\"{{id}}_braintree_modal\" role=\"dialog\">\r\n\t<div class=\"modal-dialog\">\r\n\t\t<div class=\"modal-content\">\r\n\t\t\t<div class=\"modal-header\">\r\n\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;<\/button>\r\n\t\t\t\t<h4 class=\"modal-title\">Braintree<\/h4>\r\n\t\t\t<\/div>\r\n\t\t\t<div class=\"modal-body\">\r\n\t\t\t\t{{{requireService}}}\r\n\t\t\t<\/div>\r\n\t\t\t<div class=\"modal-footer\">\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-default\" id=\"{{id}}_braintree-close-button\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\r\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"{{id}}_braintree-submit-button\">{{content.__t.pay}}<\/button>\r\n\t\t\t<\/div>\r\n\t\t<\/div>\r\n\t<\/div>\r\n<\/div>\r\n<script type=\"text\/javascript\">\r\n\t$('#{{id}}_braintree_modal').appendTo('body');\r\n<\/script>\r\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/braintree/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#000',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #000' },
				cssRaw: 'border: 1px solid #000'
			},
			logo: 'braintree_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'braintree_color.svg', name: 'coloured'},
			{id: 'braintree_white.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'braintree_white_tiny.svg', name: 'white tiny' , backgroundColor: '#000000'},
			{id: 'braintree_black_tiny.svg', name: 'black tiny'},
		];
	},
	getTranslations: function() {
		return {
			'pay': __c('Pay'),
			'close': __c('Close'),
			'Error': __c('Error'),
			'loading...': __c('loading...'),
			'Unknown error': __c('Unknown error'),
			'Transaction ID': __c('Transaction ID'),
			'Payment has been submitted': __c('Payment has been submitted')
		};
	}
};

ElementRegister.registerPaymentGateway({
    name: 'Braintree',
    id: 'braintree',
	pageUrl: 'https://www.braintreepayments.com/',
    keyFieldId: 'merchant_id',
    keyField2Id: 'public_key',
    keyField3Id: 'private_key',
	keyField4Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [12,6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Public Key'), id: 'key2', css: {marginTop: 5}},
		{type: 'TextField', placeholder: __('Private Key'), id: 'key3', css: {marginTop: 5}},
		{type: 'CheckBox', label: __('Test mode'), id: 'key4', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
    priceFieldId: 'amount',
	titleFieldId: 'label',
	globalVars: ['merchant_id', 'public_key', 'private_key', 'demo'],
	__t: Globals.getTranslations(),
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'braintree', true)
});
PluginWrapper.registerPlugin('braintree', {
    name: 'Braintree',
    element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 81},
		resizable: true
    },
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchant_id', type: 'BraintreeMerchantId', helpText: __('This key you can get in account settings page'),
			get: function(data) { return data.content.merchant_id; },
			set: function(value, data) {
				data.content.merchant_id = value;
			}
		},
		{id: 'public_key', type: 'BraintreePublicKey', helpText: __('This key you can get in account settings page'),
			get: function(data) { return data.content.public_key; },
			set: function(value, data) {
				data.content.public_key = value;
			}
		},
		{id: 'private_key', type: 'BraintreePrivateKey', helpText: __('This key you can get in account settings page'),
			get: function(data) { return data.content.private_key; },
			set: function(value, data) {
				data.content.private_key = value;
			}
		},
		{id: 'amount', type: 'BraintreeAmount', helpText: __('Amount to be transferred') + '. ' + __('Currency is set in accounts settings page'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'demo', type: 'BraintreeDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'braintree'),
    propertyDialog: {
        noScroll: true,
        tabs: [
            {children: [
				{type: 'HorizontalLayout', columnWeights: [4, 4, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID'), helpText: __('This key you can get in account settings page')},
						{type: 'TextField', id: 'merchant_id'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Public Key'), helpText: __('This key you can get in account settings page')},
						{type: 'TextField', id: 'public_key'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Private Key'), helpText: __('This key you can get in account settings page')},
						{type: 'TextField', id: 'private_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [8], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + '. ' + __('Currency is set in accounts settings page')},
						{type: 'TextField', id: 'amount'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
	        PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'braintree')
        ]
    },
    openAction: function (fields, data, elem) {
        var itm;
        fields.amount.setText(data.content.amount);
        fields.merchant_id.setText(data.content.merchant_id);
        fields.public_key.setText(data.content.public_key);
        fields.private_key.setText(data.content.private_key);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
    },
    applyAction: function (fields, data, elem) {
        var itm;
        data.content.amount = fields.amount.getText();
        data.content.merchant_id = fields.merchant_id.getText();
        data.content.public_key = fields.public_key.getText();
        data.content.private_key = fields.private_key.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
    },
    loadAction: function (data) {
		data.content.__t = Globals.getTranslations();
        if (!data.content.amount) data.content.amount = '1';
        if (!data.content.merchant_id) data.content.merchant_id = ''; // wd36rwgys9sbgp5h
        if (!data.content.public_key) data.content.public_key = ''; // pxnqqygsb8jnkgvh
        if (!data.content.private_key) data.content.private_key = ''; // 58639f7fd806508c101f9f78c61ddab3
		if (data.content.demo === undefined) data.content.demo = false;
		if (['logo.svg', 'logo-2.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'braintree_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
    },
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.fontFamily ) items.push(data.content.fontFamily);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"twitter","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/twitter","customConfiguration":null};
PluginWrapper._config.id = 'twitter';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/twitter\/main.png";
PluginWrapper._config.template = "<a class=\"twitter-timeline\" data-theme=\"{{content.theme}}\" data-width=\"{{width}}\" data-link-color=\"{{content.linkColor}}\" data-height=\"{{height}}\" href=\"{{content.url}}\">Twitter<\/a> <script async src=\"\/\/platform.twitter.com\/widgets.js\" charset=\"utf-8\"><\/script>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
PluginWrapper.registerPlugin('twitter', {
    name: 'Twitter',
    element: {
        minSize: {width: 250, height: 100},
        defaultSize: {width: 400, height: 480},
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [
            {children: [
                    {type: 'VerticalLayout', children: [
                            {type: 'Label', text: __('Twitter Url for embed'),
                                helpText: __('Please type collection, profile, list or likes timeline url')
                            },
                            {type: 'TextField', id: 'url', placeholder: 'https://twitter.com/sitepro_builder'}
                        ]},
                    {type: 'HorizontalLayout', columnWeights: [3, 3], css: {marginTop: 15}, children: [
                            {type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Theme')},
                                    {type: 'RadioBox', id: 'light', label: __('Light'), group: 'theme'},
                                    {type: 'RadioBox', id: 'dark', label: __('Dark'), group: 'theme'}
                                ]},
                            {type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Default link color')},
                                    {type: 'ColorSelector', id: 'linkColor', noTransparent: true}
                                ]}
                        ]}
                ]}
        ]
    },
    pluginScoped: {
        scriptLoaded: false,
        scriptReady: false,
        listeners: []
    },
    resizeTimeout: null,
    resizeAction: function (data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function () {
                self.resizeTimeout = null;
                self.updateElement();
            }, 2000);
        }
    },
    openAction: function (fields, data, elem) {
        fields.url.setText(data.content.url);
        fields.light.setValue(data.content.theme === 'light');
        fields.dark.setValue(data.content.theme === 'dark');
        fields.linkColor.setValue(data.content.linkColor);
    },
    applyAction: function (fields, data, elem) {
        data.content.url = fields.url.getText();
        data.content.linkColor = fields.linkColor.getValue();
        if (fields.light.getValue())
            data.content.theme = 'light';
        if (fields.dark.getValue())
            data.content.theme = 'dark';
    },
    loadAction: function (data) {
        if (!data.content.linkColor)
            data.content.linkColor = '#1b95e0';
        if (!data.content.theme)
            data.content.theme = 'light';
        if (!data.content.url)
            data.content.url = '';

    }
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"linepay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/linepay","customConfiguration":null};
PluginWrapper._config.id = 'linepay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/linepay\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n<img src=\"https:\/\/scdn.line-apps.com\/linepay\/partner\/images\/logo\/linepay_logo_119x39_v3.png\" \/>\n{{\/isPublished}}\n\n{{#content.store}}\n<form data-gateway-id=\"Linepay\" method=\"POST\" accept-charset=\"utf-8\">\n\t<input type=\"hidden\" name=\"accepturl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancelurl\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"callbackurl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"orderId\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"productName\" value=\"{{content.productName}}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"image\" src=\"https:\/\/scdn.line-apps.com\/linepay\/partner\/images\/logo\/linepay_logo_119x39_v3.png\"\/>\n<\/form>\n{{\/content.store}}\n\n{{^content.store}}\n{{{requireService}}}\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
ElementRegister.registerPaymentGateway({
    name: __('LINE Pay'),
    id: 'linepay',
    keyField: __('Channel ID'),
    keyFieldId: 'channelId',
    keyField2: __('Channel Secret Key'),
    keyField2Id: 'channelSecretKey',
    titleFieldId: 'label',
    nameFieldId: 'productName',
    priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['channelId', 'channelSecretKey']
});
PluginWrapper.registerPlugin('linepay', {
    name: 'LINE Pay',
    element: {
        minSize: {width: 130, height: 45},
        defaultSize: {width: 130, height: 45},
        resizable: true,
    },
    propertyDialog: {
        noScroll: true,
        tabs: [
            {children: [{type: 'VerticalLayout', spacing: 15, children: [
                            {type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Channel ID')},
                                            {type: 'TextField', id: 'channelId'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Channel Secret Key')},
                                            {type: 'TextField', id: 'channelSecretKey'}
                                        ]}
                                ]},
                            {type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Item Name'), helpText: __('Title of what you are paying for')},
                                            {type: 'TextField', id: 'productName'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Amount')},
                                            {type: 'TextField', id: 'amount'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Currency')},
                                            {type: 'DropdownBox', id: 'currency', options: [
                                                    {id: '#USD', name: 'USD', value: 'USD'},
                                                    {id: '#JPY', name: 'JPY', value: 'JPY'},
                                                    {id: '#TWD', name: 'TWD', value: 'TWD'},
                                                    {id: '#THB', name: 'THB', value: 'THB'}
                                                ]}
                                        ]}
                                ]}
                        ]}
                ]}
        ]
    },
    resizeAction: function (data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function () {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function (fields, data, elem) {
        fields.channelId.setText(data.content.channelId);
        fields.channelSecretKey.setText(data.content.channelSecretKey);
        fields.productName.setText(data.content.productName);
        fields.amount.setText(data.content.amount);

        var itm;
        itm = fields.currency.getItemById('#' + data.content.currency);
        fields.currency.selectItem(itm);
    },
    applyAction: function (fields, data, elem) {
        data.content.channelId = fields.channelId.getText();
        data.content.channelSecretKey = fields.channelSecretKey.getText();
        data.content.productName = fields.productName.getText();
        data.content.amount = fields.amount.getText();

        var itm;
        itm = fields.currency.getSelectedItem();
        data.content.currency = itm.getOriginal().value;

    },
    loadAction: function (data) {
        if (!data.content.channelId)
            data.content.channelId = '1509190620';
        if (!data.content.channelSecretKey)
            data.content.channelSecretKey = '148de1543696ebdb7658e47b1eff097f';
        if (!data.content.productName)
            data.content.productName = 'Title of what you are paying for';
        if (!data.content.amount)
            data.content.amount = '9.99';
        if (!data.content.currency)
            data.content.currency = 'JPY';
        data.serviceUrl = this.serviceUrl;

    }
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"yandex_maps","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/yandex_maps","customConfiguration":null};
PluginWrapper._config.id = 'yandex_maps';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/yandex_maps\/main.png";
PluginWrapper._config.template = "<div class=\"ymaps\" id=\"{{id}}_ymaps\" style=\"width: 100%; height: 100%;\"><\/div>\n{{#isPublished}}\n\t{{#firstOnPage}}\n<script type=\"text\/javascript\">\n\twindow.WB_YandexMaps = {\n\t\tscriptReady: false,\n\t\tymaps: null,\n\t\tlisteners: [],\n\t\taddListener: function(inst, func) {\n\t\t\tif (this.scriptReady) {\n\t\t\t\tfunc.call(inst, this.ymaps);\n\t\t\t} else {\n\t\t\t\tthis.listeners.push({inst: inst, func: func});\n\t\t\t}\n\t\t},\n\t\tready: function(ymaps) {\n\t\t\tthis.scriptReady = true;\n\t\t\tthis.ymaps = ymaps;\n\t\t\tfor (var i = 0; i < this.listeners.length; i++) {\n\t\t\t\tthis.listeners[i].func.call(this.listeners[i].inst, ymaps);\n\t\t\t}\n\t\t}\n\t};\n\twindow.WB_YandexMaps_script_fn = function(ymaps) { window.WB_YandexMaps.ready(ymaps); };\n<\/script>\n{{{requireService}}}\n\t{{\/firstOnPage}}\n<script type=\"text\/javascript\">\n\twindow.WB_YandexMaps.addListener(window, function(ymaps) {\n\t\tvar ll = [{{#content.strll}}{{content.strll}}{{\/content.strll}}{{^content.strll}}{{#content.ll}}{{.}},{{\/content.ll}}0{{\/content.strll}}], zoom = {{content.zoomLevel}}, type = '{{content.type}}';\n\t\tvar map = new ymaps.Map('{{id}}_ymaps', { center: ll, zoom: zoom });\n\t\tif (type) map.setType(type);\n\t\tvar marker = new ymaps.Placemark(ll, {});\n\t\tmap.geoObjects.add(marker);\n\t});\n<\/script>\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/yandex_maps/main.php';
PluginWrapper._config.active = false;

PluginWrapper.registerPlugin('yandex_maps', {
	name: __('Yandex Maps'),
	noButton: true,
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 602, height: 327},
		resizable: true,
		renderOnce: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('API Key')},
					{type: 'TextField', id: 'apiKey', placeholder: __('Example') + ': AE4ftlCBAAAA0Y5IfCIAPV4d9jYjMZGyd2z26kswgP7=='}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [8, 4], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Coordinates or address'), helpText: __('Location address or coordinates')},
						{type: 'TextField', id: 'address', placeholder: '55.76, 37.64'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'Zoom level', helpText: __('ex. 4')},
						{type: 'SizeSelector', id: 'zoomLevel'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Drag marker to set your location')},
					{type: 'CustomContainer', id: 'mapElem', css: {width: '100%', height: 220, border: '1px solid #cccccc', backgroundColor: '#ebebeb'}}
				]}
			]}
		]
	},
	properties: [
		{id: 'apiKey', type: 'YandexApiKey',
			get: function(data) { return data.content.apiKey; },
			set: function(value, data) {
				data.content.apiKey = value;
			}
		},
		{id: 'address', type: 'YandexAddress', helpText: __('Location address or coordinates'),
			get: function(data) { return {text: data.content.address, latLng: data.content.ll}; },
			set: function(value, data) {
				var self = this;
				data.content.address = value.text;
				this.pluginScoped.handleAddress(data.content.address, function (ll) {
					data.content.ll = ll ? ll : [55.76, 37.64];
					data.content.strll = data.content.ll.join(',');
					self.map.setCenter(data.content.ll);
					self.mapMarker.geometry.setCoordinates(data.content.ll);
				});
			}
		},
		{id: 'zoomLevel', type: 'YandexMapZoom', helpText: __('ex. 4'),
			get: function(data) { return data.content.zoomLevel; },
			set: function(value, data) {
				data.content.zoomLevel = value;
				if (this.map) {
					this.map.setZoom(data.content.zoomLevel);
				}
			}
		},
		{id: 'mapType', type: 'YandexMapType',
			get: function(data) { return data.content.type; },
			set: function(value, data) {
				data.content.type = value;
				if (this.map) this.map.setType(data.content.type);
			}
		}
	],
	
	pluginScoped: {
		apiKey: (wb_builder.mapsConfig && (typeof wb_builder.mapsConfig === 'object') && wb_builder.mapsConfig.yandexMapsApiKey) ? wb_builder.mapsConfig.yandexMapsApiKey : null,
		clientApiKey: (wb_builder.mapsConfig && (typeof wb_builder.mapsConfig === 'object') && wb_builder.mapsConfig.yandexMapsClientApiKey) ? wb_builder.mapsConfig.yandexMapsClientApiKey : null,
		defaultLatLng: [55.76, 37.64],
		scriptLoaded: false,
		scriptReady: false,
		ymaps: null,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst, this.ymaps);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				window.WB_YandexMaps_script_fn = function(ymaps) {
					self.scriptReady = true;
					self.ymaps = ymaps;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst, ymaps);
					}
				};
				$.getScript('https://api-maps.yandex.ru/2.1/?' + (this.apiKey ? 'apikey=' + this.apiKey + '&' : '') + 'onload=WB_YandexMaps_script_fn&lang=ru_RU');
			}
		},
		handleAddress: function(address, func) {
			if (!this.ymaps) return;
			if (('' + address).match(/-?[0-9\.]+[\ ]*,[\ ]*-?[0-9\.]+/i)) {
				var parts = ('' + address).split(',');
				if (typeof func === 'function') func.call(this, [parseFloat(parts[0]), parseFloat(parts[1])]);
			} else if (address.length) {
				var self = this, selfFunc = func, geoc = this.ymaps.geocode(address);
				geoc.then(function(res) {
					if (typeof selfFunc === 'function') selfFunc.call(self, res.geoObjects.get(0).geometry.getCoordinates());
				}, function(err) {});
			} else {
				func.call(this, [55.76, 37.64]);
			}
		}
	},
	map: null,
	mapMarker: null,
	mapElem: null,
	
	resizeAction: function(data, elem) {
		if (this.mapElem) this.mapElem.css({width: data.width, height: data.height});
		if (this.map) this.map.container.fitToViewport();
	},
	
	openAction: function(fields, data, elem) {
		fields.apiKey.setText(data.content.apiKey);
		fields.address.setText(data.content.address);
		fields.zoomLevel.setValue(data.content.zoomLevel);
		fields.type = data.content.type;
		var self = this;
		if (!fields.map) {
			fields.address.on('change', function() {
				self.pluginScoped.handleAddress(fields.address.getText(), function(ll) {
					fields.map.setCenter(ll);
					fields.mapMarker.geometry.setCoordinates(ll);
				});
			});
			fields.address.on('keydown', function(e) {
				if (e.keyCode === 13) {
					self.pluginScoped.handleAddress(fields.address.getText(), function(ll) {
						fields.map.setCenter(ll);
						fields.mapMarker.geometry.setCoordinates(ll);
					});
				}
			});
			fields.zoomLevel.on('change', function() {
				if (fields.map) fields.map.setZoom(fields.zoomLevel.getValue());
			});
			this.pluginScoped.addListener(this, function(ymaps) {
				//fields.mapElem.css({width: fields.mapElem.getElem().outerWidth()});
				fields.map = new ymaps.Map(fields.mapElem.getElem().get(0), {
					center: data.content.ll,
					zoom: data.content.zoomLevel,
					controls: ['searchControl', 'typeSelector', 'zoomControl']
				});
				fields.map.events.add('boundschange', function(e) {
					fields.zoomLevel.setValue(e.get('newZoom'));
				});
				fields.map.events.add('typechange', function() {
					fields.type = fields.map.getType();
				});
				if (!fields.type) {
					fields.type = fields.map.getType();
				} else {
					fields.map.setType(fields.type);
				}
				fields.map.setZoom(data.content.zoomLevel);
				fields.mapMarker = new ymaps.Placemark(data.content.ll, {}, {draggable: true});
				fields.mapMarker.events.add('dragend', function() {
					var p = fields.mapMarker.geometry.getCoordinates();
					fields.address.setText(p[0] + ', ' + p[1]);
				});
				fields.map.geoObjects.add(fields.mapMarker);
				var searchControl = fields.map.controls.get(0);
				searchControl.events.add('resultselect', function() {
					if (searchControl.getResultsCount() > 0) {
						fields.address.setText(searchControl.getRequestString());
						var results = searchControl.getResultsArray();
						fields.mapMarker.geometry.setCoordinates(results[searchControl.getSelectedIndex()].geometry.getCoordinates());
					}
				});
				searchControl.events.add('load', function() {
					
				});
			});
		} else {
			if (data.content.type) fields.map.setType(data.content.type);
			fields.map.setZoom(data.content.zoomLevel);
			fields.map.setCenter(data.content.ll);
			fields.mapMarker.geometry.setCoordinates(data.content.ll);
		}
	},
	applyAction: function(fields, data, elem) {
		data.content.apiKey = fields.apiKey.getText();
		data.content.address = fields.address.getText();
		data.content.zoomLevel = fields.zoomLevel.getValue();
		data.content.type = fields.type;
		if (this.map) {
			this.map.setZoom(data.content.zoomLevel);
			if (data.content.type) this.map.setType(data.content.type);
		}
		var self = this;
		this.pluginScoped.handleAddress(data.content.address, function(ll) {
			data.content.ll = ll;
			data.content.strll = data.content.ll.join(',');
			self.map.setCenter(data.content.ll);
			self.mapMarker.geometry.setCoordinates(data.content.ll);
		});
	},
	loadAction: function(data) {
		if (!data.content.apiKey) data.content.apiKey = '';
		if (!data.content.address) data.content.address = '';
		if (!data.content.ll || data.content.ll.hasOwnProperty('length') && !data.content.ll.length)
			data.content.ll = null;
		if (!data.content.zoomLevel) data.content.zoomLevel = 12;
		data.content.strll = (data.content.ll ? data.content.ll : this.pluginScoped.defaultLatLng).join(',');
		data.content.builderApiKey = this.pluginScoped.apiKey;
		data.content.clientApiKey = this.pluginScoped.clientApiKey;
	},
	loadedAction: function(data, elem) {
		this.mapElem = elem.find('.ymaps');
		var self = this;
		this.pluginScoped.addListener(this, function(ymaps) {
			self.map = new ymaps.Map(self.mapElem.get(0), {
				center: data.content.ll ? data.content.ll : self.pluginScoped.defaultLatLng,
				zoom: data.content.zoomLevel
			});
			if (data.content.type) self.map.setType(data.content.type);
			self.mapMarker = new ymaps.Placemark(data.content.ll ? data.content.ll : self.pluginScoped.defaultLatLng, {});
			self.map.geoObjects.add(self.mapMarker);
		});
	},
	saveAction: function(data, elem) {
		// TODO: save data
	}
	
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"payme","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/payme","customConfiguration":null};
PluginWrapper._config.id = 'payme';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/payme\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Payme\" action=\"{{#content.demo}}https:\/\/test.paycom.uz{{\/content.demo}}{{^content.demo}}https:\/\/checkout.paycom.uz{{\/content.demo}}\" method=\"post\" style=\"width: 100%; height: 100%;\" id=\"{{id}}_payme_form\">\n\t<input type=\"hidden\" name=\"merchant\" value=\"{{content.merchantId}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" data-multiplier=\"100\" data-fixed-decimal=\"0\" \/>\n\t<input type=\"hidden\" name=\"account[order_id]\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"callback\" value=\"{returnUrl}?txnid=:transaction_id\" \/>\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n\n{{#isPublished}}{{^content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\t$('#{{id}}_payme_form').on('submit', function(e, forceSubmit) {\n\t\t\tif (forceSubmit) return true;\n\t\t\tvar formElements = this.elements;\n\t\t\tvar formData = [];\n\t\t\tvar transactionId = null, orderPrice = null;\n\t\t\tfor (var i=0; i < formElements.length; i++) {\n\t\t\t\tif (!formElements[i].name) continue;\n\t\t\t\tif (formElements[i].name === 'account[order_id]') {\n\t\t\t\t\ttransactionId = formElements[i].value;\n\t\t\t\t} else if (formElements[i].name === 'amount') {\n\t\t\t\t\torderPrice = formElements[i].value;\n\t\t\t\t}\n\t\t\t\tformData.push({\n\t\t\t\t\tname: formElements[i].name,\n\t\t\t\t\tvalue: formElements[i].value,\n\t\t\t\t\tisPrice: false,\n\t\t\t\t\tfixedDecimal: -1,\n\t\t\t\t\tmultiplier: 0\n\t\t\t\t});\n\t\t\t}\n\t\t\tvar thisSelf = this;\n\t\t\t$.ajax({\n\t\t\t\turl: $('base').attr('href') + 'store-submit\/Payme',\n\t\t\t\ttype: 'POST',\n\t\t\t\tcontentType: 'application\/json; charset=utf-8',\n\t\t\t\tdataType: 'json',\n\t\t\t\tdata: JSON.stringify({\n\t\t\t\t\tformData: formData,\n\t\t\t\t\ttransactionId: transactionId,\n\t\t\t\t\torderPrice: orderPrice\n\t\t\t\t}),\n\t\t\t\tcomplete: function() {\n\t\t\t\t\t$(thisSelf).trigger('submit', [true]);\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn false;\n\t\t});\n\t})();\n<\/script>\n{{\/content.store}}{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/payme/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'payme_color_horizontal.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'payme_color_horizontal.svg', name: 'coloured'},
			{id: 'payme_color_vertical.svg', name: 'coloured 2'},
			{id: 'payme_dark_horizontal.svg', name: 'dark'},
			{id: 'payme_dark_vertical.svg', name: 'dark 2'},
			{id: 'payme_white_horizontal.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'payme_white_vertical.svg', name: 'white 2', backgroundColor: '#000000'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Payme',
	id: 'payme',
	pageUrl: 'https://payme.uz/',
	keyFieldId: 'merchantId',
	keyField2Id: 'merchantKey',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Merchant Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['merchantId', 'merchantKey', 'demo'],
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payme', true),
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true)
});
PluginWrapper.registerPlugin('payme', {
	name: 'Payme',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchantId', type: 'PaymeMerchantId',
			get: function(data) { return data.content.merchantId; },
			set: function(value, data) {
				data.content.merchantId = value;
			}
		},
		{id: 'merchantKey', type: 'PaymeMerchantKey',
			get: function(data) { return data.content.merchantKey; },
			set: function(value, data) {
				data.content.merchantKey = value;
			}
		},
		{id: 'description', type: 'PaymeDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'PaymeAmount', helpText: __('Amount to be transferred'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'PaymeCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'PaymeDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'payme'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID')},
						{type: 'TextField', id: 'merchantId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant Key')},
						{type: 'TextField', id: 'merchantKey'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6,3,3], columnWeightsSmall: [6,3,3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '643', name: 'RUB'},
							{id: '840', name: 'USD'},
							{id: '860', name: 'UZS'},
							{id: '978', name: 'EUR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payme')
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		fields.merchantId.setText(data.content.merchantId);
		fields.merchantKey.setText(data.content.merchantKey);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		itm = fields.logo.getItemById(data.content.logo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		data.content.merchantId = fields.merchantId.getText();
		data.content.merchantKey = fields.merchantKey.getText();
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (data.content.logo && data.content.logo.indexOf('.') === -1) {
			data.content.logo += '.png';
		}
		if (!data.content.merchantId) data.content.merchantId = '';
		if (!data.content.merchantKey) data.content.merchantKey = '';
		if (!data.content.description) data.content.description = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.currency) data.content.currency = '860';
		if (['payme-1-white.png', 'payme-1-black.png', 'payme-2-white.png', 'payme-2-black.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'payme_color_horizontal.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"baidu_maps","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/baidu_maps","customConfiguration":null};
PluginWrapper._config.id = 'baidu_maps';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/baidu_maps\/main.png";
PluginWrapper._config.template = "<script type=\"text\/javascript\" src=\"http:\/\/api.map.baidu.com\/getscript?v=2.0&amp;ak=cfa0fgLRZZjvHugmDo51EPtUHgW0buAG&amp;services=&amp;t=20160801150053\"><\/script>\n<div id=\"allmap_{{id}}\" style=\"width: 100%; height: 100%; overflow: hidden; margin: 0;\"><\/div>\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar getMap = function() {\n\t\t\tvar map = new BMap.Map(\"allmap_{{id}}\"), point;\n\t\t\ttry {\n\t\t\t\teval(\"map.centerAndZoom(new BMap.Point({{content.coordsFinal}}), 11)\");\n\t\t\t\teval(\"point = new BMap.Point({{content.coordsFinal}})\");\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t\tif (\"{{content.type}}\" && window[\"{{content.type}}\"]) map.setMapType(window[\"{{content.type}}\"]);\n\n\t\t\tmap.addControl(new BMap.NavigationControl({anchor: BMAP_ANCHOR_TOP_LEFT, type: BMAP_NAVIGATION_CONTROL_SMALL}));\n\n\t\t\tmap.addControl(new BMap.MapTypeControl());\n\t\t\tmap.enableScrollWheelZoom(true);\n\t\t\tmap.centerAndZoom(point, {{content.zoom}});\n\t\t\t{{#content.marker}}\n\t\t\tvar marker = new BMap.Marker(point);\n\t\t\tmap.addOverlay(marker);\n\t\t\t{{#content.animate}}marker.setAnimation(BMAP_ANIMATION_BOUNCE);{{\/content.animate}}\n\t\t\t{{\/content.marker}}\n\t\t},\n\t\ttwait = function() {\n\t\t\tif (typeof window.BMap == 'object') {\n\t\t\t\tgetMap();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(twait, 100);\n\t\t};\n\t\ttwait();\n\t})();\n<\/script>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
PluginWrapper.registerPlugin('baidu_maps', {
	name: __('Baidu Maps'),
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 602, height: 327},
		resizable: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Baidu Maps API key'), helpText: __('Get Baidu Maps API key from http://lbsyun.baidu.com/apiconsole/key?application=key')},
					{type: 'TextField', id: 'groupId'}
				]},
				{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Coordinates')},
						{type: 'TextField', id: 'coords', placeholder: '116.404, 39.915', change: function() {
							var val = this.getValue();
							var parts = val.split(',');
							for (var i=0; i < parts.length; i++) {
								parts[i] = parts[i].replace(/^.*?(\-?\d+(?:[\.,]\d+)?).*$/, '$1').replace(',', '.');
							}
							this.setValue(parts.join(', '));
						}}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Zoom level'), helpText: __('ex. 4')},
						{type: 'SizeSelector', id: 'zoom'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CustomContainer', id: 'map', init: function() {
						var map,
							_animate = false,
							_marker = true,
							_coords = [116.404, 39.915],
							_zoom = 15,
							_markerElem,
							_point,
							_fields;
							
						this.setZoom = function(zoom) {
							_zoom = zoom;
							map.centerAndZoom(new BMap.Point(_coords[0], _coords[1]), _zoom);
						};
						this.setCoords = function(coords) {
							_coords = coords.split(',').map(function(crd) {
								return parseFloat($.trim(crd));
							});
							_point = new BMap.Point(_coords[0], _coords[1]);
							map.centerAndZoom(_point, _zoom);
							this.setMarker(_marker);
						};
						this.setMarker = function(marker) {
							_marker = marker;
							if (_markerElem) map.removeOverlay(_markerElem);
							if (_marker) {
								_markerElem = new BMap.Marker(_point);
								_markerElem.enableDragging();
								_markerElem.addEventListener('dragend', function() {
									_coords = [
										_markerElem.getPosition().lng,
										_markerElem.getPosition().lat
									];
									_point = new BMap.Point(_coords[0], _coords[1]);
									map.centerAndZoom(_point, _zoom);
									_fields.coords.setText(_coords.join(', '));
								});
								map.addOverlay(_markerElem);
								this.setAnimate(_animate);
							} else {
								_markerElem = null;
							}
						};
						this.setAnimate = function(animate) {
							_animate = animate;
							if (_markerElem) _markerElem.setAnimation(_animate ? BMAP_ANIMATION_BOUNCE : null);
						};
						this.initOnView = function(elemId, fields) {
							var self = this;
							_fields = fields;
							this._elem.empty();
							this._elem.attr('id', 'demomap_' + elemId);
							map = new BMap.Map('demomap_' + elemId);
							map.enableScrollWheelZoom(true);
							map.addEventListener('zoomend', function() {
								_zoom = map.getZoom();
								_fields.zoom.setValue(_zoom);
							});
						};
					}, css: {width: '100%', height: 234, position: 'relative', border: '1px solid #aaaaaa', backgroundColor: '#ebebeb'}}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Show marker')},
						{type: 'RadioBox', id: 'marker0', label: __('Enable'), group: 'marker'},
						{type: 'RadioBox', id: 'marker1', label: __('Disable'), group: 'marker'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Animate marker')},
						{type: 'RadioBox', id: 'animate0', label: __('Enable'), group: 'animate'},
						{type: 'RadioBox', id: 'animate1', label: __('Disable'), group: 'animate'}
					]}
				]}
			]}
		]
	},
	batchUpdates: true,
	properties: [
		{id: 'apiKey', type: 'BaiduApiKey',
			get: function(data) { return data.content.groupId; },
			set: function(value, data) {
				data.content.groupId = value;
			}
		},
		{id: 'address', type: 'BaiduAddress', helpText: __('Location address or coordinates'),
			get: function(data) { return {text: data.content.coords, latLng: data.content.coordsFinal.split(/\ *,\ */)}; },
			set: function(value, data) {
				data.content.coords = value.text;
				this.fixCoords(data);
				this.updateFinalCoords(data);
			}
		},
		{id: 'zoomLevel', type: 'BaiduMapZoom', helpText: __('ex. 4'),
			get: function(data) { return data.content.zoom; },
			set: function(value, data) {
				data.content.zoom = value;
			}
		},
		{id: 'mapType', type: 'BaiduMapType',
			get: function(data) { return data.content.type || 'BMAP_NORMAL_MAP'; },
			set: function(value, data) { data.content.type = value; }
		},
		{id: 'showMarker', type: 'BaiduShowMarker',
			get: function(data) { return data.content.marker; },
			set: function(value, data) { data.content.marker = value; }
		},
		{id: 'animMarker', type: 'BaiduAnimMarker',
			get: function(data) { return data.content.animate; },
			set: function(value, data) { data.content.animate = value; }
		}
	],
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('//api.map.baidu.com/getscript?v=2.0&ak=cfa0fgLRZZjvHugmDo51EPtUHgW0buAG&services=&t=20160801150053', function() {
					var twait = function() {
						var wnd = window;
						if (typeof wnd.BMap == 'object') {
							self.scriptReady = true;
							for (var i = 0; i < self.listeners.length; i++) {
								self.listeners[i].func.call(self.listeners[i].inst);
							}
							return;
						}
						setTimeout(twait, 100);
					};
					twait();
				});
			}
		}
	},

	openAction: function (fields, data, elem) {
		fields.groupId.setText(data.content.groupId);
		fields.coords.setText(data.content.coords);
		fields.zoom.setValue(data.content.zoom);
		
		fields.marker0.setValue(data.content.marker);
		fields.marker1.setValue(!data.content.marker);
		fields.animate0.setValue(data.content.animate);
		fields.animate1.setValue(!data.content.animate);
		
		this.pluginScoped.addListener(this, function() {
			setTimeout(function() {
				if(fields.coords.getText()) {
					fields.map.initOnView(data.id, fields);
					fields.map.setCoords(fields.coords.getText());
					fields.map.setZoom(fields.zoom.getValue());
					fields.map.setMarker(fields.marker0.getValue());
					fields.map.setAnimate(fields.animate0.getValue());

					fields.coords.on('change', function () {
						fields.map.setCoords(fields.coords.getText());
					});
					fields.zoom.on('change', function () {
						fields.map.setZoom(fields.zoom.getValue());
					});
					fields.marker0.on('change', function () {
						fields.map.setMarker(true);
					});
					fields.marker1.on('change', function () {
						fields.map.setMarker(false);
					});
					fields.animate0.on('change', function () {
						fields.map.setAnimate(true);
					});
					fields.animate1.on('change', function () {
						fields.map.setAnimate(false);
					});
				} else {
					fields.map.initOnView(data.id, fields);
					fields.map.setCoords('116.404, 39.915');
				}
			}, 500);
		});
	},
	
	updateFinalCoords: function(data) {
		data.content.coordsFinal = data.content.coords ? data.content.coords : '116.404, 39.915';
	},

	applyAction: function (fields, data, elem) {
		data.content.groupId = fields.groupId.getText();
		data.content.coords = fields.coords.getText();
		data.content.zoom = fields.zoom.getValue();
		this.fixCoords(data);

		data.content.marker = (fields.marker0.getValue());
		data.content.animate = (fields.animate0.getValue());
		this.updateFinalCoords(data);
	},

	loadAction: function (data) {
		if (!data.content.groupId) data.content.groupId = '';
		if (!data.content.marker) data.content.marker = true;
		if (!data.content.zoom) data.content.zoom = '15';
		if (!data.content.animate) data.content.animate = false;
		if (!data.content.coords) data.content.coords = '';
		this.fixCoords(data);
		this.updateFinalCoords(data);

		this.pluginScoped.addListener(this, function() {});
	},

	fixCoords: function(data) {
		if (data.content.coords) {
			var val = '' + data.content.coords;
			var parts = val.split(',');
			for (var i=0; i < parts.length; i++) {
				parts[i] = parts[i].replace(/^.*?(\-?\d+(?:[\.,]\d+)?).*$/, '$1').replace(',', '.');
			}
			data.content.coords = parts.join(', ');
		}
	},

	fullWidthChangeAction: function(fullWidth, data, elem) {
		this.updateElement();
		this.fixCoords(data);
	}

});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"default_light_ui","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/default_light_ui","customConfiguration":{}};
PluginWrapper._config.id = 'default_light_ui';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "<div id=\"builder_canvas\"><\/div>\n<div id=\"elements_toolbar\" class=\"spd-collapsed\"><\/div>\n<div id=\"builder_toolbar\"><\/div>\n<div id=\"builder_notification\" class=\"hidden\"><\/div>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
var __extends=this&&this.__extends||function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),__spreadArray=this&&this.__spreadArray||function(e,t,o){if(o||2===arguments.length)for(var n,i=0,s=t.length;i<s;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};define("default_light_ui/SPDefMenuNode",["require","exports"],function(e,t){"use strict";t.__esModule=!0,t.SPDefMenuNode=void 0;var o=function(){function e(){this.visible=!0,this.enabled=!0,this.iconVisible=!1,this.iconClass=null,this.backIconClass=null,this.textVisible=!1,this.isActive=!1,this.isChecked=!1,this.autoHideLabel=!1,this.elem=$('<div class="spd-menu-node"/>'),this.content=$('<span class="spd-mn-content"/>'),this.icon=$('<i class="ico-tb-i"/>'),this.backIcon=$('<i class="ico-tb-i"/>'),this.text=$('<span class="spd-mn-text"/>'),this.elem.append(this.content)}return e.prototype.getElem=function(){return this.elem},e.prototype.setVisible=function(e){return(this.visible=e)?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this.elem.trigger(e?"toolbaritem.show":"toolbaritem.hide"),this},e.prototype.getVisible=function(){return this.visible},e.prototype.getIcon=function(){return this.iconClass},e.prototype.setIcon=function(e){return null===(this.iconClass=e)?this.iconVisible&&(this.iconVisible=!1,this.icon.detach()):(this.icon.attr("class","ico-tb-i "+e),this.iconVisible||(this.iconVisible=!0,this.content.prepend(this.icon))),this},e.prototype.setBackIcon=function(e){return null!==(this.backIconClass=e)&&(this.backIcon.attr("class","ico-tb-i "+e),this.content.prepend(this.backIcon)),this},e.prototype.setIconEnabled=function(e){return e?this.elem.addClass("enabled"):this.elem.removeClass("enabled"),this},e.prototype.setText=function(e){return null===e?this.textVisible&&(this.textVisible=!1,this.text.detach()):(this.text.empty().append(e),this.textVisible||(this.textVisible=!0,this.iconVisible?this.text.insertAfter(this.icon):this.content.prepend(this.text))),this},e.prototype.getTextElem=function(){return this.text},e.prototype.setTooltip=function(e){return this.content.attr("title",e),this},e.prototype.setTooltipMark=function(e,t){void 0===t&&(t="");var o=$('<span class="badge wb_badge_help" >?</span>');return t&&""!=t&&o.attr("data-placement",t),this.content.after(o.attr("data-original-title",e)),this},e.prototype.setActive=function(e){return e?this.elem.addClass("active"):this.elem.removeClass("active"),this.isActive=e,this},e.prototype.getActive=function(){return this.isActive},e.prototype.setEnabled=function(e){return this.enabled=e,this.markEnabled(e),this},e.prototype.markEnabled=function(e){return e?this.elem.removeClass("disabled"):this.elem.addClass("disabled"),this},e.prototype.getEnabled=function(){return this.enabled},e.prototype.addSpacer=function(){return $('<span class="spacer"></span>').insertAfter(this.elem.find(".spd-mn-text")),this},e.prototype.setAutoHideLabel=function(e){return e==this.autoHideLabel||((this.autoHideLabel=e)?this.text.addClass("spd-mobile-hidden"):this.text.removeClass("spd-mobile-hidden")),this},e}();t.SPDefMenuNode=o}),define("default_light_ui/SPDefMenuItem",["require","exports","default_light_ui/SPDefMenuNode","PluginApi/PluginTranslation"],function(e,t,o,a){"use strict";t.__esModule=!0,t.SPDefMenuItem=void 0;var n=function(s){function l(e,t,o,n){void 0===o&&(o=null),void 0===n&&(n=null);var i=s.call(this)||this;return i.switcherBlock=o,i.builder=n,i.clickCallback=null,i.switchCallback=null,i.data=null,i.switchVisible=!1,i.isDraggable=!1,i.dots=null,i.setIcon(e).setText(t),i.name=null!==t?i.text.text():"",i.name&&i.setTooltip(i.name),i.switch=$('<div class="spd-mn-switch"><input type="checkbox" class="spd-switch-input" id="spd-ims-'+l.nextSwitchId+'" /><label for="spd-ims-'+l.nextSwitchId+++'" class="spd-switch-label spd-no-text"></label></div>'),o&&n&&i.switch.prepend($("<span>"+t+(t==(0,a.__)("Auto Layout")?"":" "+(0,a.__)("version"))+"</span>")),i.switch.find("input").on("change",function(e){if(l.isClickPrevented()||!i.getEnabled())return e.stopImmediatePropagation(),void e.preventDefault();i.isActive=$(e.target).is(":checked"),i.isChecked=$(e.target).is(":checked"),i.switchCallback&&i.switchCallback(i)}).on("click",function(e){if(l.isClickPrevented()||!i.getEnabled())return e.stopImmediatePropagation(),void e.preventDefault()}),i.elem.on("touchstart",function(e){l.isClickPrevented()||$(e.target).closest(".spd-mn-switch").length||(l.lastTouchedItem=i)}),i.elem.on("touchmove touchcancel",function(e){l.isClickPrevented()||$(e.target).closest(".spd-mn-switch").length||(l.lastTouchedItem=null)}),i.elem.on("touchend",function(e){l.isClickPrevented()||$(e.target).closest(".spd-mn-switch").length||l.lastTouchedItem===i&&(l.lastTouchedItem=null,e.stopImmediatePropagation(),e.preventDefault(),i.elem.trigger("click"))}),i.elem.on("click",function(e){l.isClickPrevented()||$(e.target).closest(".spd-mn-switch").length||(e.stopImmediatePropagation(),e.preventDefault(),i.getEnabled()&&(i.clickCallback?i.clickCallback(i):i.switchVisible&&(i.setActive(!i.getActive()),i.switchCallback&&i.switchCallback(i))))}),i}return __extends(l,s),l.prototype.setDragable=function(e){if(this.isDraggable==e)return this;if(this.isDraggable=e){if(!this.dots){var t='<svg width="3" height="3"><circle cx="1.5" cy="1.5" r="1.5" fill="#919191"/></svg>';this.dots=$("<div>").addClass("spd-mn-dots").append($("<div>").append(t).append(t).append(t)).append($("<div>").append(t).append(t).append(t))}this.elem.addClass("spd-mn-draggable"),this.text.before(this.dots)}else this.dots&&this.dots.detach(),this.elem.removeClass("spd-mn-draggable");return this},l.isClickPrevented=function(){return l.preventClickUntil>(new Date).getTime()},l.preventClick=function(){l.preventClickUntil=(new Date).getTime()+250},l.prototype.onClick=function(e){return this.clickCallback=e,this},l.prototype.onSwitch=function(e){return this.switchCallback=e,this},l.prototype.setSwitchVisible=function(e){return this.switchVisible!=e&&((this.switchVisible=e)?(this.switcherBlock?this.switcherBlock.append(this.switch):this.content.append(this.switch),this.elem.addClass("spd-mn-has-switch")):(this.switch.detach(),this.elem.removeClass("spd-mn-has-switch"))),this},l.prototype.setActive=function(e){return this.isActive=e,s.prototype.setActive.call(this,e)},l.prototype.setChecked=function(e){return this.isChecked=e,this.switch.children("input").prop("checked",e),e?this.elem.addClass("checked"):this.elem.removeClass("checked"),this},l.prototype.getChecked=function(){return this.isChecked},l.prototype.setData=function(e){return this.data=e,this},l.prototype.getData=function(){return this.data},l.lastTouchedItem=null,l.nextSwitchId=0,l.preventClickUntil=0,l}(o.SPDefMenuNode);t.SPDefMenuItem=n}),define("default_light_ui/SPDefMenu",["require","exports","default_light_ui/SPDefMenuNode","default_light_ui/SPDefMenuItem","BuilderEvent","PluginApi/PluginTranslation"],function(e,t,o,i,n,a){"use strict";t.__esModule=!0,t.SPDefMenu=void 0;var s=function(t){function s(e){void 0===e&&(e=!1);var n=t.call(this)||this;n.items=[],n.inline=!1,n.oneRow=!0,n.caretVisible=!1;var l=n;return n.dropdown=$('<div class="spd-dropdown"/>'),e&&(n.searchBlock=$("<div>").addClass("spd-dd-search").appendTo(n.dropdown),n.searchInput=$("<input>").addClass("form-control").attr("type","text").attr("placeholder",(0,a.__)("Search")).on("change keyup",function(e){27===e.keyCode&&(this.value="");for(var t=this.value.toLowerCase(),o=0,n=l.items;o<n.length;o++){var i=n[o];if(i){var s=0<=i.getTextElem().text().toLowerCase().indexOf(t);i.setVisible(s)}}}).appendTo(n.searchBlock)),n.itemContainer=$('<div class="spd-dd-item-container"/>'),n.dropdown.append($('<div class="spd-dd-scroll"/>').append(n.itemContainer)),n.elem.addClass("spd-mn-has-dropdown spd-dd-right").on("mouseover",function(e){var t=$(e.target);if(!n.elem.is(".spd-over")&&!t.closest(".spd-et-vertical").length){var o=t.parents().addBack().filter(".spd-mn-has-dropdown");o.length<2&&(s.closeAllDropDowns(),o.each(function(){$(this).addClass("spd-over")}))}}).on("mouseout",function(e){$(e.target).closest(".spd-et-vertical").length||n.elem.parents(".spd-dropdown").length||n.elem[0].contains(e.relatedTarget)||(i.SPDefMenuItem.preventClick(),n.elem.removeClass("spd-over ext-open"))}).on("touchstart",function(e){s.lastTouchedMenu=n}).on("touchmove touchcancel",function(e){s.lastTouchedMenu=null}).on("touchend",function(e){if(s.lastTouchedMenu===n){s.lastTouchedMenu=null,e.stopImmediatePropagation();try{e.preventDefault()}catch(e){}$(e.target).trigger("click")}}).on("click",function(e){var t=$(e.target);if(n.elem.is(".spd-over")){var o=t.closest(".spd-dropdown,.spd-menu-node");if(o.length&&o[0]===n.elem[0])return e.preventDefault(),void n.elem.removeClass("spd-over").find(".spd-over").removeClass("spd-over");n.elem.removeClass("spd-over ext-open ext-open-submenu").find(".spd-over").removeClass("spd-over ext-open ext-open-submenu")}s.closeAllDropDowns(),$(e.target).parents().addBack().filter(".spd-mn-has-dropdown").each(function(){$(this).addClass("spd-over")})}).append(n.dropdown),n.caret=$('<span class="caret"></span>'),n}return __extends(s,t),s.firstInit=function(){s.firstInitDone||(s.firstInitDone=!0,$(document.body).on("touchstart",function(e){$(e.target).closest(".spd-has-dropdown").length||s.closeAllDropDowns()}),n.GlobalEvents.on("modal.show contextmenu.show",function(){s.closeAllDropDowns()}))},s.closeAllDropDowns=function(){$(".spd-over").removeClass("spd-over ext-open ext-open-submenu")},s.prototype.clearItems=function(){return this.items=[],this.itemContainer.empty(),this},s.prototype.addItem=function(e,t){if(void 0===t&&(t=""),this.items.push(e),e?this.itemContainer.append(e.getElem().addClass(t)):this.itemContainer.append($('<div class="spd-dropdown-separator"/>').addClass(t)),this.searchBlock&&(this.searchInput.val(""),this.searchBlock.css("display",this.items.length>=s.minOptionsNumberForSearchShowing?"block":"none"),this.searchBlock.is(":not(:visible)")))for(var o=0,n=this.items;o<n.length;o++){var i=n[o];i&&i.setVisible(!0)}return this},s.prototype.setSeparatorForItemVisible=function(e,t){var o=this.items.indexOf(t),n=this.items.length;if(!(o<0)){var i=null;0==o&&1<n&&!this.items[o+1]?i=t.getElem().next():0<o&&!this.items[o-1]&&(n<=o+1||!this.items[o+1])&&(i=t.getElem().prev()),i&&(e?i.show():i.hide())}},s.prototype.getItems=function(){return this.items},s.prototype.setInline=function(e){return(this.inline=e)?this.elem.addClass("spd-dd-inline"):this.elem.removeClass("spd-dd-inline"),this},s.prototype.setOneRow=function(e){return(this.oneRow=e)?this.elem.addClass("spd-dd-onerow"):this.elem.removeClass("spd-dd-onerow"),this},s.prototype.getInline=function(){return this.inline},s.prototype.getOneRow=function(){return this.oneRow},s.prototype.setDropdownDirection=function(e){return this.elem.removeClass("spd-dd-left spd-dd-right").addClass("spd-dd-"+e),this},s.prototype.setCaretVisible=function(e,t,o){return void 0===t&&(t=!1),void 0===o&&(o=!1),this.caretVisible!=e&&(this.caretVisible=e,t&&this.caret.addClass("closely"),e?o?this.content.append($('<span class="caret-box"></span>').append(this.caret)):this.content.append(this.caret):this.caret.detach()),this},s.prototype.setOpen=function(e){return e?this.elem.addClass("spd-over"):this.elem.removeClass("spd-over"),this},s.lastTouchedMenu=null,s.minOptionsNumberForSearchShowing=8,s.firstInitDone=!1,s}(o.SPDefMenuNode);t.SPDefMenu=s}),define("default_light_ui/SPDefBuilderModeSelector",["require","exports","default_light_ui/SPDefMenuItem","BuilderEvent","default_light_ui/SPDefMenu","PluginApi/PluginTranslation"],function(e,t,l,a,o,u){"use strict";t.__esModule=!0,t.SPDefBuilderModeSelector=void 0;var n=function(s){function e(e){var o=s.call(this)||this;o.builder=e,o.autoLayoutButton=null,o.modeButtons={},o.blockModeSwitchers=null,o.defaultIconClass="ico-tb-auto-layout",o.modeDef="tv",o.setIcon(o.defaultIconClass),o.setText((0,u.__)("Auto Layout")),o.setCaretVisible(!0);for(var t=0,n=__spreadArray([],e.getModes(),!0).sort(function(e,t){return t.width-e.width});t<n.length;t++){var i=n[t];o.modeButtons[i.id]=new l.SPDefMenuItem("ico-tb-mode-"+i.id,i.name,null,e).onClick(o.onModeSelect.bind(o)).onSwitch(o.onModeEnable.bind(o)).setData(i.id).setSwitchVisible(!o.builder.isAutoLayoutEnabled()).setActive(o.modeDef==i.id&&!o.builder.isAutoLayoutEnabled()),o.addItem(o.modeButtons[i.id])}return o.builder.isComposerMode()||(o.addItem(o.autoLayoutButton=new l.SPDefMenuItem("ico-tb-auto-layout",(0,u.__)("Auto Layout"),o.blockModeSwitchers,e).onSwitch(function(e){e.getActive()&&!o.builder.isAutoLayoutAvailable()||o.builder.setAutoLayoutEnabled(e.getActive())}).onClick(function(e){e.getActive()||(e.setActive(!0),o.builder.setAutoLayoutEnabled(e.getActive()))}).setEnabled(o.builder.isAutoLayoutEnabled()||o.builder.isAutoLayoutAvailable()).setSwitchVisible(!0).setActive(o.builder.isAutoLayoutEnabled())),a.GlobalEvents.on("modes.autolayout.changed",function(e){if(o.autoLayoutButton.setChecked(e.value).setActive(e.value),e.value)for(var t in o.setIcon(o.defaultIconClass),o.modeButtons)o.modeButtons[t].setActive(!1);if(!e.value)for(var t in o.modeButtons)o.modeDef==t&&o.modeButtons[t].setActive(!0);e.value||o.builder.isAutoLayoutAvailable()||o.autoLayoutButton.setEnabled(!1).setActive(!1)})),a.GlobalEvents.on("modes.enabled.change",function(e){o.modeButtons.hasOwnProperty(e.mode)&&o.modeButtons[e.mode].setChecked(e.value),o.getIcon()==o.modeButtons[e.mode].getIcon()&&o.setIconEnabled(o.modeButtons[e.mode].getChecked())}),a.GlobalEvents.on("modes.visible.changed",function(e){o.setVisible(e.visible)}),a.GlobalEvents.on("modes.usable.change",function(e){o.modeButtons.hasOwnProperty(e.mode)&&o.modeButtons[e.mode].setEnabled(e.value)}),a.GlobalEvents.on("modes.change",function(e){if(!o.builder.isAutoLayoutEnabled()&&e.mode in o.modeButtons){var t=o.modeButtons[e.mode];o.setIcon(t.getIcon()||o.defaultIconClass),o.setText(t.getTextElem().text()),o.setIconEnabled(t.getChecked())}}),o}return __extends(e,s),e.prototype.update=function(){for(var e in this.modeButtons)this.modeButtons[e].setEnabled(!this.builder.isAutoLayoutEnabled());return this},e.prototype.onModeSelect=function(e){var t=e.getData();for(var o in this.builder.setMode(t),this.modeButtons)t==o?this.modeButtons[o].setActive(!0):this.modeButtons[o].setActive(!1)},e.prototype.onModeEnable=function(e){if(!this.builder.isAutoLayoutEnabled()){var t=e.getData();this.builder.setModeEnabled(t,e.getChecked())}},e}(o.SPDefMenu);t.SPDefBuilderModeSelector=n}),define("default_light_ui/SPDefBuilderNotification",["require","exports","BuilderEvent","Service"],function(e,t,n,o){"use strict";t.__esModule=!0,t.SPDefBuilderNotification=void 0,o=__importDefault(o);var i=function(){function e(e,t){var o=this;this.builderBannerOriginalBottom=null,this.builder=e,this.elem=t,this.content=$("<div/>"),this.closeButton=$('<button class="close">&times;</button>').on("click touchend",function(){return o.setVisible(!1)}),this.elem.append(this.content,this.closeButton),setTimeout(function(){var e=o.getBuilderImageBanner();e&&(o.builderBannerOriginalBottom=parseInt(e.css("bottom")),e.css("bottom",o.builderBannerOriginalBottom+t.outerHeight()+"px"))},500),n.GlobalEvents.on("notification.changed",function(e){o.setMessage(e.message,e.isHtml)})}return e.prototype.getBuilderImageBanner=function(){return o.default.RemoteLoginDialog.getImageBanner()},e.prototype.setMessage=function(e,t){return void 0===t&&(t=!1),e?(t||"string"!=typeof e?this.content.empty().append(e):this.content.text(e),this.setVisible(!0)):this.setVisible(!1),this},e.prototype.setVisible=function(e){var t=this.getBuilderImageBanner();return t&&t.css("bottom",this.builderBannerOriginalBottom+"px"),e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.getElem=function(){return this.elem},e}();t.SPDefBuilderNotification=i}),define("default_light_ui/SPDefPageSelector",["require","exports","default_light_ui/SPDefMenu","BuilderEvent","default_light_ui/SPDefMenuItem","PluginApi/PluginTranslation","default_light_ui/SPDefMenuNode"],function(e,t,o,i,p,c,n){"use strict";t.__esModule=!0,t.SPDefPageSelector=void 0;var s=function(n){function e(e,t){void 0===t&&(t=!1);var o=n.call(this,!0)||this;return o.builder=e,o.mobile=t,o.inPreview=!1,o.elem.addClass("spd-page-selector"),o.setCaretVisible(!0),i.GlobalEvents.on("preview.show",function(e){o.inPreview=e.visible,o.updateVisibility()}),i.GlobalEvents.on("preview.hide",function(e){o.inPreview=e.visible,o.updateVisibility()}),i.GlobalEvents.on("page.load pages.changed",function(){o.update(),o.updateVisibility()}),o.update(),o.updateVisibility(),o}return __extends(e,n),e.prototype.updateVisibility=function(){this.setVisible((!this.inPreview||this.mobile)&&0<this.getItems().length)},e.prototype.update=function(){this.clearItems();for(var e,t=null,o=!0,n=0,i=this.builder.getSiteMenus();n<i.length;n++){var s=i[n];if(s.items.length&&!s.hasOnlyLinks()){o?o=!1:this.addItem(null);for(var l=0,a=s.items;l<a.length;l++){var u=a[l],r="";for(e=u.lvl;0<e;e--)r+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";r+=u.name,this.addItem(new p.SPDefMenuItem(null,r).setTooltip(u.fullName).setData(u).setActive(u.isCurrent()).onClick(this.onPageSelect.bind(this))),u.isCurrent()&&(t=u)}(s.isEditable()||s.isRemovable())&&this.addItem(null),this.addItem(new h(s))}}var d=t?t.fullName:(0,c.__)("Home");return this.mobile||this.setText('<span><span class="spd-selected-page-name">'+d+"</span></span>"),this},e.prototype.onPageSelect=function(e){var t=e.getData();this.inPreview?t.preview():t.navigate()},e}(o.SPDefMenu);t.SPDefPageSelector=s;var h=function(n){function e(e){var t=n.call(this)||this;t.menu=e;var o=[];return t.elem.addClass("spd-ps-menu-buttons no-hover"),e.isEditable()&&o.push($('<span class="spd-inner-btn"><i class="fa fa-pencil"></i>'+(0,c.__)("Edit")+"</span>").attr("title",(0,c.__)("Edit")).on("click",function(){t.menu.edit()})),e.isRemovable()&&o.push($('<span class="spd-inner-btn"><i class="fa fa-trash-o"></i>'+(0,c.__)("Remove")+"</span>").attr("title",(0,c.__)("Remove")).on("click",function(){t.menu.remove()})),t.setText(o),t.setTooltip(""),t}return __extends(e,n),e}(n.SPDefMenuNode)}),define("default_light_ui/SPDefToolbarGroup",["require","exports"],function(e,t){"use strict";t.__esModule=!0,t.SPDefToolbarGroup=void 0;var o=function(){function e(){var e=this;this.visible=!0,this.elem=$('<div class="spd-tb-group" />').on("toolbaritem.show toolbaritem.hide",function(){e.update()}),this.items=[]}return e.prototype.getElem=function(){return this.elem},e.prototype.setVisible=function(e){return this.visible=e,this.update(),this},e.prototype.update=function(){var e=this.visible;if(e){e=!1;for(var t=0,o=this.items;t<o.length;t++){if(o[t].getVisible()){e=!0;break}}}return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.addItem=function(e){return this.items.push(e),this.elem.append(e.getElem()),this.update(),this},e.prototype.getItems=function(){return this.items},e}();t.SPDefToolbarGroup=o}),define("default_light_ui/SPDefPreviewModeSelector",["require","exports","default_light_ui/SPDefMenu","BuilderEvent","default_light_ui/SPDefMenuItem","PluginApi/PluginTranslation"],function(e,t,o,l,a,u){"use strict";t.__esModule=!0,t.SPDefPreviewModeSelector=void 0;var n=function(s){function e(e){var i=s.call(this)||this;i.builder=e,i.modeButtons={},i.elem.addClass("spd-dd-inline");for(var t=0,o=__spreadArray([],e.getModes(),!0).sort(function(e,t){return t.width-e.width});t<o.length;t++){var n=o[t];i.addItem(i.modeButtons[n.id]=new a.SPDefMenuItem("ico-tb-mode-"+n.id,n.name).setTooltip(n.name).onClick(i.onSelectMode.bind(i)).setData(n.width))}return i.autoLayoutButton=new a.SPDefMenuItem("ico-tb-auto-layout",(0,u.__)("Auto layout")).setTooltip((0,u.__)("Auto layout")).setEnabled(i.builder.isAutoLayoutEnabled()),i.builder.getFeaturesetVersion()<4&&i.addItem(i.autoLayoutButton),l.GlobalEvents.on("preview.size.changed",function(e){var t=null,o=null;for(var n in i.modeButtons)i.modeButtons[n].getData()<=e.width&&!t&&(t=i.modeButtons[n]),o=i.modeButtons[n];for(var n in t||(t=o),i.modeButtons)i.modeButtons[n].setActive(i.modeButtons[n]===t)}),l.GlobalEvents.on("modes.autolayout.changed",function(e){i.autoLayoutButton.setActive(e.value).setChecked(e.value),i.update()}),l.GlobalEvents.on("modes.enabled.change",function(e){i.modeButtons.hasOwnProperty(e.mode)&&i.modeButtons[e.mode].setChecked(e.value)}),i}return __extends(e,s),e.prototype.onSelectMode=function(e){this.builder.setPreviewWidth(e.getData())},e.prototype.update=function(){for(var e in this.modeButtons)this.builder.isAutoLayoutEnabled()?this.modeButtons[e].getElem().addClass("disabled-s"):this.modeButtons[e].getElem().removeClass("disabled-s");return this},e}(o.SPDefMenu);t.SPDefPreviewModeSelector=n}),define("default_light_ui/SPDefTemplateMenu",["require","exports","default_light_ui/SPDefMenuItem","default_light_ui/SPDefMenu","PluginApi/PluginTranslation"],function(e,t,n,o,i){"use strict";t.__esModule=!0,t.SPDefTemplateMenu=void 0;var s=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.functionButtonMap={},t.setIcon("ico-tb-reset"),t.setText((0,i.__)("New")+"/"+(0,i.__)("Reset")),t.setCaretVisible(!0),t.addItem(t.functionButtonMap.new=new n.SPDefMenuItem(null,(0,i.__)("Change template")).onClick(function(){t.builder.showTemplateChooser()}).setVisible(t.builder.isTemplateSelectorVisible())),t.addItem(t.functionButtonMap.reset=new n.SPDefMenuItem(null,(0,i.__)("Reset")).onClick(function(){t.builder.resetSite(!0)}).setVisible(t.builder.isResetTemplateButtonVisible())),t.addItem(t.functionButtonMap.import=new n.SPDefMenuItem(null,(0,i.__)("Import")).onClick(function(){t.builder.showImportDialog()}).setEnabled(t.builder.isImportAvailable()).setVisible(t.builder.isImportVisible())),t}return __extends(e,o),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPDefMenu);t.SPDefTemplateMenu=s}),define("default_light_ui/SPDefLanguagesMenu",["require","exports","default_light_ui/SPDefMenu","default_light_ui/SPDefMenuItem"],function(e,t,o,r){"use strict";t.__esModule=!0,t.SPDefLanguagesMenu=void 0;var n=function(a){function u(e){var i=a.call(this)||this;i.builder=e,i.setCaretVisible(!0,!0);var t,o=i.builder.getLanguage();i.setIcon(u.getLanguageIcon(o)),i.setBackIcon("ico-tb-back-icon fa fa-long-arrow-left");for(var n=0,s=i.builder.getLanguages();n<s.length;n++){var l=s[n];i.addItem(t=new r.SPDefMenuItem(u.getLanguageIcon(l),l.name).setData(l).setActive(!!o&&l.locale===o.locale).setVisible(!l.hidden).onClick(i.onLanguageSelect.bind(i))),t.getElem().addClass("spd-limit-text")}i.getElem().on("click",function(e){e.stopImmediatePropagation();var t=i.getElem().parent(".spd-dd-item-container"),o=t.children(".spd-menu-node").length;if(0<o){var n=i.getElem().outerHeight(!0);t.css("minHeight",n*o),i.getElem().find(".spd-dd-item-container").css("minHeight",n*(o-1))}i.getElem().hasClass("ext-open-submenu")||i.getElem().parents(".spd-mn-has-dropdown").hasClass("ext-open")?i.getElem().removeClass("ext-open-submenu").parents(".spd-mn-has-dropdown").removeClass("ext-open"):i.getElem().addClass("ext-open-submenu").parents(".spd-mn-has-dropdown").addClass("ext-open")});i.getElem().parent(".spd-dd-item-container"),i.getElem();return i.getElem().on("mouseout",function(e){i.setIcon(u.getLanguageIcon(o))}),i}return __extends(u,a),u.getLanguageIcon=function(e){var t,o=e?e.countryCode:"";switch(o){case"cs":t="rs";break;case"ct":t="es-ct";break;case"gb":t="gb-wls";break;case"gl":t="gal";break;case"us":t="uk";break;default:t=o}return"flag-icon-"+t},u.prototype.onLanguageSelect=function(e){this.builder.setLanguage(e.getData())},u}(o.SPDefMenu);t.SPDefLanguagesMenu=n}),define("default_light_ui/SPDefSettingsMenu",["require","exports","default_light_ui/SPDefMenuItem","BuilderEvent","default_light_ui/SPDefMenu","PluginApi/PluginTranslation","default_light_ui/SPDefLanguagesMenu"],function(e,t,i,s,o,l,a){"use strict";t.__esModule=!0,t.SPDefSettingsMenu=void 0;var n=function(n){function e(t){var o=n.call(this)||this;o.builder=t,o.functionButtonMap={},o.setText((0,l.__)("Settings")),o.setCaretVisible(!0,!0),o.setIcon("icon-cog-big spd-mobile-visible"),o.text.addClass("spd-mobile-hidden"),o.addItem(new i.SPDefMenuItem("ico-tb-seo",(0,l.__)("SEO")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteSEODialog()}),"ext-hide"),o.addItem(o.functionButtonMap.background=new i.SPDefMenuItem("ico-tb-background",(0,l.__)("Background")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteBackgroundDialog()}),"ext-hide"),o.addItem(new i.SPDefMenuItem("ico-tb-styles",(0,l.__)("Styles")).onClick(function(e){o.builder.showSiteStylesDialog()}),"ext-hide"),o.addItem(new i.SPDefMenuItem("ico-tb-favicon",(0,l.__)("Favicon")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteFaviconDialog()}),"ext-hide"),o.addItem(new i.SPDefMenuItem("icon-cog-big",(0,l.__)("Settings")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSitePropertiesDialog()}),"ext-hide"),o.addItem(null,"ext-hide"),o.addItem(o.landingButton=new i.SPDefMenuItem("ico-tb-landing",(0,l.__)("Landing")).setTooltip((0,l.__)("If checked then pages of main site menu will be published as one page with common header and footer of homepage")).setVisible(!o.builder.isComposerMode()).onSwitch(function(e){var t=e.getActive();o.builder.setSiteLanding(t),e.setActive(t)}).setSwitchVisible(!0),"ext-hide"),t.getFeaturesetVersion()<4&&o.addItem(new i.SPDefMenuItem("ico-tb-grid",(0,l.__)("Grid and guides")).onClick(function(e){o.builder.showGridAndGuidesDialog()}),"ext-hide"),o.addItem(null,"ext-hide"),o.builder.isFullScreenSupported()&&(o.addItem(null,"ext-hide"),o.addItem(new i.SPDefMenuItem("ico-tb-fullscreen",(0,l.__)("Full Screen")).onClick(function(e){o.builder.toggleFullScreen()}),"ext-hide"));var e=new a.SPDefLanguagesMenu(t);return e.setCaretVisible(!1).setText((0,l.__)("Language")),e.getElem().addClass("lang-btn spd-mobile-hidden"),o.addItem(e),o.addItem(null),o.addItem(new i.SPDefMenuItem("ico-tb-logout",(0,l.__)("Log Out")).onClick(function(e){o.builder.logout()}),"ext-hide"),s.GlobalEvents.on("landing.changed",function(e){o.landingButton.setActive(e.value),o.landingButton.setChecked(e.value),4<=t.getFeaturesetVersion()&&(o.landingButton.setVisible(e.value),o.setSeparatorForItemVisible(e.value,o.landingButton))}),o}return __extends(e,n),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPDefMenu);t.SPDefSettingsMenu=n}),define("default_light_ui/SPDefPublishMenu",["require","exports","PluginApi/PluginTranslation","default_light_ui/SPDefMenuItem","default_light_ui/SPDefMenu"],function(e,t,n,i,o){"use strict";t.__esModule=!0,t.SPDefPublishMenu=void 0;var s=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.setCaretVisible(!0,!1,!0),t.setDropdownDirection("left"),t.setIcon("fa fa-floppy-o"),t.builder.isComposerMode()?(t.setText((0,n.__)("Save Composition")),t.addItem(new i.SPDefMenuItem(null,(0,n.__)("Save Composition")).setEnabled(t.builder.isElementCompositionSavingEnabled()).setTooltip(t.builder.isElementCompositionSavingEnabled()?"":"Please switch builder to English language").onClick(function(e){t.builder.saveElementComposition()}))):(t.setText((0,n.__)("Publish")),t.addItem(new i.SPDefMenuItem(null,(0,n.__)("Publish")).onClick(function(e){t.builder.publish()}).setEnabled(t.builder.isPublishAvailable()).setTooltipMark((0,n.__)("Save site and Publish it to the internet"),"bottom")),t.addItem(new i.SPDefMenuItem(null,(0,n.__)("Save")).onClick(function(e){t.builder.save(!0)}).setTooltipMark((0,n.__)("Save site without Publishing it"),"bottom")),t.addItem(new i.SPDefMenuItem(null,(0,n.__)("Backup/Restore")).onClick(function(e){t.builder.showBackupRestoreDialog()})),t.builder.isTemplateSavingAvailable()&&t.addItem(null),t.addItem(new i.SPDefMenuItem(null,(0,n.__)("Save As...")).setVisible(t.builder.isTemplateSavingAvailable()).setEnabled(t.builder.isTemplateSavingEnabled()).setTooltip(t.builder.isTemplateSavingEnabled()?"":"Please switch builder to English language").onClick(function(){t.builder.showSaveAsTemplateDialog()}))),t}return __extends(e,o),e}(o.SPDefMenu);t.SPDefPublishMenu=s}),define("default_light_ui/SPDefMobileMainMenu",["require","exports","default_light_ui/SPDefMenuItem","default_light_ui/SPDefMenu","PluginApi/PluginTranslation","default_light_ui/SPDefLanguagesMenu","default_light_ui/SPDefSettingsMenu","default_light_ui/SPDefTemplateMenu"],function(e,t,n,o,i,s,l,a){"use strict";t.__esModule=!0,t.SPDefMobileMainMenu=void 0;var u=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.functionButtonMap={},t.setText(null),t.setIcon("spd-icon-i-menu"),t.templateMenu=new a.SPDefTemplateMenu(t.builder).addSpacer(),t.settingsMenu=new l.SPDefSettingsMenu(t.builder).setText((0,i.__)("Settings")).setIcon("icon-cog-big").setCaretVisible(!0).addSpacer(),t.settingsMenu.getTextElem().removeClass("spd-mobile-hidden"),t.languageMenu=new s.SPDefLanguagesMenu(t.builder).setText((0,i.__)("Languages")).setCaretVisible(!0).addSpacer(),t.helpButton=new n.SPDefMenuItem("spd-icon-hint",null).setTooltip((0,i.__)("Help")).setText((0,i.__)("Help")).onClick(function(){t.builder.showHelp()}).addSpacer(),t.addItem(t.templateMenu),t.addItem(t.settingsMenu),t.addItem(t.languageMenu),t.addItem(t.helpButton),t}return __extends(e,o),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPDefMenu);t.SPDefMobileMainMenu=u}),define("default_light_ui/SPDefBuilderToolbar",["require","exports","default_light_ui/SPDefPageSelector","default_light_ui/SPDefToolbarGroup","default_light_ui/SPDefBuilderModeSelector","default_light_ui/SPDefPreviewModeSelector","default_light_ui/SPDefTemplateMenu","default_light_ui/SPDefSettingsMenu","default_light_ui/SPDefMenuItem","default_light_ui/SPDefMenuNode","default_light_ui/SPDefPublishMenu","BuilderEvent","PluginApi/PluginTranslation","default_light_ui/SPDefLanguagesMenu","default_light_ui/SPDefMobileMainMenu","Dialog","jquery-builder"],function(e,t,u,d,r,p,c,h,m,b,g,f,v,_,C,w,D){"use strict";t.__esModule=!0,t.SPDefBuilderToolbar=void 0,w=__importDefault(w),D=__importDefault(D);var o=function(){function e(e,t){var o,n=this;(this.functionButtonMap={},this.builder=e,this.elem=t,this.elem.append(e.isAdminMode()?(0,D.default)('<div class="spd-logo spd-mobile-hidden"/>').append((0,D.default)('<span class="admin-mode-label"></span>').text("— ADMIN MODE —")):(0,D.default)('<div class="spd-logo spd-mobile-hidden"/>').append((0,D.default)('<div class="spd-logo-pad"/>').append((0,D.default)('<span class="logo-img"></span>').css("backgroundImage","url("+this.builder.getLogoUrl()+")")))),this.elem.append(this.left=(0,D.default)('<div class="spd-tb-left spd-tb-part"/>')),this.elem.append(this.right=(0,D.default)('<div class="spd-tb-right spd-tb-part"/>')),this.pageSelector=new u.SPDefPageSelector(this.builder),this.pageSelectorMobile=new u.SPDefPageSelector(this.builder,!0),this.builderModeSelector=e.getFeaturesetVersion()<4?new r.SPDefBuilderModeSelector(this.builder):null,this.builderModeSelectorMobile=e.getFeaturesetVersion()<4?new r.SPDefBuilderModeSelector(this.builder):null,this.previewModeSelector=new p.SPDefPreviewModeSelector(this.builder),this.templateMenu=new c.SPDefTemplateMenu(this.builder),this.templateMenuMobile=new c.SPDefTemplateMenu(this.builder),this.templateMenuMobile.getElem().addClass("spd-template-menu"),this.templateMenuMobile.setAutoHideLabel(!0),this.settingsMenu=new h.SPDefSettingsMenu(this.builder).setText((0,v.__)("Settings")).setIcon("icon-cog-big"),this.languagesMenu=new _.SPDefLanguagesMenu(this.builder),this.helpButton=new m.SPDefMenuItem("fa fa-question-circle-o",null).setTooltip((0,v.__)("Help")).onClick(function(){n.builder.showHelp(),n.builder.forwardFlowStep(6,!0)}),!e.isTestMode()&&e.isB2C()&&/\.site\.pro$/.test(e.getSiteDomain()))&&(this.domainsButton=new m.SPDefMenuItem("ico-tb-domains",null).setText((0,v.__)("Domains")).setTooltip((0,v.__)("Domains")).onClick(function(){if(!o){(o=new w.default).setTitleVisible(!1),o.addButton((0,v.__)("Close"));var t=(0,D.default)('<iframe src="'+e.getB2cDomainsUrl()+'" style="width: 100%; height: 130px; border: none;">');(0,D.default)(window).on("message",function(e){e.originalEvent.data&&"resize"===e.originalEvent.data.action&&e.originalEvent.data.value&&t.css("height",e.originalEvent.data.value+35+"px")}),o.setContent(t)}o.show()}));this.helpButtonMobile=new m.SPDefMenuItem("fa fa-question-circle-o",null).setTooltip((0,v.__)("Help")).onClick(function(){n.builder.showHelp()}),this.helpButton.getElem().addClass("help-button"),this.helpButtonMobile.getElem().addClass("help-button"),this.helpButton.setText((0,v.__)("Help")),this.helpButtonMobile.setText(null),this.functionButtonMap.undo=this.undoButton=new m.SPDefMenuItem("ico-tb-undo",null).setTooltip((0,v.__)("Undo")).onClick(function(){n.builder.historyUndo()}),this.functionButtonMap.redo=this.redoButton=new m.SPDefMenuItem("ico-tb-redo",null).setTooltip((0,v.__)("Redo")).onClick(function(){n.builder.historyRedo()}),this.functionButtonMap.preview=this.showPreviewButton=new m.SPDefMenuItem(null,(0,v.__)("Preview")).setIcon("ico-tb-preview").setTooltip((0,v.__)("Preview")).onClick(function(){n.showPreviewButton.setIcon("fa fa-spinner fa-pulse"),n.builder.preview().always(function(){return n.showPreviewButton.setIcon("ico-tb-preview")})}),this.showPreviewButton.setAutoHideLabel(!0),this.showPreviewButton.getTextElem(),this.hidePreviewButton=new m.SPDefMenuItem(null,(0,v.__)("Close preview")).setIcon("fa fa-eye-slash").setTooltip((0,v.__)("Back to Editor")).onClick(function(){n.builder.hidePreview()}),this.hidePreviewButton.getElem().addClass("spd-close-preview-btn"),this.mobileMenu=new C.SPDefMobileMainMenu(this.builder);var i=e.getSignUpInfo();i&&(this.signUpButton=new m.SPDefMenuItem("ico-tb-sign-in",null).setAutoHideLabel(!0).setText(i.title).onClick(function(){i&&window.open(i.url)}));var s=wb_builder.isAnyoneEditingNow&&wb_builder.builderUserName;if(this.left.append((new d.SPDefToolbarGroup).addItem(this.pageSelector).getElem().addClass("spd-mobile-hidden no-hover")),!s){var l=new d.SPDefToolbarGroup;l.addItem(this.undoButton),l.addItem(this.redoButton),this.left.append((new d.SPDefToolbarGroup).addItem(this.templateMenu).getElem().addClass("spd-mobile-hidden"),l.getElem().addClass("spd-mobile-hidden combined-group")),this.builderModeSelector&&this.left.append((new d.SPDefToolbarGroup).addItem(this.builderModeSelector).getElem().addClass("mode-selector spd-mobile-hidden no-border")),this.left.append((new d.SPDefToolbarGroup).addItem(this.previewModeSelector).getElem().addClass("no-hover preview-mode-selector spd-mobile-hidden")).addClass("spd-mobile-hidden")}var a=[];wb_builder.uiDef&&"object"==typeof wb_builder.uiDef&&wb_builder.uiDef.toolbars&&"object"==typeof wb_builder.uiDef.toolbars&&wb_builder.uiDef.toolbars["control-toolbar-cont"]&&"object"==typeof wb_builder.uiDef.toolbars["control-toolbar-cont"]&&wb_builder.uiDef.toolbars["control-toolbar-cont"].items&&(wb_builder.uiDef.toolbars["control-toolbar-cont"].items,1)&&(a=wb_builder.uiDef.toolbars["control-toolbar-cont"].items),this.buildUIItems(a,e),this.right.append((new d.SPDefToolbarGroup).addItem(this.pageSelectorMobile.setIcon("ico-tb-landing").setText(null).setCaretVisible(!1)).getElem().addClass("spd-mobile-visible"),(new d.SPDefToolbarGroup).addItem(this.templateMenuMobile).getElem().addClass("spd-mobile-visible mobile-no-border")),this.builderModeSelectorMobile&&this.right.append((new d.SPDefToolbarGroup).addItem(this.builderModeSelectorMobile).getElem().addClass("mode-selector spd-mobile-visible mobile-no-border")),this.right.append((0,D.default)('<div class="spacer"></div>'),(new d.SPDefToolbarGroup).addItem(this.helpButton).getElem().addClass("spd-mobile-hidden"),this.domainsButton?(new d.SPDefToolbarGroup).addItem(this.domainsButton).getElem().addClass("spd-mobile-hidden"):null,(new d.SPDefToolbarGroup).addItem(this.settingsMenu).getElem(),(new d.SPDefToolbarGroup).addItem(this.languagesMenu).getElem().addClass("spd-mobile-visible"),this.signUpButton?(new d.SPDefToolbarGroup).addItem(this.signUpButton).getElem():null,(new d.SPDefToolbarGroup).addItem(this.showPreviewButton).getElem().addClass("no-border mobile-no-border"),(new d.SPDefToolbarGroup).addItem(this.hidePreviewButton).getElem()),s?(this.builderDisabledLabel=(new b.SPDefMenuNode).setIcon("fa fa-lock").setText((0,v.__)("Builder Locked.")+" "+(0,v.__)("Please try again later.")+"<br><small>("+(0,v.__)("%s is editing website now").replace("%s","<strong>"+wb_builder.builderUserName+"</strong>")+")</small>"),this.builderDisabledLabel.getElem().addClass("spb-builder-disabled-label"),this.right.append((new d.SPDefToolbarGroup).addItem(this.builderDisabledLabel).getElem())):(this.saveMenu=new g.SPDefPublishMenu(this.builder),this.saveMenu.getElem().addClass("spd-publish-menu"),this.right.append((new d.SPDefToolbarGroup).addItem(this.saveMenu).getElem().addClass("no-hover mobile-no-border"))),f.GlobalEvents.on("preview.show",function(){n.onPreviewVisibilityChange(!0)}),f.GlobalEvents.on("preview.hide",function(){n.onPreviewVisibilityChange(!1)}),f.GlobalEvents.on("history.changed",function(){n.onHistoryChange()}),this.elem.on("touchstart touchmove touchend touchcancel",function(e){e.stopImmediatePropagation(),n.builder.hideContextMenus()}).on("mousedown mouseover",function(){n.builder.hideContextMenus()}).on("click",function(e){e.ctrlKey||n.builder.unselectAll()}),this.onHistoryChange(),this.onPreviewVisibilityChange(!1),(0,D.default)(window).on("resize orientationchange",function(){n.update()}),this.update()}return e.prototype.buildUIItems=function(e,t){var n=[],o=0;this.left.children().each(function(){o+=20,n.push({order:o,elem:(0,D.default)(this)})});for(var i=function(e){var t=new d.SPDefToolbarGroup,o=new m.SPDefMenuItem(e.img?e.img:null,e.name?e.name:null);e.url&&o.onClick(function(){window.open(e.url)}),t.addItem(o),n.push({order:e.order,elem:t.getElem()})},s=0,l=e;s<l.length;s++){i(l[s])}n.sort(function(e,t){return e.order===t.order?0:e.order>t.order?1:-1});for(var a=0,u=n;a<u.length;a++){var r=u[a];this.left.append(r.elem)}},e.prototype.update=function(){var e=(0,D.default)("#builder_toolbar").outerWidth(!0);this.elem.removeClass("unfit"),e<(0,D.default)("#builder_toolbar .spd-logo").outerWidth(!0)+(0,D.default)("#builder_toolbar .spd-tb-left").outerWidth(!0)+(0,D.default)("#builder_toolbar .spd-tb-right").outerWidth()&&this.elem.addClass("unfit")},e.prototype.onHistoryChange=function(){this.undoButton.setEnabled(this.builder.isHistoryUndoAvailable()),this.redoButton.setEnabled(this.builder.isHistoryRedoAvailable())},e.prototype.onPreviewVisibilityChange=function(e){var t,o=this.builder.isComposerMode();this.builderModeSelector&&this.builderModeSelector.setVisible(!e),this.builderModeSelectorMobile&&this.builderModeSelectorMobile.setVisible(!e&&!o),this.previewModeSelector.setVisible(e),this.templateMenu.setVisible(!e&&!o),this.templateMenuMobile.setVisible(!e&&!o),this.settingsMenu.setVisible(!e),this.domainsButton&&this.domainsButton.setVisible(!e),this.helpButton.setVisible(!e&&this.builder.isHelpAvailable()&&!o),this.helpButtonMobile.setVisible(!e&&this.builder.isHelpAvailable()&&!o),this.undoButton.setVisible(!e),this.redoButton.setVisible(!e),this.showPreviewButton.setVisible(!e&&!o),this.hidePreviewButton.setVisible(e),this.languagesMenu.setVisible(!e),this.saveMenu&&this.saveMenu.setVisible(!e),null===(t=this.signUpButton)||void 0===t||t.setVisible(!e)},e.prototype.setVisible=function(e){return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.getElem=function(){return this.elem},e.prototype.getHidePreviewButton=function(){return this.hidePreviewButton},e.prototype.getButtonByFunction=function(e){var t=e.split("-");return"config"===t[0]?1<t.length?this.settingsMenu.getButtonByFunction(t[1]):this.settingsMenu:"change"===t[0]?1<t.length?this.templateMenu.getButtonByFunction(t[1]):this.templateMenu:this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}();t.SPDefBuilderToolbar=o}),define("default_light_ui/SPDefElementsToolbar",["require","exports","default_light_ui/SPDefToolbarGroup","default_light_ui/SPDefMenuItem","default_light_ui/SPDefMenu","BuilderEvent","PluginApi/PluginTranslation"],function(e,t,c,h,m,b,g){"use strict";t.__esModule=!0,t.SPDefElementsToolbar=void 0;var o=function(){function e(e,t){var o=this;this.groupsSizes=[],this.UIButtonSize={width:80,height:80},this.totalCollapsedGroupsWidth=0,this.mobile=!1,this.builder=e,this.elem=t;var n=$('<div class="spd-tb-full-width spd-tb-part"/>');this.elem.append(n),this.elem.append(this.bottom=$('<div class="spd-tb-bottom spd-tb-part spd-mobile-visible"/>')),this.collapseButton=new h.SPDefMenuItem("fa fa-plus",null).onClick(function(e){o.builder.hideContextMenus(),m.SPDefMenu.closeAllDropDowns(),o.setCollapsed(!o.getCollapsed())}),this.redoButton=new h.SPDefMenuItem("ico-tb-redo",null).setTooltip((0,g.__)("Redo")).onClick(function(){o.builder.historyRedo()}),this.undoButton=new h.SPDefMenuItem("ico-tb-undo",null).setTooltip((0,g.__)("Undo")).onClick(function(){o.builder.historyUndo()}),this.bottom.append((new c.SPDefToolbarGroup).addItem(this.undoButton).getElem(),(new c.SPDefToolbarGroup).addItem(this.collapseButton).getElem().addClass("button-bottom-collapse"),(new c.SPDefToolbarGroup).addItem(this.redoButton).getElem()),this.pluginButtons=new c.SPDefToolbarGroup,this.pluginButtons.setVisible(!0);var i=this;this.pluginButtons.getElem().append($("<div class='button-top-collapse spd-mobile-visible'><i class='fa fa-chevron-down'></i></div>").click(function(){i.builder.hideContextMenus(),m.SPDefMenu.closeAllDropDowns(),i.setCollapsed(!0)})),n.append(this.pluginButtons.getElem().addClass("spd-et-plugins")),this.setCollapsed(!1);var s=new m.SPDefMenu;s.setCaretVisible(!0).setInline(!0);for(var l=0,a=this.builder.getCompositionCollections();l<a.length;l++){var u=a[l],r=void 0;r="-"===u.name?null:new h.SPDefMenuItem(u.icon,u.name||u.id).onClick(this.onElementButtonClick.bind(this)).setEnabled(!0).setData(u.id).setDragable(!0),u.inactive&&r&&r.markEnabled(!1),s.addItem(r),r&&(r.getElem().attr("id","wb__"+u.id),r.getElem().addClass("ui-draggable"),e.bindCompositionButton({id:u.id,name:u.name,icon:u.icon,elem:r.getElem()},function(){o.mobile&&o.setCollapsed(!0),m.SPDefMenu.closeAllDropDowns()},function(){o.mobile&&o.setCollapsed(!0)}))}var d=s.getElem().find(".spd-dd-item-container").detach(),p=$('<div class="cont-c"></div>').append(d);s.getElem().find(".spd-dd-scroll").append(p),this.pluginButtons.addItem(s),s.setInline(!0),s.getElem().offset(),this.setCollapsed(!0),$(window).on("resize orientationchange",function(){o.update()}),this.update(),this.elem.on("touchstart touchmove touchend touchcancel",function(e){o.builder.hideContextMenus()}).on("mousedown mouseover",function(e){o.builder.hideContextMenus()}).on("click",function(e){e.ctrlKey||o.builder.unselectAll()}),this.onHistoryChange(),b.GlobalEvents.on("history.changed",function(){o.onHistoryChange()})}return e.prototype.getElem=function(){return this.elem},e.prototype.onElementButtonClick=function(e){var t=e.getData(),o=$(window);this.builder.addElementAt(t,o.width()/2,o.height()/2),this.mobile&&this.setCollapsed(!0)},e.prototype.onElementDrop=function(e,t){var o=e.getData(),n=$(window);this.builder.addElementAt(o,t.offset.left+45-n.scrollLeft(),t.offset.top+30-n.scrollTop()),this.mobile&&this.setCollapsed(!0)},e.prototype.update=function(){for(var e,t=$(window).width(),o=this.pluginButtons.getItems(),n=this.pluginButtons.getElem().find(".spd-dropdown"),i=n?Math.floor(n.outerHeight(!0)/(this.UIButtonSize.height?this.UIButtonSize.height:80)):1,s=0,l=o.length;s<l;s++)(e=o[s]).setInline(!0),e.setOneRow(1==i);return this.mobile=3<i||t<1100?(this.pluginButtons.getElem().addClass("mobile"),!0):(this.pluginButtons.getElem().removeClass("mobile"),!1),this},e.prototype.setVisible=function(e){return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.setCollapsed=function(e){return e?(this.elem.addClass("spd-collapsed"),this.elem.parents("body").find(".spd-tb-bottom").addClass("spd-collapsed")):(this.elem.removeClass("spd-collapsed"),this.elem.parents("body").find(".spd-tb-bottom").removeClass("spd-collapsed")),e||this.update(),this},e.prototype.getCollapsed=function(){return this.elem.is(".spd-collapsed")},e.prototype.getPluginButtonAndGroup=function(e){for(var t=0,o=this.pluginButtons.getItems();t<o.length;t++){var n=o[t];if(n instanceof m.SPDefMenu)for(var i=0,s=n.getItems();i<s.length;i++){var l=s[i];if(l instanceof h.SPDefMenuItem)if(e===l.getData()||e===l.name||("Layout"===l.name||l.name===(0,g.__)("Layout"))&&"LayoutElement"===e||("Text"===l.name||l.name===(0,g.__)("Text"))&&"TextArea"===e||("Media"===l.name||l.name===(0,g.__)("Media"))&&"Youtube"===e||("Maps"===l.name||l.name===(0,g.__)("Maps"))&&"GoogleMaps"===e||l.name===(0,g.__)("Picture")&&"Picture"===e||l.name===(0,g.__)("Gallery")&&"Gallery"===e||l.name===(0,g.__)("Shape")&&"Shape"===e||l.name===(0,g.__)("Line")&&"Line"===e||l.name===(0,g.__)("Button")&&"Button"===e||l.name===(0,g.__)("Form")&&"Form"===e||l.name===(0,g.__)("Menu")&&"Menu"===e||l.name===(0,g.__)("Commerce")&&"StoreCart"===e||l.name===(0,g.__)("Commerce")&&"Store"===e||l.name===(0,g.__)("Languages")&&"Languages"===e)return{group:n,button:l}}}return null},e.prototype.onHistoryChange=function(){this.undoButton.setEnabled(this.builder.isHistoryUndoAvailable()),this.redoButton.setEnabled(this.builder.isHistoryRedoAvailable())},e.prototype.getHeight=function(){return this.pluginButtons.getElem().outerHeight()},e}();t.SPDefElementsToolbar=o}),define("default_light_ui/SPDefUI",["require","exports","PluginApi/UIManager","BuilderEvent","default_light_ui/SPDefBuilderToolbar","default_light_ui/SPDefElementsToolbar","PluginApi/PluginResourceLoader","PluginApi/PluginTranslation","default_light_ui/SPDefBuilderNotification","HelpSystem/Tooltip","default_light_ui/SPDefMenu"],function(e,t,o,r,d,p,c,h,m,a,n){"use strict";t.__esModule=!0;var i=function(u){function e(n){var i=u.call(this,n)||this;i.builder=n;var s=$(document.body),l=new c.PluginResourceLoader(pluginData),a="main.min.css?2020092001";return l.loadResources(["fonts.css",a,"main.html","translations.json"],function(e){var t=i.builder.getLanguage();if(t&&e["translations.json"].data&&"object"==typeof e["translations.json"].data&&e["translations.json"].data.hasOwnProperty(t.locale)&&(0,h.extendTranslations)(e["translations.json"].data[t.locale]),e["fonts.css"].data&&l.addRawStyleSheet(e["fonts.css"].data),e[a].data&&l.addRawStyleSheet(e[a].data),pluginData.customConfiguration){var o=[];pluginData.customConfiguration.hasOwnProperty("controlToolbarBackgroundColor")&&(o.push("#builder_toolbar { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+"; }"),o.push(".preview-mode-selector .spd-menu-node .spd-menu-node { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+" ! important; }"),o.push(".preview-mode-selector .spd-menu-node .spd-menu-node.active { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+" ! important; }"),o.push(".preview-mode-selector .spd-menu-node .spd-menu-node.disabled { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+" ! important; }"),o.push(".modal-dialog.wb-tpl-dialog .modal-header { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarLineColor")&&(o.push(".spd-tb-part>.spd-tb-group:not(:last-child):not(.no-border):after { background-color: "+pluginData.customConfiguration.controlToolbarLineColor+"; }"),o.push(".preview-mode-selector .spd-menu-node .spd-menu-node:not(:last-of-type):after { background-color: "+pluginData.customConfiguration.controlToolbarLineColor+"; }")),pluginData.customConfiguration.hasOwnProperty("elementToolbarBackgroundColor")&&(o.push(".spd-menu-node.spd-dd-inline>.spd-dropdown>.spd-dd-scroll>.cont-c>.spd-dd-item-container { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spd-menu-node:not(.spd-dd-inline).spd-over { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+" ! important; }"),o.push(".spd-menu-node:not(.spd-dd-inline)>.spd-dropdown>.spd-dd-scroll { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spd-page-selector { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spd-tb-part>.spd-tb-group:not(.no-hover):hover { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".preview-mode-selector .spd-menu-node .spd-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("elementToolbarLineColor")&&(o.push("#elements_toolbar .spd-et-plugins { border-bottom-color: "+pluginData.customConfiguration.elementToolbarLineColor+"; }"),o.push("#elements_toolbar .spd-et-plugins .spd-menu-node.spd-dd-inline .spd-dropdown-separator { background-color: "+pluginData.customConfiguration.elementToolbarLineColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonTextColor")&&(o.push(".spd-menu-node.spd-publish-menu>.spd-mn-content { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push(".spd-menu-node.spd-publish-menu .spd-dropdown .spd-dd-scroll .spd-mn-content { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push("#builder_toolbar .spd-publish-menu .wb_badge_help { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; border-color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push(".modal-dialog:not(.wb-tpl-dialog) .modal-header, .modal-dialog:not(.wb-tpl-dialog) .modal-header .close { color: "+pluginData.customConfiguration.publishButtonTextColor+"; }"),o.push(".spd-menu-node.spd-publish-menu>.spd-mn-content .caret-box { border-left-color: "+pluginData.customConfiguration.publishButtonTextColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonBackgroundColor")&&(o.push(".spd-menu-node.spd-publish-menu>.spd-mn-content { background-color: "+pluginData.customConfiguration.publishButtonBackgroundColor+" ! important; }"),o.push(".modal-dialog:not(.wb-tpl-dialog) .modal-header { background-color: "+pluginData.customConfiguration.publishButtonBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonDropdownBackgroundColor")&&(o.push(".spd-menu-node.spd-publish-menu .spd-dropdown .spd-dd-scroll { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }"),o.push(".spd-menu-node.spd-publish-menu:hover .caret-box { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonDropdownBackgroundHoverColor")&&o.push(".spd-menu-node.spd-publish-menu .spd-dropdown .spd-dd-scroll .spd-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundHoverColor+" ! important; }"),pluginData.customConfiguration.hasOwnProperty("normalItemColor")&&(o.push(".spdrk-selected-page-name { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push(".spd-menu-node>.spd-mn-content { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push("#elements_toolbar .spd-et-plugins .spd-menu-node.ui-draggable>.spd-mn-content { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push("#elements_toolbar .spd-menu-node>.spd-mn-content>.spd-mn-text { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push("#builder_toolbar .spd-menu-node .wb_badge_help { color: "+pluginData.customConfiguration.normalItemColor+"; border-color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push(".modal-dialog.wb-tpl-dialog .modal-header, .modal-dialog.wb-tpl-dialog .modal-header .close { color: "+pluginData.customConfiguration.normalItemColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("activeItemColor")&&(o.push(".spd-menu-node.active>.spd-mn-content { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push("#elements_toolbar .spd-et-plugins .spd-menu-node.active.ui-draggable>.spd-mn-content { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push("#elements_toolbar .spd-menu-node.active>.spd-mn-content>.spd-mn-text { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push(".spd-menu-node:not(.spd-dd-inline)>.spd-dropdown>.spd-dd-scroll>.spd-dd-item-container>.spd-menu-node.active .spd-mn-text, .spd-menu-node:not(.spd-dd-inline)>.spd-dropdown>.spd-dd-scroll>.spd-dd-item-container>.spd-menu-node.active .ico-tb-i { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push("#builder_toolbar .spd-menu-node.active>.spd-mn-content .wb_badge_help { color: "+pluginData.customConfiguration.activeItemColor+"; border-color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push(".spd-switch-input:checked+.spd-switch-label:after { background-color: "+pluginData.customConfiguration.activeItemColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("disabledItemOpacity")&&o.push(".spd-menu-node.disabled>.spd-mn-content { opacity: "+(pluginData.customConfiguration.disabledItemOpacity/100).toFixed(3)+"; }"),pluginData.customConfiguration.hasOwnProperty("hideTextUnderIcons")&&"1"===pluginData.customConfiguration.hideTextUnderIcons&&(o.push("#elements_toolbar .spd-menu-node>.spd-mn-content>.spd-mn-text { display: none; }"),o.push("#elements_toolbar .spd-et-plugins .spd-menu-node.ui-draggable>.spd-mn-content>.ico-tb-i { margin-bottom: 0; }")),pluginData.customConfiguration.hasOwnProperty("hoverItemColor")&&(o.push(".spd-menu-node:not(.disabled):hover>.spd-mn-content { color: "+pluginData.customConfiguration.hoverItemColor+"; }"),o.push("#elements_toolbar .spd-et-plugins .spd-menu-node:not(.disabled):hover.ui-draggable>.spd-mn-content { color: "+pluginData.customConfiguration.hoverItemColor+"; }"),o.push("#elements_toolbar .spd-menu-node:not(.disabled):hover>.spd-mn-content>.spd-mn-text { color: "+pluginData.customConfiguration.hoverItemColor+"; }"),o.push("#builder_toolbar .spd-menu-node:not(.disabled):hover>.spd-mn-content .wb_badge_help { color: "+pluginData.customConfiguration.hoverItemColor+"; border-color: "+pluginData.customConfiguration.hoverItemColor+"; }")),pluginData.customConfiguration.hasOwnProperty("hoverItemBackgroundColor")&&(o.push("#elements_toolbar .spd-et-plugins .spd-menu-node.ui-draggable:not(.disabled):hover, #elements_toolbar .spd-et-plugins .spd-menu-node.ui-draggable:not(.disabled):focus, #elements_toolbar .spd-et-plugins .spd-menu-node.ui-draggable:not(.disabled):active { background-color: "+pluginData.customConfiguration.hoverItemBackgroundColor+"; }"),o.push(".spd-menu-node:not(.spd-dd-inline)>.spd-dropdown>.spd-dd-scroll>.spd-dd-item-container>.spd-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.hoverItemBackgroundColor+"; }")),l.addRawStyleSheet(o.join("\n"))}e["main.html"].data&&s.append(e["main.html"].data),i.builderToolbar=new d.SPDefBuilderToolbar(n,$("#builder_toolbar")),i.elementsToolbar=new p.SPDefElementsToolbar(n,$("#elements_toolbar")),i.builderNotification=new m.SPDefBuilderNotification(n,$("#builder_notification")),i.builder.init($("#builder_canvas")),setTimeout(function(){i.builderToolbar&&i.builderToolbar.update(),i.elementsToolbar&&i.elementsToolbar.update()},600)}),r.GlobalEvents.on("preview.show",function(){i.elementsToolbar&&i.elementsToolbar.setVisible(!1),s.addClass("preview-mode")}),r.GlobalEvents.on("preview.hide",function(){i.elementsToolbar&&i.elementsToolbar.setVisible(!0),s.removeClass("preview-mode")}),n.isAdminMode()&&$("body").addClass("admin-mode"),i}return __extends(e,u),e.prototype.lookupUIElement=function(e,t){var o=u.prototype.lookupUIElement.call(this,e,t);if(!o)switch(e){case"control":if(!this.builderToolbar)break;var n=this.builderToolbar.getButtonByFunction(t);n&&(o=new a.ScenarioStepSubject(n.getElem(),null,10));break;case"plugin":if(this.elementsToolbar){var i=this.elementsToolbar.getPluginButtonAndGroup(t);if(i){this.elementsToolbar.setCollapsed(!1);var s=i.group,l=i.button;s.setOpen(!0),o=new a.ScenarioStepSubject(l.getElem(),null,10)}else o=new a.ScenarioStepSubject(this.elementsToolbar.getElem(),null,10)}break;case"preview":if(!this.builderToolbar)break;"close"===t&&(o=new a.ScenarioStepSubject(this.builderToolbar.getHidePreviewButton().getElem(),null,10))}return o},e.prototype.getToolbarHeight=function(){return(this.builderToolbar?this.builderToolbar.getElem().outerHeight():0)+(this.elementsToolbar?this.elementsToolbar.getHeight():0)},e.prototype.closeAll=function(){u.prototype.closeAll.call(this),n.SPDefMenu.closeAllDropDowns(),this.elementsToolbar&&this.elementsToolbar.mobile&&this.elementsToolbar.setCollapsed(!0)},e}(o.UIManager);(0,o.registerUI)(pluginData.id,i)});require(["default_light_ui\/SPDefUI"], function(){});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"bing_maps","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/bing_maps","customConfiguration":null};
PluginWrapper._config.id = 'bing_maps';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/bing_maps\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_myMap\" class=\"bingmap\" style=\"position: relative; min-width: 200px; width: 100%; height: 100%;\"><\/div>\n{{#isPublished}}\n\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"https:\/\/ecn.dev.virtualearth.net\/mapcontrol\/mapcontrol.ashx?v=7.0\"><\/script>\n\t{{\/firstOnPage}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar getMap_{{id}} = function() {\n\t\t\tMicrosoft.Maps.loadModule('Microsoft.Maps.Themes.BingTheme', { callback: function() {\n\t\t\t\tmap_{{id}} = new Microsoft.Maps.Map(document.getElementById('{{id}}_myMap'), { \n\t\t\t\t\tcredentials: '{{#isPreview}}{{content.previewKey}}{{\/isPreview}}{{^isPreview}}{{content.apiKey}}{{\/isPreview}}', \n\t\t\t\t\tmapTypeId: (\"{{content.type}}\" || Microsoft.Maps.MapTypeId.road),\n\t\t\t\t\ttheme: new Microsoft.Maps.Themes.BingTheme(),\n\t\t\t\t\tzoom: {{content.zoomLevel}},\n\t\t\t\t\tcenter: new Microsoft.Maps.Location(Number(\"{{content.loc1}}\").valueOf(), Number(\"{{content.loc2}}\").valueOf())\n\t\t\t\t});\n\t\t\t\tvar pushpin= new Microsoft.Maps.Pushpin(map_{{id}}.getCenter(), null);\n\t\t\t\tpushpin.setLocation(new Microsoft.Maps.Location(Number(\"{{content.loc1}}\").valueOf(), Number(\"{{content.loc2}}\").valueOf()));\n\t\t\t\tmap_{{id}}.entities.push(pushpin)\n\t\t\t}});\n\t\t}\n\t\ttwait = function() {\n\t\t\tif (window.Microsoft && window.Microsoft.Maps && typeof window.Microsoft.Maps.loadModule === 'function') {\n\t\t\t\tgetMap_{{id}}();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetTimeout(twait, 100);\n\t\t};\n\t\ttwait();\n\t})();\n<\/script>\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('bing_maps', {
	name: __('Bing Maps'),
	noButton: true,
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 602, height: 327},
		resizable: true,
		renderOnce: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('API Key'), helpText: __('Get API Key from %s').replace('%s', '<a style="word-break: break-word;" href="https://msdn.microsoft.com/library/ff428642.aspx" target="_blank">https://msdn.microsoft.com/library/ff428642.aspx</a>')},
					{type: 'TextField', id: 'apiKey'}
				]},
				{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Coordinates or address'), helpText: __('Location address or coordinates')},
						{type: 'TextField', id: 'address', placeholder: '40.6898193359375, -74.0456314086914'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Zoom level'), helpText: __('ex. 4')},
						{type: 'SizeSelector', id: 'zoomLevel'}
					]}
				]},
				{type: 'Label', text: __('Drag marker to set your location'), css: {marginTop: 15}},
				{type: 'CustomContainer', id: 'mapElem', css: {width: '100%', height: '234px', position: 'relative', border: '1px solid #aaaaaa', backgroundColor: '#ebebeb'}, init: function() { this.getElem().append('<div>'); }}
			]}
		]
	},
	properties: [
		{id: 'apiKey', type: 'BingApiKey',
			get: function(data) { return data.content.apiKey; },
			set: function(value, data) {
				data.content.apiKey = value;
			}
		},
		{id: 'address', type: 'BingAddress', helpText: __('Location address or coordinates'),
			get: function(data) { return {text: data.content.address, latLng: [data.content.loc1, data.content.loc2]}; },
			set: function(value, data) {
				var wnd = window;
				data.content.address = value.text;
				data.content.loc1 = value.latLng[0];
				data.content.loc2 = value.latLng[1];
				var loc = new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2);
				this.map.setView({center: loc});
				this.mapMarker.setLocation(loc);
			}
		},
		{id: 'zoomLevel', type: 'BingMapZoom', helpText: __('ex. 4'),
			get: function(data) { return data.content.zoomLevel; },
			set: function(value, data) {
				data.content.zoomLevel = value;
				this.map.setView({
					zoom: (typeof data.content.zoomLevel === "string") ? parseFloat(data.content.zoomLevel) : data.content.zoomLevel,
				});
			}
		},
		{id: 'mapType', type: 'BingMapType',
			get: function(data) { return (data.content.type || 'r'); },
			set: function(value, data) {
				data.content.type = value;
				this.map.setMapType(data.content.type);
			}
		}
	],
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		key: wb_builder.mapsConfig.bingMapsApiKey,
		addListener: function (inst, func) {
			if (this.scriptReady) {
				func.call(inst, this.ymaps);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://www.bing.com/mapspreview/sdk/mapcontrol?v=7.0', function () {
					var twait = function () {
						var wnd = window;
						if (wnd.Microsoft && wnd.Microsoft.Maps && typeof wnd.Microsoft.Maps.loadModule === 'function') {
							wnd.Microsoft.Maps.loadModule('Microsoft.Maps.Themes.BingTheme', {
								callback: function () {
									self.scriptReady = true;
									for (var i = 0; i < self.listeners.length; i++) {
										self.listeners[i].func.call(self.listeners[i].inst);
									}
								}
							});
							return;
						}
						setTimeout(twait, 100);
					};
					twait();
				});
			}
		},
		setKey: function(key) {
			if (!key || this.key) return;
			this.key = key;
			this.addListener();
		}
	},
	map: null,
	mapMarker: null,
	mapElem: null,
	resizeAction: function (data, elem) {
		if (this.mapElem)
			this.mapElem.css({
				width: data.width,
				height: data.height
			});
		if (this.map && this.map.container)
			this.map.container.fitToViewport();
	},
	openAction: function (fields, data, elem) {
		fields.apiKey.setText(data.content.apiKey);
		fields.address.setText(data.content.address);
		fields.zoomLevel.setValue(data.content.zoomLevel);
		var self = this, wnd = window;
		data.content.coord = data.content.address.split(',');
		data.content.loc1 = data.content.coord[0];
		data.content.loc2 = data.content.coord[1];

		if (!fields.map) {
			$(fields.address.getElem().get(0)).autocomplete({
				source: function(request, response) {
					$.ajax({
						url: 'https://dev.virtualearth.net/REST/v1/Locations',
						dataType: 'jsonp',
						data: {
							key: self.pluginScoped.key,
							q: request.term
						},
						jsonp: 'jsonp',
						success: function (data) {
							var result = data.resourceSets[0];
							if (!result || result.estimatedTotal <= 0) return;

							response($.map(result.resources, function(item) {
								return {
									data: item,
									label: item.name + ' (' + item.address.countryRegion + ')',
									value: item.name
								};
							}));
						}
					});
				},
				minLength: 1,
				change: function (e, ui) {
					if (!ui.item) return;
					var loc = ui.item.data.point;
					setLocation(loc.coordinates[0], loc.coordinates[1]);
				},
				select: function (e, ui) {
					if (!ui.item) return;
					var loc = ui.item.data.point;
					setLocation(loc.coordinates[0], loc.coordinates[1]);
				}
			});
			function setLocation(lat, lng, noMap) {
				data.content.address = lat + ', ' + lng;
				fields.address.setText(data.content.address);
				data.content.coord = [lat, lng];
				data.content.loc1 = lat;
				data.content.loc2 = lng;

				if (!noMap) {
					var loc = new wnd.Microsoft.Maps.Location(lat, lng);
					fields.map.setView({center: loc});
					fields.mapMarker.setLocation(loc);
				}
			}
			wnd.Microsoft.Maps.loadModule('Microsoft.Maps.Themes.BingTheme', {
				callback: function() {
					var loc = new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2);
					fields.map = new wnd.Microsoft.Maps.Map(fields.mapElem.getElem().children('div').get(0), {
						credentials: self.pluginScoped.key,
						mapTypeId: wnd.Microsoft.Maps.MapTypeId.road,
						theme: new wnd.Microsoft.Maps.Themes.BingTheme(),
						zoom: (typeof data.content.zoomLevel === "string") ? parseFloat(data.content.zoomLevel) : data.content.zoomLevel,
						center: loc
					});
					fields.mapMarker = new wnd.Microsoft.Maps.Pushpin(loc, {draggable: true});
					wnd.Microsoft.Maps.Events.addHandler(fields.mapMarker, 'dragend', function(e) {
						var loc = e.location || e.entity.getLocation();
						if (loc) {
							setLocation(loc.latitude, loc.longitude, true);
						}
					});
					fields.map.entities.push(fields.mapMarker);
				}
			});
			wnd.Microsoft.Maps.loadModule('Microsoft.Maps.Search', {
				callback: function() {
					fields.searchManager = new wnd.Microsoft.Maps.Search.SearchManager(fields.map);
				}
			});
		}
		

		fields.zoomLevel.on('change', function () {
			data.content.zoomLevel = fields.zoomLevel.getValue();
			fields.map.setView({
				zoom: (typeof data.content.zoomLevel === "string") ? parseFloat(data.content.zoomLevel) : data.content.zoomLevel
			});
		});

		fields.address.on('change', function () {
			data.content.address = fields.address.getText();
			data.content.zoomLevel = fields.zoomLevel.getValue();

			if (/[a-zA-Z]/.test(data.content.address)) {
				fields.searchManager.geocode({
					where: data.content.address,
					count: 5,
					bounds: fields.map.getBounds(),
					callback: function(resp) {
						if (!resp || !resp.results || resp.results.length === 0) return;
						var loc = resp.results[0].location;
						setLocation(loc.latitude, loc.longitude);
					},
					errorCallback: function() { console.error('Geolocate failed'); },
					userData: {name: 'Maps Test User', id: 'XYZ'}
				});
			} else {
				var loc = data.content.address.split(",");
				setLocation(loc[0], loc[1]);
			}

		});

		this.pluginScoped.addListener(this, function () {});

	},
	applyAction: function (fields, data, elem) {
		var wnd = window;
		data.content.address = fields.address.getText();
		data.content.apiKey = fields.apiKey.getText();
		this.pluginScoped.setKey(data.content.apiKey);
		data.content.zoomLevel = fields.zoomLevel.getValue();
		data.content.coord = data.content.address.split(',');
		if (!this.getIsCorrectCoords(data.content.coord)) {
			this.loadAction(data, true);
		} else {
			data.content.loc1 = data.content.coord[0];
			data.content.loc2 = data.content.coord[1];
		}
		
		var loc = new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2);
		this.map.setView({
			zoom: (typeof data.content.zoomLevel === "string") ? parseFloat(data.content.zoomLevel) : data.content.zoomLevel,
			center: loc
		});
		this.mapMarker.setLocation(loc);
	},
	loadAction: function (data, forceApply) {
		data.content.placeholder_address = '40.6898193359375, -74.0456314086914';
		if (!forceApply) data.content.previewKey = this.pluginScoped.key;
		if (!data.content.address || forceApply)
			data.content.address = '';
		if (!data.content.zoomLevel || forceApply)
			data.content.zoomLevel = 16;
		if (!data.content.loc1 || forceApply)
			data.content.loc1 = '';
		if (!data.content.loc2 || forceApply)
			data.content.loc2 = '';
		if (!data.content.apiKey)
			data.content.apiKey = null;
		if (!forceApply) this.pluginScoped.setKey(data.content.apiKey);
	},
	loadedAction: function (data, elem) {
		var self = this;
		if (!this.getIsCorrectCoords(data.content.coord)) {
			this.loadAction(data, true);
		} else {
			data.content.coord = data.content.address ? data.content.address.split(",") : data.content.placeholder_address.split(",");
			data.content.loc1 = data.content.coord[0];
			data.content.loc2 = data.content.coord[1];
		}

		this.pluginScoped.addListener(this, function () {
			var wnd = window;
			var loc = new wnd.Microsoft.Maps.Location(data.content.loc1, data.content.loc2);
			self.map = new wnd.Microsoft.Maps.Map(elem.children('.bingmap').get(0), {
				credentials: self.pluginScoped.key,
				mapTypeId: (data.content.type || wnd.Microsoft.Maps.MapTypeId.road),
				theme: new wnd.Microsoft.Maps.Themes.BingTheme(),
				zoom: (typeof data.content.zoomLevel === "string") ? parseFloat(data.content.zoomLevel) : data.content.zoomLevel,
				center: loc
			});
			this.mapMarker = new wnd.Microsoft.Maps.Pushpin(loc, {draggable: false});
			self.map.entities.push(this.mapMarker);
		});
	},
	getIsCorrectCoords: function (coord) {
		return !(!coord || coord.length < 2 || isNaN(Number(coord[0])) || isNaN(Number(coord[1])));
	},
	trim: function (str, symbols) {
		var cont = true, a, b, i;
		var symbs = {};
		if (typeof symbols !== 'undefined') {
			symbols = symbols.split('');
		} else {
			symbols = [' '];
		}
		for (i = 0; i < symbols.length; i++) {
			symbs[symbols[i]] = true;
		}
		while (cont) {
			cont = false;
			a = str.substring(0, 1);
			b = str.substring(str.length - 1);
			if (a in symbs) {
				str = str.substring(1);
				cont = true;
			}
			if (b in symbs) {
				str = str.substring(0, str.length - 1);
				cont = true;
			}
		}
		return str;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"2checkout","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/2checkout","customConfiguration":null};
PluginWrapper._config.id = '2checkout';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/2checkout\/main.png";
PluginWrapper._config.template = "<form action=\"https:\/\/{{#content.demo}}sandbox{{\/content.demo}}{{^content.demo}}www{{\/content.demo}}.2checkout.com\/checkout\/purchase\" method=\"post\" data-gateway-id=\"2checkout\" style=\"width: 100%; height: 100%;\"{{^content.store}} target=\"_blank\"{{\/content.store}}>\n\t<input type=\"hidden\" name=\"sid\" value=\"{{content.sid}}\" \/>\n\t<input type=\"hidden\" name=\"mode\" value=\"2CO\" \/>\n\t<input type=\"hidden\" name=\"li_0_type\" value=\"product\" \/>\n\t<input type=\"hidden\" name=\"li_0_name\" value=\"{{content.name}}\" \/>\n\t<input type=\"hidden\" name=\"li_0_price\" value=\"{{content.price}}\" \/>\n\t<input type=\"hidden\" name=\"currency_code\" value=\"{{content.currency}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"merchant_order_id\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"x_receipt_link_url\" value=\"{callbackUrl}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/2checkout/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://www.2checkout.com/" target="_blank">https://www.2checkout.com/</a></p>'
				+ '<p><strong>Approved URL:</strong><br />'
				+ '<pre>' + base_url + 'store-return/2checkout' + '</pre></p>';
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: '2checkout_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return (isStore) ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: '2checkout_color.svg', name: 'coloured'},
			{id: '2checkout_black.svg', name: 'black'},
			{id: '2checkout_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: '2Checkout',
	id: '2checkout',
	keyFieldId: 'sid',
	keyField2Id: 'secret_word',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [6,6,12], children: [
		{type: 'TextField', placeholder: 'SID', id: 'key'},
		{type: 'TextField', placeholder: __('Secret word'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'price',
	currencyFieldId: 'currency',
	globalVars: ['secret_word', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	settingsTabDef: Globals.getSettingsContent(),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), '2checkout', true)
});

PluginWrapper.registerPlugin('2checkout', {
	name: '2Checkout',
	element: {
		minSize: {width: 70, height: 55},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'sid', type: 'TwoCheckoutSid', helpText: __('Your 2Checkout account number'),
			get: function(data) { return data.content.sid; },
			set: function(value, data) {
				data.content.sid = value;
			}
		},
		{id: 'name', type: 'TwoCheckoutName',
			get: function(data) { return data.content.name; },
			set: function(value, data) {
				data.content.name = value;
			}
		},
		{id: 'price', type: 'TwoCheckoutPrice', helpText: __('Amount to be transferred'),
			get: function(data) { return data.content.price; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.price = value;
			}
		},
		{id: 'currency', type: 'TwoCheckoutCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'TwoCheckoutDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), '2checkout'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'SID', helpText: __('Your 2Checkout account number')},
						{type: 'TextField', id: 'sid'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6,3,3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'price'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: 'USD', name: 'USD'},
							{id: 'EUR', name: 'EUR'},
							{id: 'AED', name: 'AED'},
							{id: 'AFN', name: 'AFN'},
							{id: 'ALL', name: 'ALL'},
							{id: 'ARS', name: 'ARS'},
							{id: 'AUD', name: 'AUD'},
							{id: 'AZN', name: 'AZN'},
							{id: 'BBD', name: 'BBD'},
							{id: 'BDT', name: 'BDT'},
							{id: 'BGN', name: 'BGN'},
							{id: 'BMD', name: 'BMD'},
							{id: 'BND', name: 'BND'},
							{id: 'BOB', name: 'BOB'},
							{id: 'BRL', name: 'BRL'},
							{id: 'BSD', name: 'BSD'},
							{id: 'BWP', name: 'BWP'},
							{id: 'BZD', name: 'BZD'},
							{id: 'CAD', name: 'CAD'},
							{id: 'CHF', name: 'CHF'},
							{id: 'CLP', name: 'CLP'},
							{id: 'CNY', name: 'CNY'},
							{id: 'COP', name: 'COP'},
							{id: 'CRC', name: 'CRC'},
							{id: 'CZK', name: 'CZK'},
							{id: 'DKK', name: 'DKK'},
							{id: 'DOP', name: 'DOP'},
							{id: 'DZD', name: 'DZD'},
							{id: 'EGP', name: 'EGP'},
							{id: 'FJD', name: 'FJD'},
							{id: 'GBP', name: 'GBP'},
							{id: 'GTQ', name: 'GTQ'},
							{id: 'HKD', name: 'HKD'},
							{id: 'HNL', name: 'HNL'},
							{id: 'HRK', name: 'HRK'},
							{id: 'HUF', name: 'HUF'},
							{id: 'IDR', name: 'IDR'},
							{id: 'ILS', name: 'ILS'},
							{id: 'INR', name: 'INR'},
							{id: 'JMD', name: 'JMD'},
							{id: 'JPY', name: 'JPY'},
							{id: 'KES', name: 'KES'},
							{id: 'KRW', name: 'KRW'},
							{id: 'KZT', name: 'KZT'},
							{id: 'LAK', name: 'LAK'},
							{id: 'LBP', name: 'LBP'},
							{id: 'LKR', name: 'LKR'},
							{id: 'LRD', name: 'LRD'},
							{id: 'MAD', name: 'MAD'},
							{id: 'MMK', name: 'MMK'},
							{id: 'MOP', name: 'MOP'},
							{id: 'MRO', name: 'MRO'},
							{id: 'MUR', name: 'MUR'},
							{id: 'MVR', name: 'MVR'},
							{id: 'MXN', name: 'MXN'},
							{id: 'MYR', name: 'MYR'},
							{id: 'NIO', name: 'NIO'},
							{id: 'NOK', name: 'NOK'},
							{id: 'NPR', name: 'NPR'},
							{id: 'NZD', name: 'NZD'},
							{id: 'PEN', name: 'PEN'},
							{id: 'PGK', name: 'PGK'},
							{id: 'PHP', name: 'PHP'},
							{id: 'PKR', name: 'PKR'},
							{id: 'PLN', name: 'PLN'},
							{id: 'QAR', name: 'QAR'},
							{id: 'RON', name: 'RON'},
							{id: 'RUB', name: 'RUB'},
							{id: 'SAR', name: 'SAR'},
							{id: 'SBD', name: 'SBD'},
							{id: 'SCR', name: 'SCR'},
							{id: 'SEK', name: 'SEK'},
							{id: 'SGD', name: 'SGD'},
							{id: 'SYP', name: 'SYP'},
							{id: 'THB', name: 'THB'},
							{id: 'TOP', name: 'TOP'},
							{id: 'TRY', name: 'TRY'},
							{id: 'TTD', name: 'TTD'},
							{id: 'TWD', name: 'TWD'},
							{id: 'UAH', name: 'UAH'},
							{id: 'VND', name: 'VND'},
							{id: 'VUV', name: 'VUV'},
							{id: 'WST', name: 'WST'},
							{id: 'XCD', name: 'XCD'},
							{id: 'XOF', name: 'XOF'},
							{id: 'YER', name: 'YER'},
							{id: 'ZAR', name: 'ZAR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), '2checkout')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		fields.sid.setText(data.content.sid);
		fields.name.setText(data.content.name);
		fields.price.setText(data.content.price);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.sid = fields.sid.getText();
		data.content.name = fields.name.getText();
		data.content.price = fields.price.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (data.content.button_type && data.content.button_type.indexOf('.') === -1) {
			data.content.button_type += '.png';
		}
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			'button_type': 'logo'
		});
		if (!data.content.sid) data.content.sid = ''; // 1303908
		if (!data.content.name) data.content.name = ''; // Products
		if (!data.content.price) data.content.price = '1'; // 25.99
		if (!data.content.currency) data.content.currency = 'USD';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['2checkout2.png', '2checkout3.png','2checkout1.png'].indexOf(data.content.logo) > -1)
			data.content.logo = '2checkout_color.svg';
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());

	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"wp","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/wp","customConfiguration":null};
PluginWrapper._config.id = 'wp';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/wp\/main.png";
PluginWrapper._config.template = "\n\n<form data-gateway-id=\"Wp\" action=\"https:\/\/{{#content.demo}}securesandbox{{\/content.demo}}{{^content.demo}}payment{{\/content.demo}}.webpay.by\" method=\"post\" {{^content.store}} target=\"_blank\"{{\/content.store}}  class=\"webpay\" style=\"width: 100%; height: 100%;\">\n    {{^content.store}}\n        {{{requireService}}}\n    {{\/content.store}}\n\n    {{#content.store}}\n    <input type=\"hidden\" name=\"total\" value=\"{{content.wsb_invoice_item_price}}\" \/>\n    <input type=\"hidden\" name=\"currency_id\" value=\"{{content.wsb_currency_id}}\" \/>\n    <input type=\"hidden\" name=\"order_num\" value=\"{transactionId}\" \/>\n    <input type=\"hidden\" name=\"return_url\" value=\"{returnUrl}\" \/>\n    <input type=\"hidden\" name=\"cancel_return_url\" value=\"{cancelUrl}\" \/>\n    <input type=\"hidden\" name=\"notify_url\" value=\"{callbackUrl}\" \/>\n    <input type=\"hidden\" name=\"store\" value=\"Store\" \/>\n    {{\/content.store}}\n\n    {{{content.paymentGatewayButton}}}\n\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/wp/main.php';
PluginWrapper._config.active = false;
var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#fafafa',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'webpay_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'webpay_color.svg', name: 'coloured'},
			{id: 'webpay_black.svg', name: 'black'},
			{id: 'webpay_white.svg', name: 'white'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Webpay',
	id: 'wp',
	pageUrl: 'https://webpay.by/',
	keyField: __('Store ID'),
	keyFieldId: 'wsb_storeid',
	keyField2: __('Secret key'),
	keyField2Id: 'secret_key',
	keyField3: __('Demo'),
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
			{type: 'TextField', placeholder: __('Store identifier'), id: 'key'},
			{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
			{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
					this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
				}}
		]},
	titleFieldId: 'label',
	nameFieldId: 'wsb_invoice_item_name',
	priceFieldId: 'wsb_invoice_item_price',
	currencyFieldId: 'wsb_currency_id',
	globalVars: ['wsb_storeid', 'secret_key', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'wp', true)
});

PluginWrapper.registerPlugin('wp', {
	name: 'Webpay',
	element: {
		minSize: {width: 120, height: 70},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'wsb_storeid', type: 'WPwsbStoreid', helpText: __('This identifier is created during registration in WEBPAY and is sent via email'),
			get: function(data) { return data.content.wsb_storeid; },
			set: function(value, data) {
				data.content.wsb_storeid = value;
			}
		},
		{id: 'secret_key', type: 'WPSecretKey', helpText: __('The value of the Secret Key field in your billing account settings'),
			get: function(data) { return data.content.secret_key; },
			set: function(value, data) {
				data.content.secret_key = value;
			}
		},
		{id: 'wsb_invoice_item_name', type: 'WPItemName', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.wsb_invoice_item_name; },
			set: function(value, data) {
				data.content.wsb_invoice_item_name = value;
			}
		},
		{id: 'wsb_invoice_item_price', type: 'WPItemPrice', helpText: __('Amount to be transferred'),
			get: function(data) { return data.content.wsb_invoice_item_price; },
			set: function(value, data) {
				data.content.wsb_invoice_item_price = value;
			}
		},
		{id: 'wsb_currency_id', type: 'WPCurrency',
			get: function(data) { return data.content.wsb_currency_id; },
			set: function(value, data) {
				data.content.wsb_currency_id = value;
			}
		},
		{id: 'demo', type: 'WPDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'wp'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [6, 6], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Store identifier'), helpText: __('This identifier is created during registration in WEBPAY and is sent via email')},
						{type: 'TextField', id: 'wsb_storeid'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key'), helpText: __('The value of the Secret Key field in your billing account settings')},
						{type: 'TextField', id: 'secret_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'wsb_invoice_item_name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'wsb_invoice_item_price'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'wsb_currency_id', options: [
							{id: '#BYN', name: 'BYN', value: 'BYN'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#RUB', name: 'RUB', value: 'RUB'},
							{id: '#GBP', name: 'GBP', value: 'GBP'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'wp')
		]
	},

	openAction: function (fields, data, elem) {
		fields.secret_key.setValue(data.content.secret_key);
		fields.wsb_storeid.setValue(data.content.wsb_storeid);
		fields.wsb_invoice_item_name.setValue(data.content.wsb_invoice_item_name);
		fields.wsb_invoice_item_price.setValue(data.content.wsb_invoice_item_price);
		var itm = fields.wsb_currency_id.getItemById('#' + data.content.wsb_currency_id);
		fields.wsb_currency_id.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},

	applyAction: function (fields, data, elem) {
		data.content.secret_key = fields.secret_key.getValue();
		data.content.wsb_storeid = fields.wsb_storeid.getValue();
		data.content.wsb_invoice_item_name = fields.wsb_invoice_item_name.getValue();
		data.content.wsb_invoice_item_price = parseFloat(fields.wsb_invoice_item_price.getValue());
		var itm = fields.wsb_currency_id.getSelectedItem();
		data.content.wsb_currency_id = itm.getOriginal().value;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},

	loadAction: function (data) {
		data.content.__globalVars = ['wsb_storeid', 'secret_key', 'demo'];
		if (!data.content.secret_key) data.content.secret_key = '';
		if (!data.content.wsb_storeid) data.content.wsb_storeid = '';
		if (!data.content.wsb_store) data.content.wsb_store = '';
		if (!data.content.wsb_currency_id) data.content.wsb_currency_id = 'BYN';
		if (!data.content.wsb_invoice_item_name) data.content.wsb_invoice_item_name = '';
		if (!data.content.wsb_invoice_item_price) data.content.wsb_invoice_item_price = '10';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['webpay_blue.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'webpay_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"paymentez","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/paymentez","customConfiguration":null};
PluginWrapper._config.id = 'paymentez';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\n{{#isPublished}}\n{{^content.store}}\n<div class=\"modal fade\" id=\"paymentezModal_{{id}}\" tabindex=\"-1\" role=\"dialog\">\n\t<div class=\"modal-dialog\" role=\"document\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n\t\t\t\t<h4 class=\"modal-title\" id=\"myModalLabel\">Paymentez<\/h4>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-body\">\n\t\t\t\t<form method=\"post\" action=\"\" data-gateway-id=\"Paymentez\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label style=\"display: block;\">{{content.__t.email}}: <span style=\"color: #c00;\">*<\/span><\/label>\n\t\t\t\t\t\t<input class=\"form-control input-sm\" type=\"email\" name=\"email\" id=\"paymentezEmail\"\/>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label style=\"display: block;\">{{content.__t.first_name}}: <span style=\"color: #c00;\">*<\/span><\/label>\n\t\t\t\t\t\t<input class=\"form-control input-sm\" type=\"text\" name=\"name\" id=\"paymentezFirstName\"\/>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label style=\"display: block;\">{{content.__t.last_name}}: <span style=\"color: #c00;\">*<\/span><\/label>\n\t\t\t\t\t\t<input class=\"form-control input-sm\" type=\"text\" name=\"last_name\" id=\"paymentezLastName\"\/>\n\t\t\t\t\t<\/div>\n\t\t\t\t<\/form>\n\t\t\t\t<div id=\"paymentezError_{{id}}\" style=\"color: red\"><\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-footer\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\n\t\t\t\t<button id=\"paymentezNextBtn_{{id}}\" type=\"button\" class=\"btn btn-primary\" onclick=\"startPaymentFlow_{{id}}()\">{{content.__t.next}}<\/button>\n\t\t\t<\/div>\n\n\t\t<\/div>\n\t<\/div>\n<\/div>\n{{\/content.store}}\n{{#content.store}}\n<form data-gateway-id=\"Paymentez\" id=\"paymentezForm_{{id}}\" action=\"\" method=\"post\" style=\"width: 100%; height: 100%;\">\n<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n<input type=\"hidden\" name=\"price\" value=\"{{content.price}}\" \/>\n<input type=\"hidden\" name=\"currencyCode\" value=\"{{content.currencyCode}}\" \/>\n<input type=\"hidden\" name=\"callbackUrl\" value=\"{callbackUrl}\" \/>\n<input type=\"hidden\" name=\"returnUrl\" value=\"{returnUrl}\" \/>\n<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n<input class=\"hidden\" type=\"submit\"\/>\n<\/form>\n{{\/content.store}}\n{{{requireService}}}\n\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/paymentez/main.php';
PluginWrapper._config.active = true;
var Globals = {
	getDefaultStyles: function (isStore) {
		var styles = {
			button_color: '#fafafa',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: {border: '1px solid #cccccc'},
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'paymentez_black.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#000000'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function () {
		return [
			{id: 'paymentez_black.svg', name: 'black'},
			{id: 'paymentez_white.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'paymentez_color.svg', name: 'color'}
		];
	}
};

(function () {
	if (typeof window.paymentez_translations === 'undefined') {
		window.paymentez_translations = {
			'email': __c('Email'),
			'close': __c('Close'),
			'next': __c('Next'),
			'back': __c('Back'),
			'unknown_error': __c('Unknown error'),
			'first_name': __c('First Name'),
			'last_name': __c('Last Name')
		};
	}
})();

ElementRegister.registerPaymentGateway({
	name: 'Paymentez',
	id: 'paymentez',
	pageUrl: 'https://paymentez.com/',
	keyField: __('Application Code'),
	keyFieldId: 'appCode',
	keyField2: __('Application Key'),
	keyField2Id: 'appKey',
	keyField3: __('Test API'),
	keyField3Id: 'isTest',
	keyFieldDef: {
		type: 'HorizontalLayout', columnWeights: [6, 6, 12], noPadding: true, children: [
			{type: 'TextField', placeholder: __('Application Code'), id: 'key'},
			{type: 'TextField', placeholder: __('Application Key'), id: 'key2'},
			{
				type: 'CheckBox',
				label: __('Test mode'),
				id: 'key3',
				css: {padding: 7, marginTop: 5, display: 'inline-block'},
				init: function () {
					this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
				}
			}
		]
	},
	priceFieldId: 'price',
	currencyFieldId: 'currencyCode',
	useStylesInStoreCart: true,
	globalVars: ['appKey', 'appCode', 'isTest'],
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'paymentez', true),
});

PluginWrapper.registerPlugin('paymentez', {
	name: 'Paymentez',
	element: {
		minSize: {width: 50, height: 50},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'appCode', type: 'PaymentezAppCode',
			get: function(data) { return data.content.appCode; },
			set: function(value, data) {
				data.content.appCode = value;
				this.updateElement();
			}
		},
		{id: 'appKey', type: 'PaymentezAppKey',
			get: function(data) { return data.content.appKey; },
			set: function(value, data) {
				data.content.appKey = value;
				this.updateElement();
			}
		},
		{id: 'orderDesc', type: 'PaymentezOrderDesc',
			get: function(data) { return data.content.orderDesc; },
			set: function(value, data) {
				data.content.orderDesc = value;
				this.updateElement();
			}
		},
		{id: 'orderAmount', type: 'PaymentezOrderAmount',
			get: function(data) { return data.content.orderAmount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.orderAmount = value;
				this.updateElement();
			}
		},
		{id: 'currencyCode', type: 'PaymentezCurrencyCode',
			get: function(data) { return data.content.currencyCode; },
			set: function(value, data) {
				data.content.currencyCode = value;
				this.updateElement();
			}
		},
		{id: 'isTest', type: 'PaymentezIsTest', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.isTest; },
			set: function(value, data) {
				data.content.isTest = value;
				this.updateElement();
			}
		},
	], Globals.getLogosList(), 'paymentez'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{
				children: [

					{
						type: 'HorizontalLayout', css: {marginTop: 15}, children: [
							{
								type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Application Code')},
									{type: 'TextField', id: 'appCode'}
								]
							},
							{
								type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Application Key')},
									{type: 'TextField', id: 'appKey'}
								]
							},
						]
					},
					{
						type: 'HorizontalLayout', css: {marginTop: 15}, children: [
							{
								type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Order Description')},
									{type: 'TextField', id: 'orderDesc'}
								]
							},
						]
					},
					{
						type: 'HorizontalLayout', css: {marginTop: 15}, children: [
							{
								type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Order Amount')},
									{type: 'TextField', id: 'orderAmount'}
								]
							},
							{
								type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Currency')},
									{
										type: 'DropdownBox', id: 'currencyCode', options: [
											{id: 'COP', name: 'COP', value: 'COP'},
											{id: 'USD', name: 'USD', value: 'USD'},
											{id: 'BRL', name: 'BRL', value: 'BRL'},
											{id: 'MXN', name: 'MXN', value: 'MXN'},
											{id: 'ARS', name: 'ARS', value: 'ARS'},
											{id: 'CLP', name: 'CLP', value: 'CLP'},
											{id: 'PEN', name: 'PEN', value: 'PEN'}
										]
									}
								]
							},
						]
					},
					{
						type: 'HorizontalLayout', css: {marginTop: 15}, children: [
							{
								type: 'VerticalLayout', children: [
									{
										type: 'VerticalLayout', css: {marginTop: 15}, children: [
											{
												type: 'CheckBox',
												id: 'isTest',
												css: {display: 'inline-block'},
												label: __('Test mode'),
												init: function () {
													this.getElem().attr('title', __('For testing purpose without real payments'));
													this.getElem().tooltip({placement: 'right'});
												}
											}
										]
									},
								]
							},
						]
					},

				]
			},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'paymentez'),
		]
	},

	openAction: function (fields, data, elem) {
		fields.appCode.setValue(data.content.appCode);
		fields.appKey.setValue(data.content.appKey);
		fields.orderDesc.setValue(data.content.orderDesc);
		fields.orderAmount.setValue(data.content.orderAmount);
		fields.currencyCode.setValue(data.content.currencyCode);
		fields.isTest.setValue(data.content.isTest);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		data.content.appCode = fields.appCode.getValue();
		data.content.appKey = fields.appKey.getValue();
		data.content.orderDesc = fields.orderDesc.getValue();
		data.content.orderAmount = fields.orderAmount.getValue();
		data.content.currencyCode = fields.currencyCode.getValue();
		data.content.isTest = fields.isTest.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data, elem);
	},
	loadAction: function (data) {
		data.content.__t = window.paymentez_translations;
		data.content.__globalVars = ['appKey', 'appCode', 'isTest'];
		if (!data.content.appCode)
			data.content.appCode = '';
		if (!data.content.appKey)
			data.content.appKey = '';
		if (!data.content.orderDesc)
			data.content.orderDesc = '';
		if (!data.content.orderAmount)
			data.content.orderAmount = '';
		if (!data.content.currencyCode)
			data.content.currencyCode = '';
		if (!data.content.isTest)
			data.content.isTest = true;
		if (['logo.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'paymentez_black.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"countdown","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/countdown","customConfiguration":null};
PluginWrapper._config.id = 'countdown';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/countdown\/main.png";
PluginWrapper._config.template = "\n\t<style>\n\t\t#{{id}}_countdown_timer {\n\t\t    width: 100%;\n\t\t    height: 100%;\n\t\t\tfont-family: {{{content.timerFontFamily}}};\n\t\t\tfont-size: {{content.timerFontSize}}px;\n\t\t\tcolor: {{content.timerFontColor}};\n\t\t\ttext-align: center;\n\t\t\tline-height: 100%;\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: space-around;\n\t\t\talign-items: center;\n\t\t\tflex-wrap: wrap;\n\t\t\t{{# content.timerFontStyle.css.font-style}} font-style: {{content.timerFontStyle.css.font-style}}; {{\/ content.timerFontStyle.css.font-style}}\n\t\t\t{{# content.timerFontStyle.css.font-weight}} font-weight: {{content.timerFontStyle.css.font-weight}}; {{\/ content.timerFontStyle.css.font-weight}}\n\t\t\t{{# content.timerFontStyle.css.text-decoration}} text-decoration: {{content.timerFontStyle.css.text-decoration}}; {{\/ content.timerFontStyle.css.text-decoration}}\n\t   \t}\n\t\t@media all and (max-width: 320px) {\n\t\t\t#{{id}}_countdown_timer {\n\t\t\t\tfont-size: {{content.timerFontSizeMob}}px;\n\t\t\t}\n\t\t\t#{{id}}_countdown_timer .dlmtr {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t#{{id}}_countdown_timer .dlmtr {\n\t\t\tdisplay: inline-block;\n\t\t\tposition: relative;\n\t    }\n\t\t#{{id}}_countdown_timer .numblock {\n\t\t\tdisplay: inline-block;\n\t\t\tposition: relative;\n\t\t\tvertical-align: middle;\n\t    }\n\t\t#{{id}}_countdown_timer .numblock .num {\n\t    \tposition: absolute;\n\t   \t\tdisplay: block;\n\t\t\ttop: 0;\n\t\t\tleft: 50%;\n\t\t    transform: translateX(-50%);\n\t    }\n\t\t#{{id}}_countdown_timer .numblock .plchldr {\n\t\t\tcolor: transparent !important;\n\t\t\topacity: 0;\n\t\t\t{{# content.timerFontStyle.css.font-style}} font-style: {{content.timerFontStyle.css.font-style}}; {{\/ content.timerFontStyle.css.font-style}}\n\t\t\t{{# content.timerFontStyle.css.font-weight}} font-weight: {{content.timerFontStyle.css.font-weight}}; {{\/ content.timerFontStyle.css.font-weight}}\n\t\t\t{{# content.timerFontStyle.css.text-decoration}} text-decoration: {{content.timerFontStyle.css.text-decoration}}; {{\/ content.timerFontStyle.css.text-decoration}}\n\t    }\n\t\t#{{id}}_countdown_timer .numblock:after {\n\t\t\tfont-family: {{{content.captionFontFamily}}};\n\t\t\tfont-size: {{content.captionFontSize}}px;\n\t\t\tcolor: {{content.captionFontColor}};\n\t\t\ttext-transform: capitalize;\n\t\t\ttext-align: center;\n\t\t\tline-height: 100%;\n\t\t\tposition: absolute;\n\t\t\t{{# content.captionTopPosition}}\n\t\t\t\ttop: -{{content.captionSpacing}}px;\n\t\t\t{{\/ content.captionTopPosition}}\n\t\t\t{{# content.captionBottomPosition}}\n\t\t\t\tbottom: -{{content.captionSpacing}}px;\n\t\t\t{{\/ content.captionBottomPosition}}\n\t\t\tleft: 50%;\n\t\t\ttransform: translateX(-50%);\n\t\t\t{{# content.captionFontStyle.css.font-style}} font-style: {{content.captionFontStyle.css.font-style}}; {{\/ content.captionFontStyle.css.font-style}}\n\t\t\t{{# content.captionFontStyle.css.font-weight}} font-weight: {{content.captionFontStyle.css.font-weight}}; {{\/ content.captionFontStyle.css.font-weight}}\n\t\t\t{{# content.captionFontStyle.css.text-decoration}} text-decoration: {{content.captionFontStyle.css.text-decoration}}; {{\/ content.captionFontStyle.css.text-decoration}}\n\t\t}\n\t\t#{{id}}_countdown_timer .numblock.days:after {\n\t\t\tcontent: \"{{content.texts.days}}\";\n\t    }\n\t\t#{{id}}_countdown_timer .numblock.hours:after {\n\t\t\tcontent: \"{{content.texts.hours}}\";\n\t\t}\n\t\t#{{id}}_countdown_timer .numblock.mins:after {\n\t\t\tcontent: \"{{content.texts.minutes}}\";\n\t\t}\n\t\t#{{id}}_countdown_timer .numblock.secs:after {\n\t\t\tcontent: \"{{content.texts.seconds}}\";\n\t\t}\n\t\t#{{id}}_wb_caption {\n\t\t    width: 100%;\n\t\t    height: 100%;\n\t\t\tbackground-color: transparent !important;\n\t\t\tdisplay: flex;\n\t\t    justify-content: center;\n\t\t\talign-items: center;\n\t    }\n\t\t#{{id}}_wb_caption:before {\n\t\t\tcontent: \"\";\n\t\t\tdisplay: inline-block;\n\t\t\tvertical-align: middle;\n\t\t\theight: auto;\n\t\t}\n\t<\/style>\n\t<div class=\"wb_caption smaller\" id=\"{{id}}_wb_caption\">\n\t\t<div id=\"{{id}}_countdown_timer\">\n\t\t\t<div class=\"numblock days\"><span class=\"plchldr\">8<\/span><span class=\"num\"><\/span><\/div>\n\t\t\t<div class=\"dlmtr\">:<\/div>\n\t\t\t<div class=\"numblock hours\"><span class=\"plchldr\">88<\/span><span class=\"num\"><\/span><\/div>\n\t\t\t<div class=\"dlmtr\">:<\/div>\n\t\t\t<div class=\"numblock mins\"><span class=\"plchldr\">88<\/span><span class=\"num\"><\/span><\/div>\n\t\t\t<div class=\"dlmtr\">:<\/div>\n\t\t\t<div class=\"numblock secs\"><span class=\"plchldr\">88<\/span><span class=\"num\"><\/span><\/div>\n\t\t<\/div>\n\t<\/div>\n\n<script type=\"text\/javascript\">\n\tvar countDown_{{id}} = {\n\t\tstart: function() {\n\t\t\tthis.countDownBlock = $(\"#{{id}}_countdown_timer\");\n\t\t\tthis.textAfterBlock = $(\"#{{id}}_countdown_text_after\");\n\t\t\tthis.daysBlock = this.countDownBlock.find(\".days .num\");\n\t\t\tthis.hoursBlock = this.countDownBlock.find(\".hours .num\");\n\t\t\tthis.minsBlock = this.countDownBlock.find(\".mins .num\");\n\t\t\tthis.secsBlock = this.countDownBlock.find(\".secs .num\");\n\n\t\t\tvar timerDate = new Date({{content.timerEndTS}});\n\t\t\tvar currDate = new Date();\n\n\t\t\tvar diff = timerDate.getTime() - currDate.getTime();\n\t\t\tthis.diffDays = Math.floor(diff \/ (1000 * 60 * 60 * 24));\n\t\t\tdiff = diff - 1000 * 60 * 60 * 24 * this.diffDays;\n\t\t\tthis.diffHours = Math.floor(diff \/ (1000 * 60 * 60));\n\t\t\tdiff = diff - 1000 * 60 * 60 * this.diffHours;\n\t\t\tthis.diffMins = Math.floor(diff \/ (1000 * 60));\n\t\t\tdiff = diff - 1000 * 60 * this.diffMins;\n\t\t\tthis.diffSecs = Math.floor(diff \/ 1000);\n\n\t\t\tif (this.diffDays < 0 || this.diffHours < 0 || this.diffMins < 0 || this.diffSecs < 0\n\t\t\t\t|| (this.diffDays === 0 && this.diffHours === 0 && this.diffMins === 0 && this.diffSecs === 0))\n\t\t\t{\n\t\t\t\tif (window.countDownInterval_{{id}}) clearInterval(window.countDownInterval_{{id}});\n\t\t\t\tthis.daysBlock.text(\"0\");\n\t\t\t\tthis.hoursBlock.text(\"00\");\n\t\t\t\tthis.minsBlock.text(\"00\");\n\t\t\t\tthis.secsBlock.text(\"00\");\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.daysBlock.text(this.diffDays);\n\t\t\t\tthis.countDownBlock.find('.days .plchldr').text(this.diffDays);\n\t\t\t\tthis.hoursBlock.text(this.pad(this.diffHours));\n\t\t\t\tthis.minsBlock.text(this.pad(this.diffMins));\n\t\t\t\tthis.secsBlock.text(this.pad(this.diffSecs));\n\t\t\t\tthis.countDownBlock.show();\n\t\t\t\tthis.textAfterBlock.hide();\n\t\t\t\t\n\t\t\t\tvar self = this;\n\t\t\t\tif (window.countDownInterval_{{id}}) clearInterval(window.countDownInterval_{{id}});\n\t\t\t\twindow.countDownInterval_{{id}} = setInterval(function () {\n\t\t\t\t\tvar ended = self.tick();\n\t\t\t\t\tif (ended) {\n\t\t\t\t\t\tclearInterval(window.countDownInterval_{{id}});\n\t\t\t\t\t};\n\t\t\t\t\tself.daysBlock.text(self.diffDays);\n\t\t\t\t\tself.hoursBlock.text(self.pad(self.diffHours));\n\t\t\t\t\tself.minsBlock.text(self.pad(self.diffMins));\n\t\t\t\t\tself.secsBlock.text(self.pad(self.diffSecs));\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t},\n\t\tpad: function(val) {\n\t\t\tif ((\"\" + val).length === 1) {\n\t\t\t\treturn '0' + val;\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\t\ttick: function() {\n\t\t\tif (this.diffDays === 0 && this.diffHours === 0 && this.diffMins === 0 && this.diffSecs === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (this.diffSecs > 0) {\n\t\t\t\t\tthis.diffSecs--;\n\t\t\t\t} else {\n\t\t\t\t\tthis.diffSecs = 59;\n\t\t\t\t\tif (this.diffMins > 0) {\n\t\t\t\t\t\tthis.diffMins--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.diffMins = 59;\n\t\t\t\t\t\tif (this.diffHours > 0) {\n\t\t\t\t\t\t\tthis.diffHours--;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.diffHours = 23;\n\t\t\t\t\t\t\tif (this.diffDays > 0) {\n\t\t\t\t\t\t\t\tthis.diffDays--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t};\n\tcountDown_{{id}}.start();\n\tvar cBlock = $('#{{id}}_countdown_timer');\n\tvar isAutoLayout = $('#{{id}}').hasClass('wb-cs-elem');\n\tvar height = parseInt('{{height}}');\n\tvar getBlockHeight = function() {\n\t\tif (isAutoLayout) {\n\t\t\treturn height \/ 1000 * $(window).width();\n\t\t} else {\n\t\t\treturn cBlock.outerHeight();\n\t\t}\n\t};\n\t$(window).resize(function () {\n\t\tvar h = getBlockHeight();\n\t\tcBlock.css('fontSize', (h\/{{data.content.mply}}{{^ data.content.mply}}1.8{{\/ data.content.mply}})+'px');\n\t});\n\t$(window).resize();\n<\/script>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('countdown', {
    name: 'Countdown',
    element: {
        minSize: {
            width: 80,
            height: 20
        },
        defaultSize: {
            width: 490,
            height: 90
        },
        resizable: true,
		supportsFullWidth: false
    },
    properties: [
        {id: 'timerEndDateString', type: 'CountdownTimerEndDateString',
            get: function(data) { return data.content.timerEndDateString; },
            set: function(value, data) {
                data.content.timerEndDateString = value;
                this.setTime(data);
            }
        },
        {id: 'timerEndTime', type: 'CountdownTimerEndTime',
            get: function(data) { return data.content.timerEndTime; },
            set: function(value, data) {
            data.content.timerEndTime = value;
            this.setTime(data);
            }
        },
        {id: 'timerFontCountdown', type: 'CountdownTimerFontCountdown',
            get: function(data) { return { color: data.content.timerFontColor, font: data.content.timerFontFamily, style: data.content.timerFontStyle}; },
            set: function(value, data) {
                data.content.timerFontFamily = value.font;
                data.content.timerFontColor = value.color;
                data.content.timerFontStyle = value.style;
            }
        },
        {id: 'timerFontText', type: 'CountdownTimerFontText',
            get: function(data) { return {color: data.content.captionFontColor, font: data.content.captionFontFamily, style: data.content.captionFontStyle, size: data.content.captionFontSize}; },
            set: function(value, data) {
                data.content.captionFontFamily = value.font;
                data.content.captionFontSize = value.size;
                data.content.captionFontColor = value.color;
                data.content.captionFontStyle = value.style;
            }
        },
        {id: 'captionSpacing', type: 'CountdownCaptionSpacing',
            get: function(data) { return data.content.captionSpacing; },
            set: function(value, data) {
                data.content.captionSpacing = value;
                this.preventClipping(data);
            }
        },
        {id: 'captionPosition', type: 'CountdownCaptionPosition',
            get: function(data) { return data.content.captionPosition; },
            set: function(value, data) {
                data.content.captionPosition = value;
                data.content.captionTopPosition = value === 'top';
                data.content.captionBottomPosition = value === 'bottom';
            }
        },
    ],
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [{
                type: 'VerticalLayout',
                children: [
                    {type: 'FlowLayout', spacing: 14, css: {marginTop: 15}, children: [
                        {type: 'VerticalLayout', children: [
                                {type: 'Label', text: __('End date')},
                                {type: 'TextField', id: 'timerEndDateString', init: function () {
                                        this.getElem().datepicker({
                                            dateFormat: "yy-mm-dd"
                                        });
                                    }}
                            ]},
                        {type: 'VerticalLayout', children: [
                                {type: 'Label', text: __('End time')},
                                {type: 'TextField', id: 'timerEndTime', init: function () {
                                        var elem = this.getElem();
                                        elem.attr('type', 'time');
                                    }},
                            ]},
                        {type: 'FlowLayout', spacing: 14, css: {marginTop: 15}, children: [
                                {type: 'VerticalLayout', children: [
                                        {type: 'Label', text: __('Font')},
                                        {type: 'FontFamilySelector', id: 'timerFontFamily'}
                                    ]},
                                /*{type: 'VerticalLayout', children: [
                                        {type: 'Label', text: __('Size')},
                                        {type: 'SizeSelector', id: 'timerFontSize'}
                                    ]},*/
                                {type: 'VerticalLayout', children: [
                                        {type: 'Label', text: __('Color')},
                                        {type: 'ColorSelector', id: 'timerFontColor', noTransparent: true}
                                    ]},
                                {type: 'VerticalLayout', children: [
                                        {type: 'Label', text: __('Style')},
                                        {type: 'FontStyleSelector', id: 'timerFontStyle'}
                                    ]}
                            ]}
                    ]}]},
                {type: 'CustomContainer', init: function(def, fields) {
                    this._elem.append($('<hr>').css({}));
                }},
                {type: 'VerticalLayout',
                children: [
                    {type: 'FlowLayout', css: {marginTop: 15}, children: [
                            { type: 'VerticalLayout', css: {marginRight: 30}, children: [
                                    { type: 'Label', text: __('Caption position') },
                                    { type: 'FlowLayout', children: [
                                        { type: 'RadioBox', id: 'showTop', label: __('Top'), group: 'captionPosition' },
                                        { type: 'RadioBox', id: 'showBottom', label: __('Bottom'), group: 'captionPosition' }
                                    ]}
                                ]},
                            { type: 'VerticalLayout', children: [
                                    { type: 'Label', text: __('Caption spacing') },
                                    { type: 'SizeSelector', id: 'captionSpacing' },
                                ]}
                    ]},
                    {type: 'FlowLayout', spacing: 14, css: {marginTop: 15}, children: [
                            {type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Font')},
                                    {type: 'FontFamilySelector', id: 'captionFontFamily'}
                                ]},
                            {type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Size')},
                                    {type: 'SizeSelector', id: 'captionFontSize'}
                                ]},
                            {type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Color')},
                                    {type: 'ColorSelector', id: 'captionFontColor', noTransparent: true}
                                ]},
                            {type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Style')},
                                    {type: 'FontStyleSelector', id: 'captionFontStyle'}
                                ]}
                    ]}
                ]}]
        }]
    },
    resizeTimeout: null,
    pluginScoped: {
        pad: function (val) {
            if ((""+val).length === 1) {
                return '0'+val;
            }
            return val;
        },
    },

    preventClipping: function(data) {
        var size = this.getSize();

        if(size.height < data.content.timerFontSize + data.content.captionSpacing * 2) {
            this.setSize(size.width, size.height + data.content.captionSpacing*2);
        }
    },

    setTime: function(data) {
        var pad = this.pluginScoped.pad;
        var timerEndTime = data.content.timerEndTime;
        var timerEndDateString = data.content.timerEndDateString;
        var timerEndTS;
        var parcedDate = new Date(timerEndDateString+"T"+timerEndTime+":00");
        if (!parcedDate) {
            var timerEndDate = new Date();
            timerEndDate.setDate(timerEndDate.getDate() + 1);
            timerEndTS = Date.UTC(timerEndDate.getUTCFullYear(), timerEndDate.getUTCMonth(), timerEndDate.getUTCDate());
            timerEndDateString = timerEndDate.getFullYear() + '-' + (pad(timerEndDate.getMonth() + 1)) + '-' + pad(timerEndDate.getDate());
        }
        else {
            timerEndTS = Date.UTC(parcedDate.getUTCFullYear(), parcedDate.getUTCMonth(), parcedDate.getUTCDate(), parcedDate.getUTCHours(), parcedDate.getUTCMinutes(), parcedDate.getUTCSeconds());
        }
        data.content.timerEndTS = timerEndTS;
        data.content.timerEndDateString = timerEndDateString;
        data.content.timerEndTime = timerEndTime;
    },
    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                data.content.timerFontSize = data.height/data.content.mply;
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    supportsAutoHeight: function() { return true; },
    openAction: function(fields, data, elem) {
        if (data.content.timerEndDateString) fields.timerEndDateString.setValue(data.content.timerEndDateString);
        if (data.content.timerEndTime) fields.timerEndTime.setValue(data.content.timerEndTime);
        if (data.content.timerFontFamily) fields.timerFontFamily.setValue(data.content.timerFontFamily);
        if (data.content.timerFontColor) fields.timerFontColor.setValue(data.content.timerFontColor);
        if (data.content.timerFontStyle) fields.timerFontStyle.setValue(data.content.timerFontStyle);

        if (data.content.captionTopPosition) fields.showTop.setValue(true);
        if (data.content.captionBottomPosition) fields.showBottom.setValue(true);
        if (data.content.captionSpacing) fields.captionSpacing.setValue(data.content.captionSpacing);

        if (data.content.captionFontFamily) fields.captionFontFamily.setValue(data.content.captionFontFamily);
        if (data.content.captionFontSize) fields.captionFontSize.setValue(data.content.captionFontSize);
        if (data.content.captionFontColor) fields.captionFontColor.setValue(data.content.captionFontColor);
        if (data.content.captionFontStyle) fields.captionFontStyle.setValue(data.content.captionFontStyle);
    },
    applyAction: function(fields, data, elem) {
        var thisSelf = this;
        var pad = thisSelf.pluginScoped.pad;
        var timerEndDateString = fields.timerEndDateString.getValue();
        var timerEndTime = fields.timerEndTime.getValue();
        var timerEndTS;
        var parcedDate = new Date(timerEndDateString+"T"+timerEndTime+":00");
        if (!parcedDate) {
            var timerEndDate = new Date();
            timerEndDate.setDate(timerEndDate.getDate() + 1);
            timerEndTS = Date.UTC(timerEndDate.getUTCFullYear(), timerEndDate.getUTCMonth(), timerEndDate.getUTCDate());
            timerEndDateString = timerEndDate.getFullYear() + '-' + (pad(timerEndDate.getMonth() + 1)) + '-' + pad(timerEndDate.getDate());
        }
        else {
            timerEndTS = Date.UTC(parcedDate.getUTCFullYear(), parcedDate.getUTCMonth(), parcedDate.getUTCDate(), parcedDate.getUTCHours(), parcedDate.getUTCMinutes(), parcedDate.getUTCSeconds());
        }
        data.content.timerEndTS = timerEndTS;
        data.content.timerEndDateString = timerEndDateString;
        data.content.timerEndTime = timerEndTime;
        data.content.timerFontFamily = fields.timerFontFamily.getValue();
        data.content.timerFontColor = fields.timerFontColor.getValue();
        data.content.timerFontStyle = fields.timerFontStyle.getValue();

		data.content.captionTopPosition = false;
		data.content.captionBottomPosition = false;
        if (fields.showTop.getValue()) data.content.captionTopPosition = true;
        if (fields.showBottom.getValue()) data.content.captionBottomPosition = true;
        data.content.captionSpacing = fields.captionSpacing.getValue();

        data.content.captionFontFamily = fields.captionFontFamily.getValue();
        data.content.captionFontSize = fields.captionFontSize.getValue();
        data.content.captionFontColor = fields.captionFontColor.getValue();
        data.content.captionFontStyle = fields.captionFontStyle.getValue();
    },
    loadAction: function(data) {
        var thisSelf = this;
        var pad = thisSelf.pluginScoped.pad;
        var timerEndDate;
        if (!data.content.timerEndTS) {
            timerEndDate = new Date();
            timerEndDate.setDate(timerEndDate.getDate() + 1);
            timerEndDate.setHours(0, 0,0);
            data.content.timerEndDateString = timerEndDate.getFullYear() + '-' + (pad(timerEndDate.getMonth() + 1)) + '-' + pad(timerEndDate.getDate());
            data.content.timerEndTime = '00:00';
            data.content.timerEndTS = Date.UTC(timerEndDate.getUTCFullYear(), timerEndDate.getUTCMonth(), timerEndDate.getUTCDate(), timerEndDate.getUTCHours(), timerEndDate.getUTCMinutes(), timerEndDate.getUTCSeconds());
        }
        else {
            var timerEndTS = data.content.timerEndTS;
            timerEndDate = new Date(timerEndTS);
            data.content.timerEndDateString = timerEndDate.getFullYear() + '-' + (pad(timerEndDate.getMonth() + 1)) + '-' + pad(timerEndDate.getDate());
            data.content.timerEndTime = pad(timerEndDate.getHours()) + ":" + pad(timerEndDate.getMinutes());
        }

        if (!data.content.timerFontFamily) data.content.timerFontFamily = 'Arial';
        data.content.mply = 1.8;
        data.content.timerFontSize = data.height/data.content.mply;
        if (!data.content.timerFontColor) data.content.timerFontColor = '#000';
        if (!data.content.timerFontStyle) data.content.timerFontStyle = null;
        if (!data.content.captionPosition) data.content.captionPosition = 'top';

        if (!data.content.captionTopPosition) data.content.captionTopPosition = true;
        if (!data.content.captionBottomPosition) data.content.captionBottomPosition = false;

        if (!data.content.captionSpacing) data.content.captionSpacing = 15;

        if (!data.content.captionFontFamily) data.content.captionFontFamily = 'Arial';
        if (!data.content.captionFontSize) data.content.captionFontSize = '12';
        if (!data.content.captionFontColor) data.content.captionFontColor = '#000';
        if (!data.content.captionFontStyle) data.content.captionFontStyle = null;

		data.content.texts = {
			'days': __('days'),
			'hours': __('hours'),
			'minutes': __('minutes'),
			'seconds': __('seconds'),
		};
    },
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.captionFontFamily ) items.push(data.content.captionFontFamily);
		if( data.content.timerFontFamily ) items.push(data.content.timerFontFamily);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"spotify","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/spotify","customConfiguration":null};
PluginWrapper._config.id = 'spotify';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/spotify\/main.png";
PluginWrapper._config.template = "<style>\n\t#{{id}}_wb_caption:before {\n\t    content: none;\n\t    display: inline-block;\n\t    vertical-align: middle;\n\t    height: auto;\n    }\n\n\t#{{id}}_wb_caption {\n\t    background-color: transparent !important;\n\t    display: flex;\n\t    justify-content: space-around;\n\t    align-items: center;\n\t\twidth: 100%;\n\t\theight: 100%;\n    }\n<\/style>\n\n<div id=\"{{id}}_wb_caption\" class=\"wb-prevent-layout-click\" {{^ content.src}} style=\"background-color: white !important;\" {{\/ content.src}}>\n\t{{^ content.src}}\n\t{{^ content.error}}b\n\t<iframe src=\"{{{content.placeholder_link}}}\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" frame><\/iframe>\n\t{{\/ content.error}}\n\t{{# content.error}}\n\t<div class=\"wb_caption_error\">\n\t<\/div>\n\t{{\/ content.error}}\n\t{{\/ content.src}}\n\t{{# content.src}}\n\t<iframe src=\"{{{content.src}}}\" width=\"100%\" height=\"100%\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\" frame><\/iframe>\n\t{{\/ content.src}}\n<\/div>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('spotify', {
    name: 'Spotify',
    element: {
        minSize: {
            width: 200,
            height: 25
        },
        defaultSize: {
            width: 300,
            height: 380
        },
        resizable: true,
		supportsFullWidth: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [
                { type: 'VerticalLayout', children: [
                    { type: 'Label', text: __('Type') },
                    { type: 'FlowLayout', children: [
                        { type: 'RadioBox', id: 'play', label: 'Play Button', group: 'spotifyWidgetType', change: function(fields) {
                                fields.flwbtnlayout.setVisible(false);
                        } },
                        { type: 'RadioBox', id: 'follow', label: 'Follow Button', group: 'spotifyWidgetType', change: function(fields) {
                                fields.flwbtnlayout.setVisible(true);
                        } }
                    ]}
                ]},
                { type: 'VerticalLayout', id: 'flwbtnlayout', css: {marginTop: 8},  children: [
                    { type: 'Label', text: __('Size')},
                    { type: 'FlowLayout', children: [
                        { type: 'RadioBox', id: 'basic', label: __('Basic'), group: 'spotifyWidgetSize'},
                        { type: 'RadioBox', id: 'detail', label: __('Detailed'), group: 'spotifyWidgetSize'}
                    ]},
                    { type: 'Label', text: __('Background'), css: {marginTop: 8}},
                    { type: 'FlowLayout', children: [
                        { type: 'RadioBox', id: 'dark', label: __('Bright'), group: 'spotifyWidgetBg'},
                        { type: 'RadioBox', id: 'light', label: __('Dark'), group: 'spotifyWidgetBg'}
                    ]},
                    {type: 'VerticalLayout', css: {marginTop: 15},  children: [
                        {type: 'CheckBox', label: __('Show follower count'), id: 'flwCount'}
                    ]}
                ]},
                {type: 'VerticalLayout', css: {marginTop: 15},
                children: [{
                    type: 'Label',
                    text: __('Spotify Link or URI'),
					helpText: __('Right-click any song, album, artist, playlist, podcast or episode in the Spotify player and select “Share”. Click on \'Copy Link\' or \'Copy Spotify URI\' to copy the Spotify Link or URI')
                }, {
                    type: 'TextField',
                    id: 'src',
                    placeholder: 'https://open.spotify.com/track/0bYg9bo50gSsH3LtXe2SQn?si=zcMWgG0ZR96TYYUrS8D9gA'
                }]}
            ]
        }]
    },
    batchUpdates: true,
    properties: [
        {id: 'src', type: 'SpotifySrc', helpText: __('Right-click any song, album, artist, playlist, podcast or episode in the Spotify player and select “Share”. Click on \'Copy Link\' or \'Copy Spotify URI\' to copy the Spotify Link or URI'),
            get: function(data) { return data.content.link; },
            validate: function (value, data, api) {
                this.setFinalSrc.call(this, data, api);
                // return '';
            },
            set: function(value, data) {
                // data.content.src = value;
                data.content.link = value;
                this.setFinalSrc(data);
            }
        },
        {id: 'type', type: 'SpotifyType',
            get: function (data) {
                return data.content.type;
            },
            validate: function (value, data, api) {
                this.setFinalSrc(data, api);
                // return '';
            },
            set: function (value, data) {
                data.content.type = value;
                this.setFinalSize(data);
                this.setFinalSrc(data);
            },
        },
        {id: 'size', type: 'SpotifySize',
            visible: function(data) {
                return data.content.type == 'follow';
            },
            dependencies: ['type'],
            get: function (data) {
                return data.content.size;
            },
            set: function (value, data) {
                data.content.size = value;
                this.setFinalSize(data);
                this.setFinalSrc(data);
            },
        },
        {id: 'bg', type: 'SpotifyBackground',
            visible: function(data) {
                return data.content.type == 'follow';
            },
            dependencies: ['type'],
            get: function (data) {
                return data.content.bg;
            },
            set: function (value, data) {
                data.content.bg = value;
                this.setFinalSrc(data);
            },
        },
        {id: 'showCount', type: 'SpotifyShowCount',
            visible: function(data) {
                return data.content.type == 'follow';
            },
            dependencies: ['type'],
            get: function (data) {
                return data.content.showCount_checkbox;
            },
            set: function (value, data) {
                data.content.showCount = value ? 1 : 0;
                data.content.showCount_checkbox = value;
                this.setFinalSrc(data);
            },
        },
    ],
    resizeTimeout: null,

    setFinalSrc: function (data, api) {
        var src = '';
        if(data.content.type === 'follow') {
            src = data.content.link ? data.content.link : data.content.placeholder_link_follow;
        } else {
            src = data.content.link ? data.content.link : data.content.placeholder_link;
        }
        var linkBase = data.content.type === 'play' ? 'https://open.spotify.com/embed/' : 'https://open.spotify.com/follow/1/?uri=spotify:';
        var matches = src.match(/iframe.+src="([^&"]+).*?"/i);
        data.content.error = null;
        if((/https:\/\/open.spotify.com\/track.+/i.test(src) || /https:\/\/open.spotify.com\/playlist.+/i.test(src)) && data.content.type === 'follow' && api) {
            api.setError(__("Wrong link or URL"));
            this.setErrorMessage(__("Wrong link or URL"));
            this.displayErrorMessage(true);
            data.content.error = __("Wrong link or URL");
            return;
        } else if (matches && '1' in matches) {
                src = data.content.type === 'play' ? matches[1] : matches[1] + "&size=" + data.content.size + "&theme=" + data.content.bg + "&show-count=" + data.content.showCount;
            }
            else {
                var matches2 = src.match(/spotify:(.+):(.+)/i);
                if (matches2 && '1' in matches2 && '2' in matches2) {
                    src = data.content.type === 'play' ? linkBase + matches2[1] + "/" + matches2[2] : linkBase + matches2[1] + ":" + matches2[2] + "&size=" + data.content.size + "&theme=" + data.content.bg + "&show-count=" + data.content.showCount;
                }
                else {
                    var matches3 = src.match(/https:\/\/open.spotify.com\/(.+)\/(.+)/i);
                    if (matches3 && '1' in matches3 && '2' in matches3) {
                        src = data.content.type === 'play' ? linkBase + matches3[1] + "/" + matches3[2] : linkBase + matches3[1] + ":" + matches3[2] + "&size=" + data.content.size + "&theme=" + data.content.bg + "&show-count=" + data.content.showCount;
                    }
                    else {
                        src = '';
                        data.content.error = __("Wrong link or URL");
                        this.setErrorMessage(__("Wrong link or URL"));
                        this.displayErrorMessage(true);
                        if(api) api.setError(__("Wrong link or URL"));
                    }
                }
            }
        data.content.src = src;
        if(api && src.length) {
            api.setError(__(""));
            this.displayErrorMessage(false);
        }
    },

    setFinalSize: function(data) {
        if (data.content.type == "follow") {
            if (data.content.size == 'basic') {
                this.setSize(200, 30);
            }
            else {
                this.setSize(300, 60);
            }
        } else {
            this.setSize(560,400);
        }
    },

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.src.setText(data.content.link);
        fields.play.setValue(data.content.type === 'play');
        fields.follow.setValue(data.content.type === 'follow');
        if (data.content.type === 'follow')
            fields.flwbtnlayout.setVisible(true);
        else
            fields.flwbtnlayout.setVisible(false);
        fields.basic.setValue(data.content.size === 'basic');
        fields.detail.setValue(data.content.size === 'detail');
        fields.dark.setValue(data.content.bg === 'dark');
        fields.light.setValue(data.content.bg === 'light');
        fields.flwCount.setValue(data.content.showCount);
    },
    applyAction: function(fields, data, elem) {
        data.content.type = fields.play.getValue() ? 'play' : 'follow';
        data.content.size = fields.basic.getValue() ? 'basic' : 'detail';
        data.content.bg = fields.dark.getValue() ? 'dark' : 'light';
        data.content.showCount = fields.flwCount.getValue() ? 1 : 0;
        data.content.link = fields.src.getText() ? fields.src.getText() : data.content.placeholder_src;
        this.setFinalSrc(data);
        this.setFinalSize(data);
    },
    loadAction: function(data) {
        data.content.placeholder_link = 'https://open.spotify.com/playlist/37i9dQZEVXbMXbN3EUUhlg';
        data.content.placeholder_link_follow = 'https://open.spotify.com/artist/4NJhFmfw43RLBLjQvxDuRS?si=4MnRuLhnTSuqrRSsm144tA';
        data.content.placeholder_src = 'https://open.spotify.com/playlist/37i9dQZEVXbMXbN3EUUhlg';
		if (!data.content.src) data.content.src = '';
		if (!data.content.link) data.content.link = '';
		data.content.placeholder = __('Double click to change properties');
        if (!data.content.width) data.content.width = 300;
        if (!data.content.height) data.content.height = 380;
        if (!data.content.error) data.content.error = null;

        if (!data.content.type) data.content.type = 'play';
        if (!data.content.size) data.content.size = 'basic';
        if (!data.content.bg) data.content.bg = 'dark';
        if (!data.content.showCount) data.content.showCount = 1;
        if (!data.content.showCount_checkbox) data.content.showCount_checkbox = 1;
    },
    loadedAction: function(data) {
        this.setFinalSrc(data);
    }
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"yandex_kassa","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/yandex_kassa","customConfiguration":null};
PluginWrapper._config.id = 'yandex_kassa';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/yandex_kassa\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"YandexKassa\" method=\"post\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\" id=\"{{id}}_form\">\n\t<input name=\"amount\" value=\"{{content.sum}}\" type=\"hidden\" \/>\n\t<input name=\"currency\" value=\"{{content.currency}}\" type=\"hidden\" \/>\n\t<input name=\"description\" value=\"{{content.orderDetails}}\" type=\"hidden\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"returnUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/yandex_kassa/main.php';
PluginWrapper._config.active = false;

var Globals = {
	_settingsContent: null,
	_settingsDialog: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			var base_url = 'https://' + wb_builder.siteDomain + '/';
			var note = $('<p><strong>' + __('Note') + ':</strong> Ваш сайт должен поддерживать'
					+ ' HTTPS протокол, а также должен иметь валидный SSL сертификат'
					+ ' чтобы платежная система ЮKassa работала.<br />'
					+ 'Также убедитесь что опция <em>"Публикация сайта с принудительным HTTPS"</em>'
					+ ' в настройках сайта активна.</p>');
			var content = $('<div>').append('<p><strong>' + __('Page URL') + ':</strong> <a href="https://yookassa.ru/" target="_blank">https://yookassa.ru/</a></p>'
					+ '<p><strong>URL для уведомлений:</strong><br />'
					+ '<pre>' + base_url + '0/store-callback/YandexKassa' + '</pre></p>'
					+ '<p><strong>Активируйте следующие события:</strong><br />'
					+ 'payment.succeeded, payment.canceled</p>');
			content.prepend('<br>').prepend(note);
			Globals._settingsContent = content.html();
		}
		return Globals._settingsContent;
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#0e1930',
			button_border: {
				color: '#07090e',
				style: 'solid',
				weight: 1,
				differ: true,
				radius: 0,
				css: {
					'border-top': "1px solid #07090e",
					'border-right': "1px solid #07090e",
					'border-bottom': "1px solid #07090e",
					'border-left': "1px solid #07090e"
				},
				cssRaw: 'border-top: 1px solid #07090e; border-right: 1px solid #07090e; border-bottom: 1px solid #07090e; border-left: 1px solid #07090e;'
			},
			logo: 'logo-yoo.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#ffffff'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 108,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'logo_black.svg', name: 'black'},
			{id: 'logo_color.svg', name: 'coloured'},
			{id: 'logo_white.svg', name: 'white', backgroundColor: '#0e1930'},
			{id: 'logo-yoo.svg', name: 'default'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'ЮKassa',
	id: 'yandex_kassa',
	keyFieldId: 'shopId',
	keyField2Id: 'scid',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Shop ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'orderDetails',
	priceFieldId: 'sum',
	currencyFieldId: 'currency',
	globalVars: ['shopId', 'scid', 'demo'],
	useStylesInStoreCart: true,
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'yandex_kassa', true)
});

PluginWrapper.registerPlugin('yandex_kassa', {
	name: 'ЮKassa',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 150, height: 70}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'shopId', type: 'YandexKassaShopId', helpText: __('Unique indentificator from Yandex Kassa'),
			get: function(data) { return data.content.shopId; },
			set: function(value, data) {
				data.content.shopId = value;
			}
		},
		{id: 'scid', type: 'YandexKassaScid', helpText: __('Unique indentificator from Yandex Kassa'),
			get: function(data) { return data.content.scid; },
			set: function(value, data) {
				data.content.scid = value;
			}
		},
		{id: 'orderDetails', type: 'YandexKassaOrderDetails',
			get: function(data) { return data.content.orderDetails; },
			set: function(value, data) {
				data.content.orderDetails = value;
			}
		},
		{id: 'sum', type: 'YandexKassaSum',
			get: function(data) { return data.content.sum; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.sum = value;
			}
		},
		{id: 'currency', type: 'YandexKassaCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'YandexKassaDemo', moreInfo: function(data) {
				Globals.getSettingsDialog().setVisible(true);
			},
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'yandex_kassa'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Shop ID'), helpText: __('Unique indentificator from Yandex Kassa')},
						{type: 'TextField', id: 'shopId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key'), helpText: __('Unique indentificator from Yandex Kassa')},
						{type: 'TextField', id: 'scid'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'orderDetails'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred") + ', ' + __('RUB')},
						{type: 'TextField', id: 'sum'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: 'RUB', name: 'RUB'},
							{id: 'USD', name: 'USD'},
							{id: 'EUR', name: 'EUR'},
							{id: 'BYN', name: 'BYN'},
							{id: 'CNY', name: 'CNY'},
							{id: 'KZT', name: 'KZT'},
							{id: 'UAH', name: 'UAH'}
						]}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Mode'), init: function() {
							var link = $('<a>').attr('href', 'javascript:void(0)').text(__('Settings'));
							link.on('click', function() {
								Globals.getSettingsDialog().setVisible(true);
							});
							var cont = $('<span>').css({fontWeight: 'normal', marginLeft: '4px'});
							cont.append('(');
							cont.append(link);
							cont.append(')');
							this._elem.append(cont);
						}},
						{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
							this.getElem().attr('title', __('For testing purpose without real payments'));
							this.getElem().tooltip({placement: 'right'});
						}}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'yandex_kassa')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		fields.shopId.setText(data.content.shopId);
		fields.scid.setText(data.content.scid);
		fields.orderDetails.setText(data.content.orderDetails);
		fields.sum.setText(data.content.sum);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data, elem);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.shopId = fields.shopId.getText();
		data.content.scid = fields.scid.getText();
		data.content.orderDetails = fields.orderDetails.getText();
		data.content.sum = fields.sum.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data, elem);
	},
	loadAction: function (data) {
		data.content.__globalVars = ['shopId', 'scid', 'demo'];
		if (!data.content.shopId) data.content.shopId = ''; // 1234
		if (!data.content.scid) data.content.scid = ''; // 4321
		if (!data.content.orderDetails) data.content.orderDetails = ''; // Item description
		if (!data.content.sum) data.content.sum = '1'; // 9.99
		if (!data.content.currency) data.content.currency = 'RUB';
		if (data.content.demo === undefined) data.content.demo = true;
		if (['logo-black.svg', 'logo-color.svg', 'logo-white.svg', 'yandex_checkout_logo_icon.svg', 'Yandex_Kassa_logo_icon.svg', 'Yandex_kassa_logo_black.svh'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'logo-yoo.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"payumoney","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/payumoney","customConfiguration":null};
PluginWrapper._config.id = 'payumoney';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/payumoney\/main.png";
PluginWrapper._config.template = "<form method=\"post\" action=\"https:\/\/secure.payu.in\/_payment\" data-gateway-id=\"Payumoney\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"key\" value=\"{{content.key}}\" \/>\n\t<input type=\"hidden\" name=\"productinfo\" value=\"{{content.productinfo}}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"txnid\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"surl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"furl\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n\t<input type=\"hidden\" name=\"service_provider\" value=\"payu_paisa\" \/>\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/payumoney/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: "#cccccc",
				style: 'solid',
				weight: 1,
				differ: false,
				css: "1px solid #cccccc",
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'payumoney_color.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'payumoney_color.svg', name: 'coloured'},
			{id: 'payumoney_black.svg', name: 'black'},
			{id: 'payumoney_dark.svg', name: 'dark'},
			{id: 'payumoney_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'PayUmoney',
	id: 'payumoney',
	pageUrl: 'https://www.payumoney.com/',
	keyField: __('Key'),
	keyFieldId: 'key',
	keyField2: __('Salt'),
	keyField2Id: 'salt',
	titleFieldId: 'label',
	nameFieldId: 'productinfo',
	priceFieldId: 'amount',
	globalVars: ['key', 'salt'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payumoney', true)
});
PluginWrapper.registerPlugin('payumoney', {
	name: 'PayUmoney',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'productinfo', type: 'PayumoneyProductInfo',
			get: function(data) { return data.content.productinfo; },
			set: function(value, data) {
				data.content.productinfo = value;
			}
		},
		{id: 'key', type: 'PayumoneyKey', helpText: __("Unique merchant key provided by PayUmoney"),
			get: function(data) { return data.content.key; },
			set: function(value, data) {
				data.content.key = value;
			}
		},
		{id: 'salt', type: 'PayumoneySalt', helpText: __("Merchant salt as provided by PayUmoney"),
			get: function(data) { return data.content.salt; },
			set: function(value, data) {
				data.content.salt = value;
			}
		},
		{id: 'amount', type: 'PayumoneyAmount', helpText: __("Amount to be transferred") + ', INR',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'payumoney'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [9, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'productinfo'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred") + ', INR'},
							{type: 'TextField', id: 'amount'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Key'), helpText: __("Unique merchant key provided by PayUmoney")},
							{type: 'TextField', id: 'key'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Salt'), helpText: __("Merchant salt as provided by PayUmoney")},
							{type: 'TextField', id: 'salt'}
						]}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payumoney')
		]
	},
	openAction: function (fields, data, elem) {
		fields.productinfo.setText(data.content.productinfo);
		fields.amount.setText(data.content.amount);
		fields.key.setText(data.content.key);
		fields.salt.setText(data.content.salt);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		data.content.productinfo = fields.productinfo.getText();
		data.content.amount = fields.amount.getText();
		data.content.key = fields.key.getText();
		data.content.salt = fields.salt.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.productinfo) data.content.productinfo = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.key) data.content.key = '';
		if (!data.content.salt) data.content.salt = '';
		if (['payumoney.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'payumoney_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"default_bubble_ui","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/default_bubble_ui","customConfiguration":{}};
PluginWrapper._config.id = 'default_bubble_ui';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "<div id=\"builder_canvas\"><\/div>\n<div id=\"elements_toolbar\" class=\"spbbl-collapsed\"><\/div>\n<div id=\"builder_toolbar\"><\/div>\n<div id=\"builder_notification\" class=\"hidden\"><\/div>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
var __extends=this&&this.__extends||function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),__spreadArray=this&&this.__spreadArray||function(e,t,o){if(o||2===arguments.length)for(var n,i=0,l=t.length;i<l;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};define("default_bubble_ui/SPBblMenuNode",["require","exports"],function(e,t){"use strict";t.__esModule=!0,t.SPBblMenuNode=void 0;var o=function(){function e(){this.visible=!0,this.enabled=!0,this.iconVisible=!1,this.iconClass=null,this.textVisible=!1,this.isActive=!1,this.isChecked=!1,this.autoHideLabel=!1,this.elem=$('<div class="spbbl-menu-node"/>'),this.content=$('<span class="spbbl-mn-content"/>'),this.icon=$('<i class="ico-tb-i"/>'),this.text=$('<span class="spbbl-mn-text"/>'),this.elem.append(this.content)}return e.prototype.getElem=function(){return this.elem},e.prototype.setVisible=function(e){return(this.visible=e)?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this.elem.trigger(e?"toolbaritem.show":"toolbaritem.hide"),this},e.prototype.getVisible=function(){return this.visible},e.prototype.getIcon=function(){return this.iconClass},e.prototype.setIcon=function(e){return null===(this.iconClass=e)?this.iconVisible&&(this.iconVisible=!1,this.icon.detach()):(this.icon.attr("class","ico-tb-i "+e),this.iconVisible||(this.iconVisible=!0,this.content.prepend(this.icon))),this},e.prototype.setIconEnabled=function(e){return e?this.elem.addClass("enabled"):this.elem.removeClass("enabled"),this},e.prototype.setText=function(e){return null===e?this.textVisible&&(this.textVisible=!1,this.text.detach()):(this.text.empty().append(e),this.textVisible||(this.textVisible=!0,this.iconVisible?this.text.insertAfter(this.icon):this.content.prepend(this.text))),this},e.prototype.getTextElem=function(){return this.text},e.prototype.setTooltipMark=function(e,t){void 0===t&&(t="");var o=$('<span class="badge wb_badge_help" >?</span>');return t&&""!=t&&o.attr("data-placement",t),this.content.after(o.attr("data-original-title",e)),this},e.prototype.setTooltip=function(e){return this.content.attr("title",e),this},e.prototype.setActive=function(e){return e?this.elem.addClass("active"):this.elem.removeClass("active"),this.isActive=e,this},e.prototype.getActive=function(){return this.isActive},e.prototype.setEnabled=function(e){return this.enabled=e,this.markEnabled(e),this},e.prototype.markEnabled=function(e){return e?this.elem.removeClass("disabled"):this.elem.addClass("disabled"),this},e.prototype.getEnabled=function(){return this.enabled},e.prototype.addSpacer=function(){return $('<span class="spacer"></span>').insertAfter(this.elem.find(".spbbl-mn-text")),this},e.prototype.setAutoHideLabel=function(e){return e==this.autoHideLabel||((this.autoHideLabel=e)?this.text.addClass("spbbl-mobile-hidden"):this.text.removeClass("spbbl-mobile-hidden")),this},e}();t.SPBblMenuNode=o}),define("default_bubble_ui/SPBblMenuItem",["require","exports","default_bubble_ui/SPBblMenuNode","PluginApi/PluginTranslation"],function(e,t,o,a){"use strict";t.__esModule=!0,t.SPBblMenuItem=void 0;var n=function(l){function s(e,t,o,n){void 0===o&&(o=null),void 0===n&&(n=null);var i=l.call(this)||this;return i.switcherBlock=o,i.builder=n,i.clickCallback=null,i.switchCallback=null,i.data=null,i.switchVisible=!1,i.isDraggable=!1,i.dots=null,i.setIcon(e).setText(t),i.name=null!==t?i.text.text():"",i.name&&i.setTooltip(i.name),i.switch=$('<div class="spbbl-mn-switch"><input type="checkbox" class="spbbl-switch-input" id="spbbl-ims-'+s.nextSwitchId+'" /><label for="spbbl-ims-'+s.nextSwitchId+++'" class="spbbl-switch-label spbbl-no-text"></label></div>'),o&&n&&i.switch.prepend($("<span>"+t+(t==(0,a.__)("Auto Layout")?"":" "+(0,a.__)("version"))+"</span>")),i.switch.find("input").on("change",function(e){if(s.isClickPrevented()||!i.getEnabled())return e.stopImmediatePropagation(),void e.preventDefault();i.isActive=$(e.target).is(":checked"),i.isChecked=$(e.target).is(":checked"),i.switchCallback&&i.switchCallback(i)}).on("click",function(e){if(s.isClickPrevented()||!i.getEnabled())return e.stopImmediatePropagation(),void e.preventDefault()}),i.elem.on("touchstart",function(e){s.isClickPrevented()||$(e.target).closest(".spbbl-mn-switch").length||(s.lastTouchedItem=i)}),i.elem.on("touchmove touchcancel",function(e){s.isClickPrevented()||$(e.target).closest(".spbbl-mn-switch").length||(s.lastTouchedItem=null)}),i.elem.on("touchend",function(e){s.isClickPrevented()||$(e.target).closest(".spbbl-mn-switch").length||s.lastTouchedItem===i&&(s.lastTouchedItem=null,e.stopImmediatePropagation(),e.preventDefault(),i.elem.trigger("click"))}),i.elem.on("click",function(e){s.isClickPrevented()||$(e.target).closest(".spbbl-mn-switch").length||(e.stopImmediatePropagation(),e.preventDefault(),i.getEnabled()&&(i.clickCallback?i.clickCallback(i):i.switchVisible&&(i.setActive(!i.getActive()),i.switchCallback&&i.switchCallback(i))))}),i}return __extends(s,l),s.prototype.setDragable=function(e){if(this.isDraggable==e)return this;if(this.isDraggable=e){if(!this.dots){var t='<svg width="3" height="3"><circle cx="1.5" cy="1.5" r="1.5" fill="#919191"/></svg>';this.dots=$("<div>").addClass("spbbl-mn-dots").append($("<div>").append(t).append(t).append(t)).append($("<div>").append(t).append(t).append(t))}this.elem.addClass("spbbl-mn-draggable"),this.text.before(this.dots)}else this.dots&&this.dots.detach(),this.elem.removeClass("spbbl-mn-draggable");return this},s.isClickPrevented=function(){return s.preventClickUntil>(new Date).getTime()},s.preventClick=function(){s.preventClickUntil=(new Date).getTime()+250},s.prototype.onClick=function(e){return this.clickCallback=e,this},s.prototype.onSwitch=function(e){return this.switchCallback=e,this},s.prototype.setSwitchVisible=function(e){return this.switchVisible!=e&&((this.switchVisible=e)?(this.switcherBlock?this.switcherBlock.append(this.switch):this.content.append(this.switch),this.elem.addClass("spbbl-mn-has-switch")):(this.switch.detach(),this.elem.removeClass("spbbl-mn-has-switch"))),this},s.prototype.setActive=function(e){return this.isActive=e,l.prototype.setActive.call(this,e)},s.prototype.setChecked=function(e){return this.isChecked=e,this.switch.children("input").prop("checked",e),e?this.elem.addClass("checked"):this.elem.removeClass("checked"),this},s.prototype.getChecked=function(){return this.isChecked},s.prototype.setData=function(e){return this.data=e,this},s.prototype.getData=function(){return this.data},s.lastTouchedItem=null,s.nextSwitchId=0,s.preventClickUntil=0,s}(o.SPBblMenuNode);t.SPBblMenuItem=n}),define("default_bubble_ui/SPBblMenu",["require","exports","default_bubble_ui/SPBblMenuNode","default_bubble_ui/SPBblMenuItem","BuilderEvent","PluginApi/PluginTranslation"],function(e,t,o,l,n,a){"use strict";t.__esModule=!0,t.SPBblMenu=void 0;var i=function(t){function i(e){void 0===e&&(e=!1);var n=t.call(this)||this;n.items=[],n.inline=!1,n.oneRow=!0,n.caretVisible=!1;var s=n;return n.dropdown=$('<div class="spbbl-dropdown"/>'),e&&(n.searchBlock=$("<div>").addClass("spbbl-dd-search").appendTo(n.dropdown),n.searchInput=$("<input>").addClass("form-control").attr("type","text").attr("placeholder",(0,a.__)("Search")).on("change keyup",function(e){27===e.keyCode&&(this.value="");for(var t=this.value.toLowerCase(),o=0,n=s.items;o<n.length;o++){var i=n[o];if(i){var l=0<=i.getTextElem().text().toLowerCase().indexOf(t);i.setVisible(l)}}}).appendTo(n.searchBlock)),n.itemContainer=$('<div class="spbbl-dd-item-container"/>'),n.dropdown.append($('<div class="spbbl-dd-scroll"/>').append(n.itemContainer)),n.elem.addClass("spbbl-mn-has-dropdown spbbl-dd-right").on("mouseover",function(e){var t=$(e.target);if(!(n.elem.is(".spbbl-over")||n.elem.is(".no-over")||t.closest(".spbbl-et-vertical").length)){var o=t.parents().addBack().filter(".spbbl-mn-has-dropdown");o.length<2&&(i.closeAllDropDowns(),o.each(function(){$(this).addClass("spbbl-over")}))}}).on("mouseout",function(e){$(e.target).closest(".spbbl-et-vertical").length||n.elem.is(".no-over")||n.elem.parents(".spbbl-dropdown").length||n.elem[0].contains(e.relatedTarget)||(l.SPBblMenuItem.preventClick(),n.elem.removeClass("spbbl-over"))}).on("touchstart",function(e){i.lastTouchedMenu=n}).on("touchmove touchcancel",function(e){i.lastTouchedMenu=null}).on("touchend",function(e){if(i.lastTouchedMenu===n){i.lastTouchedMenu=null,e.stopImmediatePropagation();try{e.preventDefault()}catch(e){}$(e.target).trigger("click")}}).on("click",function(e){var t=$(e.target);if(!n.elem.parent().is(".spbbl-side-collapse-btn")){if(n.elem.is(".spbbl-over")){var o=t.closest(".spbbl-dropdown,.spbbl-menu-node");if(o.length&&o[0]===n.elem[0])return e.stopImmediatePropagation(),e.preventDefault(),void n.elem.removeClass("spbbl-over").find(".spbbl-over").removeClass("spbbl-over")}i.closeAllDropDowns(),$(e.target).parents().addBack().filter(".spbbl-mn-has-dropdown").each(function(){$(this).addClass("spbbl-over")})}}).append(n.dropdown,'<div class="spbbl-dd-arrow"/>'),n.caret=$('<span class="caret"></span>'),n}return __extends(i,t),i.firstInit=function(){i.firstInitDone||(i.firstInitDone=!0,$(document.body).on("touchstart",function(e){$(e.target).closest(".spbbl-has-dropdown").length||i.closeAllDropDowns()}),n.GlobalEvents.on("modal.show contextmenu.show",function(){i.closeAllDropDowns()}))},i.closeAllDropDowns=function(){$(document.body).trigger("close-all-dropdown"),$(".spbbl-over").removeClass("spbbl-over")},i.prototype.clearItems=function(){return this.items=[],this.itemContainer.empty(),this},i.prototype.addItem=function(e){if(this.items.push(e),e?this.itemContainer.append(e.getElem()):this.itemContainer.append('<div class="spbbl-dropdown-separator"/>'),this.searchBlock&&(this.searchInput.val(""),this.searchBlock.css("display",this.items.length>=i.minOptionsNumberForSearchShowing?"block":"none"),this.searchBlock.is(":not(:visible)")))for(var t=0,o=this.items;t<o.length;t++){var n=o[t];n&&n.setVisible(!0)}return this},i.prototype.setSeparatorForItemVisible=function(e,t){var o=this.items.indexOf(t),n=this.items.length;if(!(o<0)){var i=null;0==o&&1<n&&!this.items[o+1]?i=t.getElem().next():0<o&&!this.items[o-1]&&(n<=o+1||!this.items[o+1])&&(i=t.getElem().prev()),i&&(e?i.show():i.hide())}},i.prototype.getItems=function(){return this.items},i.prototype.setInline=function(e){return(this.inline=e)?this.elem.addClass("spbbl-dd-inline"):this.elem.removeClass("spbbl-dd-inline"),this},i.prototype.setOneRow=function(e){return(this.oneRow=e)?this.elem.addClass("spbbl-dd-onerow"):this.elem.removeClass("spbbl-dd-onerow"),this},i.prototype.getInline=function(){return this.inline},i.prototype.getOneRow=function(){return this.oneRow},i.prototype.setDropdownDirection=function(e){return this.elem.removeClass("spbbl-dd-left spbbl-dd-right").addClass("spbbl-dd-"+e),this},i.prototype.setCaretVisible=function(e,t,o,n){return void 0===t&&(t=!1),void 0===o&&(o=!1),void 0===n&&(n=""),this.caretVisible!=e&&(this.caretVisible=e,""!==n&&this.caret.removeClass("caret").addClass("caret-c "+n),t&&this.caret.addClass("closely"),e?o?this.content.append($('<span class="caret-box"></span>').append(this.caret)):this.content.append(this.caret):(this.caret.detach(),this.content.find(".caret-box").detach())),this},i.prototype.setOpen=function(e){return e?this.elem.addClass("spbbl-over"):this.elem.removeClass("spbbl-over"),this},i.lastTouchedMenu=null,i.minOptionsNumberForSearchShowing=8,i.firstInitDone=!1,i}(o.SPBblMenuNode);t.SPBblMenu=i}),define("default_bubble_ui/SPBblBuilderModeSelector",["require","exports","default_bubble_ui/SPBblMenuItem","BuilderEvent","default_bubble_ui/SPBblMenu","PluginApi/PluginTranslation"],function(e,t,s,a,o,u){"use strict";t.__esModule=!0,t.SPBblBuilderModeSelector=void 0;var n=function(l){function e(e){var o=l.call(this)||this;o.builder=e,o.autoLayoutButton=null,o.modeButtons={},o.blockModeSwitchers=null,o.defaultIconClass="ico-tb-auto-layout",o.modeDef="tv",o.setText(null),o.setCaretVisible(!0,!0);for(var t=0,n=__spreadArray([],e.getModes(),!0).sort(function(e,t){return t.width-e.width});t<n.length;t++){var i=n[t];o.modeButtons[i.id]=new s.SPBblMenuItem("ico-tb-mode-"+i.id,i.name,null,e).onClick(o.onModeSelect.bind(o)).onSwitch(o.onModeEnable.bind(o)).setData(i.id).setSwitchVisible(!o.builder.isAutoLayoutEnabled()).setActive(o.modeDef==i.id&&!o.builder.isAutoLayoutEnabled()),o.addItem(o.modeButtons[i.id])}return o.builder.isComposerMode()||(o.addItem(o.autoLayoutButton=new s.SPBblMenuItem("ico-tb-auto-layout",(0,u.__)("Auto Layout"),o.blockModeSwitchers,e).onSwitch(function(e){e.getActive()&&!o.builder.isAutoLayoutAvailable()||o.builder.setAutoLayoutEnabled(e.getActive())}).onClick(function(e){e.getActive()||(e.setActive(!0),o.builder.setAutoLayoutEnabled(e.getActive()))}).setEnabled(o.builder.isAutoLayoutEnabled()||o.builder.isAutoLayoutAvailable()).setSwitchVisible(!0).setActive(o.builder.isAutoLayoutEnabled())),a.GlobalEvents.on("modes.autolayout.changed",function(e){if(o.autoLayoutButton.setChecked(e.value).setActive(e.value),e.value)for(var t in o.setIcon(o.defaultIconClass),o.modeButtons)o.modeButtons[t].setActive(!1);if(!e.value)for(var t in o.modeButtons)o.modeDef==t&&o.modeButtons[t].setActive(!0);e.value||o.builder.isAutoLayoutAvailable()||o.autoLayoutButton.setEnabled(!1).setActive(!1)})),a.GlobalEvents.on("modes.enabled.change",function(e){o.modeButtons.hasOwnProperty(e.mode)&&o.modeButtons[e.mode].setChecked(e.value),o.getIcon()==o.modeButtons[e.mode].getIcon()&&o.setIconEnabled(o.modeButtons[e.mode].getChecked())}),a.GlobalEvents.on("modes.visible.changed",function(e){o.setVisible(e.visible)}),a.GlobalEvents.on("modes.usable.change",function(e){o.modeButtons.hasOwnProperty(e.mode)&&o.modeButtons[e.mode].setEnabled(e.value)}),a.GlobalEvents.on("modes.change",function(e){if(!o.builder.isAutoLayoutEnabled()&&e.mode in o.modeButtons){var t=o.modeButtons[e.mode];o.setIcon(t.getIcon()||o.defaultIconClass),o.setText(null),o.setIconEnabled(t.getChecked())}}),o}return __extends(e,l),e.prototype.update=function(){for(var e in this.modeButtons)this.modeButtons[e].setEnabled(!this.builder.isAutoLayoutEnabled());return this},e.prototype.onModeSelect=function(e){var t=e.getData();for(var o in this.builder.setMode(t),this.modeButtons)t==o?this.modeButtons[o].setActive(!0):this.modeButtons[o].setActive(!1)},e.prototype.onModeEnable=function(e){if(!this.builder.isAutoLayoutEnabled()){var t=e.getData();this.builder.setModeEnabled(t,e.getChecked())}},e}(o.SPBblMenu);t.SPBblBuilderModeSelector=n}),define("default_bubble_ui/SPBblBuilderNotification",["require","exports","BuilderEvent","Service"],function(e,t,n,o){"use strict";t.__esModule=!0,t.SPBblBuilderNotification=void 0,o=__importDefault(o);var i=function(){function e(e,t){var o=this;this.builderBannerOriginalBottom=null,this.builder=e,this.elem=t,this.content=$("<div/>"),this.closeButton=$('<button class="close">&times;</button>').on("click touchend",function(){return o.setVisible(!1)}),this.elem.append(this.content,this.closeButton),setTimeout(function(){var e=o.getBuilderImageBanner();e&&(o.builderBannerOriginalBottom=parseInt(e.css("bottom")),e.css("bottom",o.builderBannerOriginalBottom+t.outerHeight()+"px"))},500),n.GlobalEvents.on("notification.changed",function(e){o.setMessage(e.message,e.isHtml)})}return e.prototype.getBuilderImageBanner=function(){return o.default.RemoteLoginDialog.getImageBanner()},e.prototype.setMessage=function(e,t){return void 0===t&&(t=!1),e?(t||"string"!=typeof e?this.content.empty().append(e):this.content.text(e),this.setVisible(!0)):this.setVisible(!1),this},e.prototype.setVisible=function(e){var t=this.getBuilderImageBanner();return t&&t.css("bottom",this.builderBannerOriginalBottom+"px"),e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.getElem=function(){return this.elem},e}();t.SPBblBuilderNotification=i}),define("default_bubble_ui/SPBblPageSelector",["require","exports","default_bubble_ui/SPBblMenu","BuilderEvent","default_bubble_ui/SPBblMenuItem","PluginApi/PluginTranslation","default_bubble_ui/SPBblMenuNode"],function(e,t,o,i,d,p,n){"use strict";t.__esModule=!0,t.SPBblPageSelector=void 0;var l=function(n){function e(e,t){void 0===t&&(t=!1);var o=n.call(this,!0)||this;return o.builder=e,o.mobile=t,o.inPreview=!1,o.elem.addClass("spbbl-page-selector"),o.setCaretVisible(!0,!1,!0),i.GlobalEvents.on("preview.show",function(e){o.inPreview=e.visible,o.updateVisibility()}),i.GlobalEvents.on("preview.hide",function(e){o.inPreview=e.visible,o.updateVisibility()}),i.GlobalEvents.on("page.load pages.changed",function(){o.update(),o.updateVisibility()}),o.update(),o.updateVisibility(),o}return __extends(e,n),e.prototype.updateVisibility=function(){this.setVisible((!this.inPreview||this.mobile)&&0<this.getItems().length)},e.prototype.update=function(){this.clearItems();for(var e,t=null,o=!0,n=0,i=this.builder.getSiteMenus();n<i.length;n++){var l=i[n];if(l.items.length&&!l.hasOnlyLinks()){o?o=!1:this.addItem(null);for(var s=0,a=l.items;s<a.length;s++){var u=a[s],r="";for(e=u.lvl;0<e;e--)r+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";r+=u.name,this.addItem(new d.SPBblMenuItem(null,r).setTooltip(u.fullName).setData(u).setActive(u.isCurrent()).onClick(this.onPageSelect.bind(this))),u.isCurrent()&&(t=u)}(l.isEditable()||l.isRemovable())&&this.addItem(null),this.addItem(new c(l))}}var b=t?t.fullName:(0,p.__)("Home");return this.mobile||this.setText('<span><span class="spbbl-selected-page-name">'+b+"</span></span>"),this},e.prototype.onPageSelect=function(e){var t=e.getData();this.inPreview?t.preview():t.navigate()},e}(o.SPBblMenu);t.SPBblPageSelector=l;var c=function(n){function e(e){var t=n.call(this)||this;t.menu=e;var o=[];return t.elem.addClass("spbbl-ps-menu-buttons no-hover"),e.isEditable()&&o.push($('<span class="spbbl-inner-btn"><i class="fa fa-pencil"></i>'+(0,p.__)("Edit")+"</span>").attr("title",(0,p.__)("Edit")).on("click",function(){t.menu.edit()})),e.isRemovable()&&o.push($('<span class="spbbl-inner-btn"><i class="fa fa-trash-o"></i>'+(0,p.__)("Remove")+"</span>").attr("title",(0,p.__)("Remove")).on("click",function(){t.menu.remove()})),t.setText(o),t.setTooltip(""),t}return __extends(e,n),e}(n.SPBblMenuNode)}),define("default_bubble_ui/SPBblToolbarGroup",["require","exports"],function(e,t){"use strict";t.__esModule=!0,t.SPBblToolbarGroup=void 0;var o=function(){function e(){var e=this;this.visible=!0,this.elem=$('<div class="spbbl-tb-group" />').on("toolbaritem.show toolbaritem.hide",function(){e.update()}),this.items=[]}return e.prototype.getElem=function(){return this.elem},e.prototype.setVisible=function(e){return this.visible=e,this.update(),this},e.prototype.update=function(){var e=this.visible;if(e){e=!1;for(var t=0,o=this.items;t<o.length;t++){if(o[t].getVisible()){e=!0;break}}}return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.addItem=function(e){return this.items.push(e),this.elem.append(e.getElem()),this.update(),this},e.prototype.getItems=function(){return this.items},e}();t.SPBblToolbarGroup=o}),define("default_bubble_ui/SPBblPreviewModeSelector",["require","exports","default_bubble_ui/SPBblMenu","BuilderEvent","default_bubble_ui/SPBblMenuItem","PluginApi/PluginTranslation"],function(e,t,o,s,a,u){"use strict";t.__esModule=!0,t.SPBblPreviewModeSelector=void 0;var n=function(l){function e(e){var i=l.call(this)||this;i.builder=e,i.modeButtons={},i.elem.addClass("spbbl-dd-inline");for(var t=0,o=__spreadArray([],e.getModes(),!0).sort(function(e,t){return t.width-e.width});t<o.length;t++){var n=o[t];console.log(n),i.addItem(i.modeButtons[n.id]=new a.SPBblMenuItem("ico-tb-mode-"+n.id,"").setTooltip(n.name).onClick(i.onSelectMode.bind(i)).setData(n.width))}return i.autoLayoutButton=new a.SPBblMenuItem("ico-tb-auto-layout",(0,u.__)("Auto layout")).setTooltip((0,u.__)("Auto layout")).setEnabled(i.builder.isAutoLayoutEnabled()),i.builder.getFeaturesetVersion()<4&&i.addItem(i.autoLayoutButton),s.GlobalEvents.on("preview.size.changed",function(e){var t=null,o=null;for(var n in i.modeButtons)i.modeButtons[n].getData()<=e.width&&!t&&(t=i.modeButtons[n]),o=i.modeButtons[n];for(var n in t||(t=o),i.modeButtons)i.modeButtons[n].setActive(i.modeButtons[n]===t)}),s.GlobalEvents.on("modes.autolayout.changed",function(e){i.autoLayoutButton.setActive(e.value).setChecked(e.value),i.update()}),s.GlobalEvents.on("modes.enabled.change",function(e){i.modeButtons.hasOwnProperty(e.mode)&&i.modeButtons[e.mode].setChecked(e.value)}),i}return __extends(e,l),e.prototype.onSelectMode=function(e){this.builder.setPreviewWidth(e.getData())},e.prototype.update=function(){for(var e in this.modeButtons)this.builder.isAutoLayoutEnabled()?this.modeButtons[e].getElem().addClass("disabled-s"):this.modeButtons[e].getElem().removeClass("disabled-s");return this},e}(o.SPBblMenu);t.SPBblPreviewModeSelector=n}),define("default_bubble_ui/SPBblTemplateMenu",["require","exports","default_bubble_ui/SPBblMenuItem","default_bubble_ui/SPBblMenu","PluginApi/PluginTranslation"],function(e,t,n,o,i){"use strict";t.__esModule=!0,t.SPBblTemplateMenu=void 0;var l=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.functionButtonMap={},t.setIcon("ico-tb-reset"),t.setText((0,i.__)("New")+"/"+(0,i.__)("Reset")),t.setCaretVisible(!0),t.addItem(t.functionButtonMap.new=new n.SPBblMenuItem(null,(0,i.__)("Change template")).onClick(function(){t.builder.showTemplateChooser()}).setVisible(t.builder.isTemplateSelectorVisible())),t.addItem(t.functionButtonMap.reset=new n.SPBblMenuItem(null,(0,i.__)("Reset")).onClick(function(){t.builder.resetSite(!0)}).setVisible(t.builder.isResetTemplateButtonVisible())),t.addItem(t.functionButtonMap.import=new n.SPBblMenuItem(null,(0,i.__)("Import")).onClick(function(){t.builder.showImportDialog()}).setEnabled(t.builder.isImportAvailable()).setVisible(t.builder.isImportVisible())),t}return __extends(e,o),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPBblMenu);t.SPBblTemplateMenu=l}),define("default_bubble_ui/SPBblSettingsMenu",["require","exports","default_bubble_ui/SPBblMenuItem","BuilderEvent","default_bubble_ui/SPBblMenu","PluginApi/PluginTranslation"],function(e,t,n,i,o,l){"use strict";t.__esModule=!0,t.SPBblSettingsMenu=void 0;var s=function(e){function t(t){var o=e.call(this)||this;o.builder=t,o.functionButtonMap={},o.setText((0,l.__)("Settings")),o.setCaretVisible(!0,!0),o.setIcon("icon-cog-big spbbl-mobile-visible"),o.text.addClass("spbbl-mobile-hidden"),o.addItem(new n.SPBblMenuItem("ico-tb-seo",(0,l.__)("SEO")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteSEODialog()})),o.addItem(o.functionButtonMap.background=new n.SPBblMenuItem("ico-tb-background",(0,l.__)("Background")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteBackgroundDialog()})),o.addItem(new n.SPBblMenuItem("ico-tb-styles",(0,l.__)("Styles")).onClick(function(e){o.builder.showSiteStylesDialog()})),o.addItem(new n.SPBblMenuItem("ico-tb-favicon",(0,l.__)("Favicon")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteFaviconDialog()})),o.addItem(new n.SPBblMenuItem("icon-cog-big",(0,l.__)("Settings")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSitePropertiesDialog()})),o.addItem(null);o.builder.getSiteLanding();return o.addItem(o.landingButton=new n.SPBblMenuItem("ico-tb-landing",(0,l.__)("Landing")).setTooltip((0,l.__)("If checked then pages of main site menu will be published as one page with common header and footer of homepage")).setVisible(!o.builder.isComposerMode()).onSwitch(function(e){var t=e.getActive();o.builder.setSiteLanding(t),e.setActive(t)}).onClick(function(e){var t=e.getActive();e.setChecked(!t),e.setActive(!t),o.builder.setSiteLanding(!t)}).setSwitchVisible(!0)),o.landingButton.getElem().addClass("no-hover"),t.getFeaturesetVersion()<4&&o.addItem(new n.SPBblMenuItem("ico-tb-grid",(0,l.__)("Grid and guides")).onClick(function(e){o.builder.showGridAndGuidesDialog()})),o.addItem(null),o.builder.isFullScreenSupported()&&(o.addItem(null),o.addItem(new n.SPBblMenuItem("ico-tb-fullscreen",(0,l.__)("Full Screen")).onClick(function(e){o.builder.toggleFullScreen()}))),o.addItem(null),o.addItem(new n.SPBblMenuItem("ico-tb-logout",(0,l.__)("Log Out")).onClick(function(e){o.builder.logout()})),i.GlobalEvents.on("landing.changed",function(e){o.landingButton.setActive(e.value),o.landingButton.setChecked(e.value),4<=t.getFeaturesetVersion()&&(o.landingButton.setVisible(e.value),o.setSeparatorForItemVisible(e.value,o.landingButton))}),o}return __extends(t,e),t.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},t}(o.SPBblMenu);t.SPBblSettingsMenu=s}),define("default_bubble_ui/SPBblPublishMenu",["require","exports","PluginApi/PluginTranslation","default_bubble_ui/SPBblMenuItem","default_bubble_ui/SPBblMenu"],function(e,t,n,i,o){"use strict";t.__esModule=!0,t.SPBblPublishMenu=void 0;var l=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.setDropdownDirection("left"),t.setIcon("fa fa-floppy-o"),t.builder.isComposerMode()?(t.setText((0,n.__)("Save Composition")),t.addItem(new i.SPBblMenuItem(null,(0,n.__)("Save Composition")).setEnabled(t.builder.isElementCompositionSavingEnabled()).setTooltip(t.builder.isElementCompositionSavingEnabled()?"":"Please switch builder to English language").onClick(function(e){t.builder.saveElementComposition()}))):(t.setText((0,n.__)("Publish")),t.addItem(new i.SPBblMenuItem(null,(0,n.__)("Publish")).onClick(function(e){t.builder.publish()}).setEnabled(t.builder.isPublishAvailable()).setTooltipMark((0,n.__)("Save site and Publish it to the internet"),"bottom")),t.addItem(new i.SPBblMenuItem(null,(0,n.__)("Save")).onClick(function(e){t.builder.save(!0)}).setTooltipMark((0,n.__)("Save site without Publishing it"),"bottom")),t.addItem(new i.SPBblMenuItem(null,(0,n.__)("Backup/Restore")).onClick(function(e){t.builder.showBackupRestoreDialog()})),t.builder.isTemplateSavingAvailable()&&t.addItem(null),t.addItem(new i.SPBblMenuItem(null,(0,n.__)("Save As...")).setVisible(t.builder.isTemplateSavingAvailable()).setEnabled(t.builder.isTemplateSavingEnabled()).setTooltip(t.builder.isTemplateSavingEnabled()?"":"Please switch builder to English language").onClick(function(){t.builder.showSaveAsTemplateDialog()}))),t}return __extends(e,o),e}(o.SPBblMenu);t.SPBblPublishMenu=l}),define("default_bubble_ui/SPBblLanguagesMenu",["require","exports","default_bubble_ui/SPBblMenu","default_bubble_ui/SPBblMenuItem"],function(e,t,o,r){"use strict";t.__esModule=!0,t.SPBblLanguagesMenu=void 0;var n=function(a){function u(e){var t=a.call(this)||this;t.builder=e,t.setCaretVisible(!0,!0);var o,n=t.builder.getLanguage();t.setIcon(u.getLanguageIcon(n));for(var i=0,l=t.builder.getLanguages();i<l.length;i++){var s=l[i];t.addItem(o=new r.SPBblMenuItem(u.getLanguageIcon(s),s.name).setData(s).setActive(!!n&&s.locale===n.locale).setVisible(!s.hidden).onClick(t.onLanguageSelect.bind(t))),o.getElem().addClass("spbbl-limit-text")}return t}return __extends(u,a),u.getLanguageIcon=function(e){var t,o=e?e.countryCode:"";switch(o){case"cs":t="rs";break;case"ct":t="es-ct";break;case"gb":t="gb-wls";break;case"gl":t="gal";break;case"us":t="uk";break;default:t=o}return"flag-icon-def flag-icon-"+t},u.prototype.onLanguageSelect=function(e){this.builder.setLanguage(e.getData())},u}(o.SPBblMenu);t.SPBblLanguagesMenu=n}),define("default_bubble_ui/SPBblMobileMainMenu",["require","exports","default_bubble_ui/SPBblMenuItem","default_bubble_ui/SPBblMenu","PluginApi/PluginTranslation","default_bubble_ui/SPBblLanguagesMenu","default_bubble_ui/SPBblSettingsMenu","default_bubble_ui/SPBblTemplateMenu"],function(e,t,n,o,i,l,s,a){"use strict";t.__esModule=!0,t.SPBblMobileMainMenu=void 0;var u=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.functionButtonMap={},t.setText(null),t.setIcon("spbbl-icon-i-menu"),t.templateMenu=new a.SPBblTemplateMenu(t.builder).addSpacer(),t.settingsMenu=new s.SPBblSettingsMenu(t.builder).setText((0,i.__)("Settings")).setIcon("icon-cog-big").setCaretVisible(!0).addSpacer(),t.settingsMenu.getTextElem().removeClass("spbbl-mobile-hidden"),t.languageMenu=new l.SPBblLanguagesMenu(t.builder).setText((0,i.__)("Languages")).setCaretVisible(!0).addSpacer(),t.helpButton=new n.SPBblMenuItem("spbbl-icon-hint",null).setTooltip((0,i.__)("Help")).setText((0,i.__)("Help")).onClick(function(){t.builder.showHelp()}).addSpacer(),t.addItem(t.templateMenu),t.addItem(t.settingsMenu),t.addItem(t.languageMenu),t.addItem(t.helpButton),t}return __extends(e,o),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPBblMenu);t.SPBblMobileMainMenu=u}),define("default_bubble_ui/SPBblElementsToolbar",["require","exports","default_bubble_ui/SPBblToolbarGroup","default_bubble_ui/SPBblMenuItem","default_bubble_ui/SPBblMenu","BuilderEvent","PluginApi/PluginTranslation"],function(e,t,d,p,c,h,m){"use strict";t.__esModule=!0,t.SPBblElementsToolbar=void 0;var o=function(){function e(e,t){var o=this;this.groupsSizes=[],this.UIButtonSize={width:80,height:80},this.pluginTBWidth=260,this.pluginTBLeft=107,this.sideOffsetTop=135,this.totalCollapsedGroupsWidth=0,this.mobile=!1,this.builder=e,this.elem=t,this.side=this.elem.parents("body").find(".spbbl-tb-side");var n=$('<div class="spbbl-tb-part"/>');this.elem.append(n),this.elem.append(this.bottom=$('<div class="spbbl-tb-bottom spbbl-tb-part spbbl-mobile-visible"/>')),this.collapseButtonMobile=new p.SPBblMenuItem("fa fa-plus",null).onClick(function(e){o.builder.hideContextMenus(),c.SPBblMenu.closeAllDropDowns(),o.setCollapsed(!o.getCollapsed())}),this.collapseButtonDesktop=new p.SPBblMenuItem("fa fa-plus",null).onClick(function(e){o.builder.hideContextMenus();var t=o.getCollapsed();c.SPBblMenu.closeAllDropDowns(),o.setCollapsed(!t,t)}),this.redoButton=new p.SPBblMenuItem("ico-tb-redo",null).setTooltip((0,m.__)("Redo")).onClick(function(){o.builder.historyRedo()}),this.undoButton=new p.SPBblMenuItem("ico-tb-undo",null).setTooltip((0,m.__)("Undo")).onClick(function(){o.builder.historyUndo()}),this.bottom.append((new d.SPBblToolbarGroup).addItem(this.undoButton).getElem().addClass("no-border"),(new d.SPBblToolbarGroup).addItem(this.collapseButtonMobile).getElem().addClass("button-bottom-collapse no-border"),(new d.SPBblToolbarGroup).addItem(this.redoButton).getElem().addClass("no-border")),this.side.prepend((new d.SPBblToolbarGroup).addItem(this.collapseButtonDesktop).getElem().addClass("spbbl-side-collapse-btn")),this.pluginButtons=new d.SPBblToolbarGroup,this.pluginButtons.setVisible(!0);var i=this;this.pluginButtons.getElem().append($("<div class='button-top-collapse spbbl-mobile-visible'><i class='fa fa-chevron-down'></i></div>").click(function(){i.builder.hideContextMenus(),c.SPBblMenu.closeAllDropDowns(),i.setCollapsed(!0)})),n.append(this.pluginButtons.getElem().addClass("spbbl-et-plugins no-border")),this.setCollapsed(!1);var l=new c.SPBblMenu;l.setInline(!0),l.getElem().addClass("no-over");for(var s=0,a=this.builder.getCompositionCollections();s<a.length;s++){var u=a[s],r=void 0;r="-"===u.name?null:new p.SPBblMenuItem(u.icon,u.name||u.id).onClick(this.onElementButtonClick.bind(this)).setEnabled(!0).setData(u.id).setDragable(!0),u.inactive&&r&&r.markEnabled(!1),l.addItem(r),r&&(r.getElem().attr("id","wb__"+u.id),r.getElem().addClass("ui-draggable"),e.bindCompositionButton({id:u.id,name:u.name,icon:u.icon,elem:r.getElem()},function(){o.mobile&&o.setCollapsed(!0),c.SPBblMenu.closeAllDropDowns()},function(){o.setCollapsed(!0)}))}var b=l.getElem().find(".spbbl-dd-item-container").detach();l.getElem().find(".spbbl-dd-scroll").append(b),this.pluginButtons.addItem(l),l.setInline(!0),l.getElem().offset(),this.setCollapsed(!0),$(window).on("resize orientationchange",function(){o.pluginTBWidth=260,o.update(!0)}),this.update(),h.GlobalEvents.on("modal.show contextmenu.show",function(e){o.setCollapsed(!0)}),h.GlobalEvents.on("modal.show contextmenu.show",function(e){o.setCollapsed(!0)}),$(document.body).on("close-all-dropdown",function(e){o.setCollapsed(!0)}),this.elem.on("touchstart touchmove touchend touchcancel",function(e){o.builder.hideContextMenus()}).on("mousedown mouseover",function(e){o.builder.hideContextMenus()}).on("click",function(e){e.ctrlKey||o.builder.unselectAll()}),$(document.body).on("touchstart mousedown",function(e){$(e.target).closest(o.elem[0]).length||$(e.target).closest(".spbbl-et-switch").length||$(e.target).closest(".spbbl-side-collapse-btn").length||$(e.target).is(".spbbl-side-collapse-btn")||o.setCollapsed(!0)}),this.onHistoryChange(),h.GlobalEvents.on("history.changed",function(){o.onHistoryChange()})}return e.prototype.getElem=function(){return this.elem},e.prototype.onElementButtonClick=function(e){var t=e.getData(),o=$(window);this.builder.addElementAt(t,o.width()/2,o.height()/2),this.setCollapsed(!0)},e.prototype.onElementDrop=function(e,t){var o=e.getData(),n=$(window);this.builder.addElementAt(o,t.offset.left+45-n.scrollLeft(),t.offset.top+30-n.scrollTop()),this.setCollapsed(!0)},e.prototype.update=function(e){var t;void 0===e&&(e=!1);for(var o=$(window).width(),n=$(window).height()-this.sideOffsetTop,i=$(".spbbl-menu-node.ui-draggable").outerWidth(!0),l=this.pluginButtons.getItems(),s=this.pluginButtons.getElem().find(".spbbl-dropdown"),a=s?Math.floor(s.outerHeight(!0)/(this.UIButtonSize.height?this.UIButtonSize.height:80)):1,u=0,r=l.length;u<r;u++)(t=l[u]).setInline(!0),t.setOneRow(1==a);return o<1100?(this.pluginButtons.getElem().addClass("mobile"),this.mobile=!0,this.pluginButtons.getElem().outerWidth("100%")):(this.pluginButtons.getElem().removeClass("mobile"),this.mobile=!1),!this.mobile&&e&&(this.pluginButtons.getElem().outerWidth(this.pluginTBWidth),this.pluginButtons.getElem().outerHeight()>n&&this.pluginButtons.getElem().outerWidth()<o-i-this.pluginTBLeft?(this.pluginTBWidth+=i,this.update(e)):this.pluginButtons.getElem().outerWidth(this.pluginTBWidth)),this},e.prototype.setVisible=function(e){return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.setCollapsed=function(e,t){return void 0===t&&(t=!1),e?(this.elem.addClass("spbbl-collapsed"),this.elem.parents("body").find(".spbbl-tb-bottom").addClass("spbbl-collapsed"),this.elem.parents("body").find(".spbbl-side-collapse-btn").addClass("spbbl-collapsed")):(this.elem.removeClass("spbbl-collapsed"),this.elem.parents("body").find(".spbbl-tb-bottom").removeClass("spbbl-collapsed"),this.elem.parents("body").find(".spbbl-side-collapse-btn").removeClass("spbbl-collapsed")),this.pluginButtons.setVisible(!e),!e&&t&&this.update(t),this},e.prototype.getCollapsed=function(){return this.elem.is(".spbbl-collapsed")},e.prototype.getPluginButtonAndGroup=function(e){for(var t=0,o=this.pluginButtons.getItems();t<o.length;t++){var n=o[t];if(n instanceof c.SPBblMenu)for(var i=0,l=n.getItems();i<l.length;i++){var s=l[i];if(s instanceof p.SPBblMenuItem)if(e===s.getData()||e===s.name||("Layout"===s.name||s.name===(0,m.__)("Layout"))&&"LayoutElement"===e||("Text"===s.name||s.name===(0,m.__)("Text"))&&"TextArea"===e||("Media"===s.name||s.name===(0,m.__)("Media"))&&"Youtube"===e||("Maps"===s.name||s.name===(0,m.__)("Maps"))&&"GoogleMaps"===e||s.name===(0,m.__)("Picture")&&"Picture"===e||s.name===(0,m.__)("Gallery")&&"Gallery"===e||s.name===(0,m.__)("Shape")&&"Shape"===e||s.name===(0,m.__)("Line")&&"Line"===e||s.name===(0,m.__)("Button")&&"Button"===e||s.name===(0,m.__)("Form")&&"Form"===e||s.name===(0,m.__)("Menu")&&"Menu"===e||s.name===(0,m.__)("Commerce")&&"StoreCart"===e||s.name===(0,m.__)("Commerce")&&"Store"===e||s.name===(0,m.__)("Languages")&&"Languages"===e)return{group:n,button:s}}}return null},e.prototype.onHistoryChange=function(){this.undoButton.setEnabled(this.builder.isHistoryUndoAvailable()),this.redoButton.setEnabled(this.builder.isHistoryRedoAvailable())},e}();t.SPBblElementsToolbar=o}),define("default_bubble_ui/SPBblBuilderToolbar",["require","exports","default_bubble_ui/SPBblPageSelector","default_bubble_ui/SPBblToolbarGroup","default_bubble_ui/SPBblBuilderModeSelector","default_bubble_ui/SPBblPreviewModeSelector","default_bubble_ui/SPBblTemplateMenu","default_bubble_ui/SPBblSettingsMenu","default_bubble_ui/SPBblMenuItem","default_bubble_ui/SPBblPublishMenu","BuilderEvent","PluginApi/PluginTranslation","default_bubble_ui/SPBblLanguagesMenu","Dialog"],function(e,t,a,b,u,r,d,p,c,h,m,g,f,v){"use strict";t.__esModule=!0,t.SPBblBuilderToolbar=void 0,v=__importDefault(v);var o=function(){function e(e,t){var o,n=this;(this.functionButtonMap={},this.builder=e,this.elem=t,this.elem.append(e.isAdminMode()?$('<div class="spbbl-logo spbbl-mobile-hidden"/>').append($('<span class="admin-mode-label"></span>').text("— ADMIN MODE —")):$('<div class="spbbl-logo spbbl-mobile-hidden"/>').append($('<div class="spbbl-logo-pad"/>').append($('<span class="logo-img"></span>').css("backgroundImage","url("+this.builder.getLogoUrl()+")")))),this.elem.append(this.left=$('<div class="spbbl-tb-left spbbl-tb-part"/>')),this.elem.append(this.right=$('<div class="spbbl-tb-right spbbl-tb-part"/>')),this.elem.append(this.side=$('<div class="spbbl-tb-side spbbl-tb-part spbbl-mobile-hidden"/>')),this.pageSelector=new a.SPBblPageSelector(this.builder),this.pageSelectorMobile=new a.SPBblPageSelector(this.builder,!0),this.builderModeSelector=e.getFeaturesetVersion()<4?new u.SPBblBuilderModeSelector(this.builder):null,this.builderModeSelectorMobile=e.getFeaturesetVersion()<4?new u.SPBblBuilderModeSelector(this.builder):null,this.previewModeSelector=new r.SPBblPreviewModeSelector(this.builder),this.templateMenu=new d.SPBblTemplateMenu(this.builder),this.templateMenuMobile=new d.SPBblTemplateMenu(this.builder),this.templateMenuMobile.getElem().addClass("spbbl-template-menu"),this.templateMenuMobile.setAutoHideLabel(!0),this.settingsMenu=new p.SPBblSettingsMenu(this.builder).setText("").setIcon("fa fa-cogs"),this.settingsMenuMobile=new p.SPBblSettingsMenu(this.builder).setText("").setIcon("icon-cog-big").setCaretVisible(!0),this.saveMenu=new h.SPBblPublishMenu(this.builder).setCaretVisible(!0,!1,!0,"fa fa-angle-down"),this.saveMenuMobile=new h.SPBblPublishMenu(this.builder).setCaretVisible(!0),this.languagesMenu=new f.SPBblLanguagesMenu(this.builder),this.helpButton=new c.SPBblMenuItem("fa fa-question",null).setTooltip((0,g.__)("Help")).onClick(function(){n.builder.showHelp(),n.builder.forwardFlowStep(6,!0)}),!e.isTestMode()&&e.isB2C()&&/\.site\.pro$/.test(e.getSiteDomain()))&&(this.domainsButton=new c.SPBblMenuItem("ico-tb-domains",null).setText((0,g.__)("Domains")).setTooltip((0,g.__)("Domains")).onClick(function(){if(!o){(o=new v.default).setTitleVisible(!1),o.addButton((0,g.__)("Close"));var t=$('<iframe src="'+e.getB2cDomainsUrl()+'" style="width: 100%; height: 130px; border: none;">');$(window).on("message",function(e){e.originalEvent.data&&"resize"===e.originalEvent.data.action&&e.originalEvent.data.value&&t.css("height",e.originalEvent.data.value+35+"px")}),o.setContent(t)}o.show()}));this.helpButtonMobile=new c.SPBblMenuItem("fa fa-question-circle-o",null).setTooltip((0,g.__)("Help")).onClick(function(){n.builder.showHelp()}),this.functionButtonMap.undo=this.undoButton=new c.SPBblMenuItem("ico-tb-undo",null).setTooltip((0,g.__)("Undo")).onClick(function(){n.builder.historyUndo()}),this.functionButtonMap.redo=this.redoButton=new c.SPBblMenuItem("ico-tb-redo",null).setTooltip((0,g.__)("Redo")).onClick(function(){n.builder.historyRedo()}),this.functionButtonMap.preview=this.showPreviewButton=new c.SPBblMenuItem(null,(0,g.__)("Preview")).setIcon("ico-tb-preview").setTooltip((0,g.__)("Preview")).onClick(function(){n.showPreviewButton.setIcon("fa fa-spinner fa-pulse"),n.builder.preview().always(function(){return n.showPreviewButton.setIcon("ico-tb-preview")})}),this.showPreviewButton.setAutoHideLabel(!0),this.showPreviewButton.getTextElem(),this.hidePreviewButton=new c.SPBblMenuItem(null,(0,g.__)("Close preview")).setIcon("fa fa-eye-slash").setTooltip((0,g.__)("Back to Editor")).onClick(function(){n.builder.hidePreview()});var i=e.getSignUpInfo();i&&(this.signUpButton=new c.SPBblMenuItem("ico-tb-sign-in",null).setAutoHideLabel(!0).setText(i.title).onClick(function(){i&&window.open(i.url)}));var l=new b.SPBblToolbarGroup;l.addItem(this.undoButton),l.addItem(this.redoButton),this.left.addClass("spbbl-mobile-hidden").append((new b.SPBblToolbarGroup).addItem(this.pageSelector).getElem().addClass("spbbl-mobile-hidden"),(new b.SPBblToolbarGroup).addItem(this.templateMenu).getElem().addClass("spbbl-mobile-hidden"),l.getElem().addClass("spbbl-mobile-hidden combined-group"),(new b.SPBblToolbarGroup).addItem(this.previewModeSelector).getElem().addClass("no-hover preview-mode-selector spbbl-mobile-hidden")),this.builderModeSelector&&this.left.append((new b.SPBblToolbarGroup).addItem(this.builderModeSelector).getElem().addClass("mode-selector spbbl-mobile-hidden"));var s=[];wb_builder.uiDef&&"object"==typeof wb_builder.uiDef&&wb_builder.uiDef.toolbars&&"object"==typeof wb_builder.uiDef.toolbars&&wb_builder.uiDef.toolbars["control-toolbar-cont"]&&"object"==typeof wb_builder.uiDef.toolbars["control-toolbar-cont"]&&wb_builder.uiDef.toolbars["control-toolbar-cont"].items&&(wb_builder.uiDef.toolbars["control-toolbar-cont"].items,1)&&(s=wb_builder.uiDef.toolbars["control-toolbar-cont"].items),this.buildUIItems(s,e),this.right.append((new b.SPBblToolbarGroup).addItem(this.pageSelectorMobile.setIcon("ico-tb-landing").setText(null).setCaretVisible(!1)).getElem().addClass("spbbl-mobile-visible"),(new b.SPBblToolbarGroup).addItem(this.templateMenuMobile).getElem().addClass("spbbl-mobile-visible")),this.builderModeSelectorMobile&&this.right.append((new b.SPBblToolbarGroup).addItem(this.builderModeSelectorMobile).getElem().addClass("mode-selector spbbl-mobile-visible")),this.right.append($('<div class="spacer"></div>'),(new b.SPBblToolbarGroup).addItem(this.settingsMenuMobile).getElem().addClass("spbbl-mobile-visible"),(new b.SPBblToolbarGroup).addItem(this.languagesMenu).getElem(),this.signUpButton?(new b.SPBblToolbarGroup).addItem(this.signUpButton).getElem():null,(new b.SPBblToolbarGroup).addItem(this.showPreviewButton).getElem(),(new b.SPBblToolbarGroup).addItem(this.hidePreviewButton).getElem().addClass("hide-preview"),(new b.SPBblToolbarGroup).addItem(this.saveMenu).getElem().addClass("no-hover spbbl-mobile-hidden"),(new b.SPBblToolbarGroup).addItem(this.saveMenuMobile).getElem().addClass("spbbl-mobile-visible")),this.settingsMenu.getElem().addClass("no-over"),this.side.append((new b.SPBblToolbarGroup).addItem(this.settingsMenu.setText("").setCaretVisible(!1).setIcon("fa fa-cogs")).getElem().addClass("spbbl-side-settings-btn"),(new b.SPBblToolbarGroup).addItem(this.helpButton).getElem().addClass("spbbl-side-help-btn")),this.saveMenu.getElem().addClass("spbbl-publish-menu"),this.saveMenuMobile.getElem().addClass("spbbl-publish-menu"),m.GlobalEvents.on("preview.show",function(){n.onPreviewVisibilityChange(!0)}),m.GlobalEvents.on("preview.hide",function(){n.onPreviewVisibilityChange(!1)}),m.GlobalEvents.on("history.changed",function(){n.onHistoryChange()}),this.elem.on("touchstart touchmove touchend touchcancel",function(e){e.stopImmediatePropagation(),n.builder.hideContextMenus()}).on("mousedown mouseover",function(){n.builder.hideContextMenus()}).on("click",function(e){e.ctrlKey||n.builder.unselectAll()}),this.onHistoryChange(),this.onPreviewVisibilityChange(!1),$(window).on("resize orientationchange",function(){n.update()}),this.update()}return e.prototype.buildUIItems=function(e,t){var n=[],o=0;this.left.children().each(function(){o+=20,n.push({order:o,elem:$(this)})});for(var i=function(e){var t=new b.SPBblToolbarGroup,o=new c.SPBblMenuItem(e.img?e.img:null,e.name?e.name:null);e.url&&o.onClick(function(){window.open(e.url)}),t.addItem(o),n.push({order:e.order,elem:t.getElem()})},l=0,s=e;l<s.length;l++){i(s[l])}n.sort(function(e,t){return e.order===t.order?0:e.order>t.order?1:-1});for(var a=0,u=n;a<u.length;a++){var r=u[a];this.left.append(r.elem)}},e.prototype.update=function(){var e=$("#builder_toolbar").outerWidth(!0);this.elem.removeClass("unfit"),e<$("#builder_toolbar .spbbl-logo").outerWidth(!0)+$("#builder_toolbar .spbbl-tb-left").outerWidth(!0)+$("#builder_toolbar .spbbl-tb-right").outerWidth()&&this.elem.addClass("unfit")},e.prototype.onHistoryChange=function(){this.undoButton.setEnabled(this.builder.isHistoryUndoAvailable()),this.redoButton.setEnabled(this.builder.isHistoryRedoAvailable())},e.prototype.onPreviewVisibilityChange=function(e){var t,o=this.builder.isComposerMode();this.builderModeSelector&&this.builderModeSelector.setVisible(!e),this.builderModeSelectorMobile&&this.builderModeSelectorMobile.setVisible(!e&&!o),this.previewModeSelector.setVisible(e),this.templateMenu.setVisible(!e&&!o),this.templateMenuMobile.setVisible(!e&&!o),this.settingsMenu.setVisible(!e),this.domainsButton&&this.domainsButton.setVisible(!e),this.settingsMenuMobile.setVisible(!e),this.helpButton.setVisible(!e&&this.builder.isHelpAvailable()&&!o),this.helpButtonMobile.setVisible(!e&&this.builder.isHelpAvailable()&&!o),this.undoButton.setVisible(!e),this.redoButton.setVisible(!e),this.showPreviewButton.setVisible(!e&&!o),this.hidePreviewButton.setVisible(e),this.languagesMenu.setVisible(!e),this.saveMenu.setVisible(!e),this.saveMenuMobile.setVisible(!e),null===(t=this.signUpButton)||void 0===t||t.setVisible(!e)},e.prototype.setVisible=function(e){return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.getElem=function(){return this.elem},e.prototype.getHidePreviewButton=function(){return this.hidePreviewButton},e.prototype.getButtonByFunction=function(e){var t=e.split("-");return"config"===t[0]?1<t.length?this.settingsMenu.getButtonByFunction(t[1]):this.settingsMenu:"change"===t[0]?1<t.length?this.templateMenu.getButtonByFunction(t[1]):this.templateMenu:this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}();t.SPBblBuilderToolbar=o}),define("default_bubble_ui/SPBblUI",["require","exports","PluginApi/UIManager","BuilderEvent","default_bubble_ui/SPBblBuilderToolbar","default_bubble_ui/SPBblElementsToolbar","PluginApi/PluginResourceLoader","PluginApi/PluginTranslation","default_bubble_ui/SPBblBuilderNotification","HelpSystem/Tooltip","default_bubble_ui/SPBblMenu"],function(e,t,o,n,p,c,i,h,m,a,l){"use strict";t.__esModule=!0;var s=function(d){function e(s){var a=d.call(this,s)||this;a.builder=s;var u=$(document.body),r=new i.PluginResourceLoader(pluginData),b="main.min.css?2020092001";return r.loadResources(["fonts.css",b,"main.html","translations.json"],function(e){var t=a.builder.getLanguage();if(t&&e["translations.json"].data&&"object"==typeof e["translations.json"].data&&e["translations.json"].data.hasOwnProperty(t.locale)&&(0,h.extendTranslations)(e["translations.json"].data[t.locale]),e["fonts.css"].data&&r.addRawStyleSheet(e["fonts.css"].data),e[b].data&&r.addRawStyleSheet(e[b].data),pluginData.customConfiguration){var o=[];if(pluginData.customConfiguration.hasOwnProperty("controlToolbarItemTextColor")&&(o.push("#builder_toolbar .spbbl-tb-group>.spbbl-menu-node>.spbbl-mn-content { color: "+pluginData.customConfiguration.controlToolbarItemTextColor+"; }"),o.push("#builder_toolbar .spbbl-dd-inline .spbbl-menu-node>.spbbl-mn-content { color: "+pluginData.customConfiguration.controlToolbarItemTextColor+"; }"),o.push("#builder_toolbar .spbbl-tb-group>.spbbl-menu-node>.spbbl-mn-content .spbbl-selected-page-name { color: "+pluginData.customConfiguration.controlToolbarItemTextColor+"; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarItemBackgroundColor")&&(o.push("#builder_toolbar .spbbl-tb-part>.spbbl-tb-group>.spbbl-menu-node>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.controlToolbarItemBackgroundColor+"; }"),o.push("#builder_toolbar .spbbl-dd-inline .spbbl-menu-node { background-color: "+pluginData.customConfiguration.controlToolbarItemBackgroundColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarActiveItemTextColor")&&(o.push("#builder_toolbar .spbbl-tb-group>.spbbl-menu-node.active:not(.disabled)>.spbbl-mn-content { color: "+pluginData.customConfiguration.controlToolbarActiveItemTextColor+"; }"),o.push("#builder_toolbar .spbbl-dd-inline .spbbl-menu-node.active:not(.disabled)>.spbbl-mn-content { color: "+pluginData.customConfiguration.controlToolbarActiveItemTextColor+"; }"),o.push("#builder_toolbar .spbbl-tb-group>.spbbl-menu-node.active:not(.disabled)>.spbbl-mn-content .spbbl-selected-page-name { color: "+pluginData.customConfiguration.controlToolbarActiveItemTextColor+"; }"),o.push(".preview-mode-selector .spbbl-menu-node .spbbl-menu-node.active:not(.disabled) .spbbl-mn-text, .preview-mode-selector .spbbl-menu-node .spbbl-menu-node.active:not(.disabled) .ico-tb-i { color: "+pluginData.customConfiguration.controlToolbarActiveItemTextColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarActiveItemBackgroundColor")&&(o.push("#builder_toolbar .spbbl-tb-part>.spbbl-tb-group>.spbbl-menu-node.active:not(.disabled)>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.controlToolbarActiveItemBackgroundColor+"; }"),o.push("#builder_toolbar .spbbl-dd-inline .spbbl-menu-node.active:not(.disabled) { background-color: "+pluginData.customConfiguration.controlToolbarActiveItemBackgroundColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarHoverItemTextColor")&&(o.push("#builder_toolbar .spbbl-tb-group>.spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { color: "+pluginData.customConfiguration.controlToolbarHoverItemTextColor+"; }"),o.push("#builder_toolbar .spbbl-dd-inline .spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { color: "+pluginData.customConfiguration.controlToolbarHoverItemTextColor+"; }"),o.push("#builder_toolbar .spbbl-tb-group>.spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content .spbbl-selected-page-name { color: "+pluginData.customConfiguration.controlToolbarHoverItemTextColor+"; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarHoverItemBackgroundColor")&&(o.push("#builder_toolbar .spbbl-tb-part>.spbbl-tb-group>.spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.controlToolbarHoverItemBackgroundColor+"; }"),o.push("#builder_toolbar .spbbl-dd-inline .spbbl-menu-node:hover:not(.disabled) { background-color: "+pluginData.customConfiguration.controlToolbarHoverItemBackgroundColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarBackgroundColor")){o.push("#builder_toolbar { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+"; }");var n=pluginData.customConfiguration.controlToolbarBackgroundColor.match(/^#([0-9A-F]{2})([0-9A-F]{2})([0-9A-F]{2})$/i),i=1;if(n)i=(.2126*parseInt(n[1],16)+.7152*parseInt(n[2],16)+.0722*parseInt(n[3],16))/255;var l=.5<i?"#232323":"#FFFFFF";o.push(".wb-tpl-dialog .modal-header .close { color: "+l+" ! important; }"),o.push(".wb-tpl-dialog .modal-header { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+"; color: "+l+"; }")}pluginData.customConfiguration.hasOwnProperty("disabledItemOpacity")&&o.push(".spbbl-menu-node.disabled>.spbbl-mn-content { opacity: "+(pluginData.customConfiguration.disabledItemOpacity/100).toFixed(3)+"; }"),pluginData.customConfiguration.hasOwnProperty("elementToolbarBackgroundColor")&&o.push("#builder_toolbar .spbbl-tb-part.spbbl-tb-side>.spbbl-tb-group>.spbbl-menu-node>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+" ! important; }"),pluginData.customConfiguration.hasOwnProperty("elementToolbarAddIconColor")&&o.push("#builder_toolbar .spbbl-tb-part.spbbl-tb-side .spbbl-side-collapse-btn .ico-tb-i { color: "+pluginData.customConfiguration.elementToolbarAddIconColor+"; }"),pluginData.customConfiguration.hasOwnProperty("elementToolbarSettingsIconColor")&&o.push("#builder_toolbar .spbbl-tb-part.spbbl-tb-side .spbbl-side-settings-btn .ico-tb-i { color: "+pluginData.customConfiguration.elementToolbarSettingsIconColor+"; }"),pluginData.customConfiguration.hasOwnProperty("elementToolbarHelpIconColor")&&o.push("#builder_toolbar .spbbl-tb-part.spbbl-tb-side .spbbl-side-help-btn .ico-tb-i { color: "+pluginData.customConfiguration.elementToolbarHelpIconColor+"; }"),pluginData.customConfiguration.hasOwnProperty("hideTextUnderIcons")&&"1"===pluginData.customConfiguration.hideTextUnderIcons&&(o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node>.spbbl-mn-content>.spbbl-mn-text { display: none; }"),o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node>.spbbl-mn-content>.ico-tb-i { margin-bottom: 0; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonTextColor")&&(o.push(".spbbl-menu-node.spbbl-publish-menu>.spbbl-mn-content { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push(".spbbl-menu-node.spbbl-publish-menu .spbbl-dropdown .spbbl-dd-scroll .spbbl-mn-content { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push("#builder_toolbar .spbbl-publish-menu .wb_badge_help { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; border-color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push(".modal-dialog:not(.wb-tpl-dialog) .modal-header, .modal-dialog:not(.wb-tpl-dialog) .modal-header .close { color: "+pluginData.customConfiguration.publishButtonTextColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonBackgroundColor")&&(o.push(".spbbl-menu-node.spbbl-publish-menu>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.publishButtonBackgroundColor+" ! important; }"),o.push(".modal-dialog:not(.wb-tpl-dialog) .modal-header { background-color: "+pluginData.customConfiguration.publishButtonBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonDropdownBackgroundColor")&&(o.push(".spbbl-menu-node.spbbl-publish-menu .spbbl-dropdown .spbbl-dd-scroll { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+" ! important; }"),o.push(".spbbl-menu-node.spbbl-publish-menu>.spbbl-mn-content .caret-box { border-left-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }"),o.push(".spbbl-menu-node.spbbl-publish-menu:hover .caret-box { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }"),o.push(".spbbl-menu-node.spbbl-publish-menu .spbbl-dd-arrow:after { border-bottom-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonDropdownBackgroundHoverColor")&&o.push(".spbbl-menu-node.spbbl-publish-menu .spbbl-dropdown .spbbl-dd-scroll .spbbl-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundHoverColor+" ! important; }"),pluginData.customConfiguration.hasOwnProperty("dropdownBackgroundColor")&&(o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline>.spbbl-dropdown>.spbbl-dd-scroll { background-color: "+pluginData.customConfiguration.dropdownBackgroundColor+"; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline)>.spbbl-dropdown>.spbbl-dd-scroll { background-color: "+pluginData.customConfiguration.dropdownBackgroundColor+"; }"),o.push(".spbbl-menu-node .spbbl-dd-arrow:after { border-bottom-color: "+pluginData.customConfiguration.dropdownBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("dropdownNormalTextColor")&&(o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node>.spbbl-mn-content { color: "+pluginData.customConfiguration.dropdownNormalTextColor+" ! important; }"),o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node>.spbbl-mn-content>.spbbl-mn-text { color: "+pluginData.customConfiguration.dropdownNormalTextColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu) .spbbl-menu-node>.spbbl-mn-content { color: "+pluginData.customConfiguration.dropdownNormalTextColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node>.spbbl-mn-content>.spbbl-mn-text, .spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node>.spbbl-mn-content>.ico-tb-i { color: "+pluginData.customConfiguration.dropdownNormalTextColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("dropdownActiveTextColor")&&(o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node.active>.spbbl-mn-content { color: "+pluginData.customConfiguration.dropdownActiveTextColor+" ! important; }"),o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node.active>.spbbl-mn-content>.spbbl-mn-text { color: "+pluginData.customConfiguration.dropdownActiveTextColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu) .spbbl-menu-node.active>.spbbl-mn-content { color: "+pluginData.customConfiguration.dropdownActiveTextColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node.active>.spbbl-mn-content>.spbbl-mn-text, .spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node.active>.spbbl-mn-content>.ico-tb-i { color: "+pluginData.customConfiguration.dropdownActiveTextColor+" ! important; }"),o.push(".spbbl-switch-input:checked+.spbbl-switch-label:after { background-color: "+pluginData.customConfiguration.dropdownActiveTextColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("dropdownHoverTextColor")&&(o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { color: "+pluginData.customConfiguration.dropdownHoverTextColor+" ! important; }"),o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content>.spbbl-mn-text { color: "+pluginData.customConfiguration.dropdownHoverTextColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu) .spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { color: "+pluginData.customConfiguration.dropdownHoverTextColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content>.spbbl-mn-text, .spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content>.ico-tb-i { color: "+pluginData.customConfiguration.dropdownHoverTextColor+" ! important; }"),o.push(".spbbl-page-selector .spbbl-ps-menu-buttons .spbbl-inner-btn:hover { color: "+pluginData.customConfiguration.dropdownHoverTextColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("dropdownHoverBackgroundColor")&&(o.push("#elements_toolbar .spbbl-menu-node.spbbl-dd-inline .spbbl-menu-node:hover:not(.disabled) { background-color: "+pluginData.customConfiguration.dropdownHoverBackgroundColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu) .spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.dropdownHoverBackgroundColor+" ! important; }"),o.push(".spbbl-menu-node:not(.spbbl-dd-inline):not(.spbbl-publish-menu)>.spbbl-dropdown>.spbbl-dd-scroll>.spbbl-dd-item-container>.spbbl-menu-node:hover:not(.disabled)>.spbbl-mn-content { background-color: "+pluginData.customConfiguration.dropdownHoverBackgroundColor+" ! important; }")),r.addRawStyleSheet(o.join("\n"))}e["main.html"].data&&u.append(e["main.html"].data),a.builderToolbar=new p.SPBblBuilderToolbar(s,$("#builder_toolbar")),a.elementsToolbar=new c.SPBblElementsToolbar(s,$("#elements_toolbar")),a.builderNotification=new m.SPBblBuilderNotification(s,$("#builder_notification")),a.builder.init($("#builder_canvas"))}),n.GlobalEvents.on("preview.show",function(){a.elementsToolbar&&a.elementsToolbar.setVisible(!1),a.builderToolbar&&a.builderToolbar.side&&a.builderToolbar.side.hide(),u.addClass("preview-mode")}),n.GlobalEvents.on("preview.hide",function(){a.elementsToolbar&&a.elementsToolbar.setVisible(!0),a.builderToolbar&&a.builderToolbar.side&&a.builderToolbar.side.show(),u.removeClass("preview-mode")}),n.GlobalEvents.on("inplaceeditor.state.changed",function(e){a.builderToolbar&&(e.active?a.builderToolbar.side.addClass("spbbl-tb-move-away"):a.builderToolbar.side.removeClass("spbbl-tb-move-away"))}),s.isAdminMode()&&$("body").addClass("admin-mode"),a}return __extends(e,d),e.prototype.lookupUIElement=function(e,t){var o=d.prototype.lookupUIElement.call(this,e,t);if(!o)switch(e){case"control":if(!this.builderToolbar)break;var n=this.builderToolbar.getButtonByFunction(t);n&&(o=new a.ScenarioStepSubject(n.getElem(),null,10));break;case"plugin":if(this.elementsToolbar){var i=this.elementsToolbar.getPluginButtonAndGroup(t);if(i){this.elementsToolbar.setCollapsed(!1);var l=i.group,s=i.button;l.setOpen(!0),o=new a.ScenarioStepSubject(s.getElem(),null,10)}else o=new a.ScenarioStepSubject(this.elementsToolbar.getElem(),null,10)}break;case"preview":if(!this.builderToolbar)break;"close"===t&&(o=new a.ScenarioStepSubject(this.builderToolbar.getHidePreviewButton().getElem(),null,10))}return o},e.prototype.getToolbarHeight=function(){return this.builderToolbar?this.builderToolbar.getElem().outerHeight():0},e.prototype.closeAll=function(){d.prototype.closeAll.call(this),l.SPBblMenu.closeAllDropDowns(),this.elementsToolbar&&this.elementsToolbar.mobile&&this.elementsToolbar.setCollapsed(!0)},e}(o.UIManager);(0,o.registerUI)(pluginData.id,s)});require(["default_bubble_ui\/SPBblUI"], function(){});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"assist","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/assist","customConfiguration":null};
PluginWrapper._config.id = 'assist';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/assist\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Assist\" method=\"post\" action=\"https:\/\/{{#content.demo}}payments.demo.paysecure.ru{{\/content.demo}}{{^content.demo}}{{content.servername}}{{\/content.demo}}\/pay\/order.cfm\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"Merchant_ID\" value=\"{{content.merchantid}}\">\n\t<input type=\"hidden\" name=\"OrderAmount\" value=\"{{content.orderamount}}\">\n\t<input type=\"hidden\" name=\"OrderComment\" value=\"{{content.ordercomment}}\">\n\t<input type=\"hidden\" name=\"OrderCurrency\" value=\"{{content.ordercurrency}}\">\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"OrderNumber\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"URL_RETURN\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"URL_RETURN_OK\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"URL_RETURN_NO\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/assist/main.php';
PluginWrapper._config.active = false;

var Globals = {
	_settingsContent: null,
	_settingsDialog: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			Globals._settingsContent = '<p><strong>' + __('Page URL') + ':</strong> <a href="https://assist.ru/" target="_blank">https://assist.ru/</a></p>' +
					'<p><strong>Важно:</strong> Убедитесь, что активированы опции <em>"Перейти на страницу магазина"</em> и <em>"Возвращаться в магазин по URL для возврата"</em> в личном кабинете системы Assist.<br />' +
					'Если эти опции будут выключены, то вы не будете получать уведомления об успешных оплатах.</p></div>';
		}
		return Globals._settingsContent;
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'assist_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'assist_color.svg', name: 'coloured'},
			{id: 'assist_black.svg', name: 'black'},
			{id: 'assist_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Assist',
	id: 'assist',
	pageUrl: 'https://www.assist.ru/',
	keyFieldId: 'merchantid',
	keyField2Id: 'servername',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Server name'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'ordercomment',
	priceFieldId: 'orderamount',
	currencyFieldId: 'ordercurrency',
	globalVars: ['merchantid', 'servername', 'demo'],
	useStylesInStoreCart: true,
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'assist', true)
});
PluginWrapper.registerPlugin('assist', {
	name: 'Assist',
	element: {
		minSize: {width: 100, height: 35},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchantid', type: 'AssistMerchantId', helpText:__("Identifier from Assist"),
			get: function(data) { return data.content.merchantid; },
			set: function(value, data) {
				data.content.merchantid = value;
			}
		},
		{id: 'servername', type: 'AssistServerName', helpText:__("Server name provided by Assist support team"),
			get: function(data) { return data.content.servername; },
			set: function(value, data) {
				data.content.servername = value;
			}
		},
		{id: 'ordercomment', type: 'AssistOrderComment', helpText:__('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.ordercomment; },
			set: function(value, data) {
				data.content.ordercomment = value;
			}
		},
		{id: 'orderamount', type: 'AssistOrderAmount', helpText: __("Amount to be transferred"),
			get: function(data) { return data.content.orderamount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.orderamount = value;
			}
		},
		{id: 'ordercurrency', type: 'AssistOrderCurrency',
			get: function(data) { return data.content.ordercurrency; },
			set: function(value, data) {
				data.content.ordercurrency = value;
			}
		},
		{id: 'demo', type: 'AssistDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'assist'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID'), helpText:__("Identifier from Assist")},
						{type: 'TextField', id: 'merchantid'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Server name'), helpText:__("Server name provided by Assist support team")},
						{type: 'TextField', id: 'servername'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], columnWeightsSmall: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name'), helpText:__('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'ordercomment'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred")},
						{type: 'TextField', id: 'orderamount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'ordercurrency', options: [
							{id: 'RUB', name: 'RUB'},
							{id: 'USD', name: 'USD'},
							{id: 'EUR', name: 'EUR'},
							{id: 'BYN', name: 'BYN'},
							{id: 'AMD', name: 'AMD'},
							{id: 'AUD', name: 'AUD'},
							{id: 'AZN', name: 'AZN'},
							{id: 'BGN', name: 'BGN'},
							{id: 'BRL', name: 'BRL'},
							{id: 'CAD', name: 'CAD'},
							{id: 'CHF', name: 'CHF'},
							{id: 'CNY', name: 'CNY'},
							{id: 'CZK', name: 'CZK'},
							{id: 'DKK', name: 'DKK'},
							{id: 'GBP', name: 'GBP'},
							{id: 'HUF', name: 'HUF'},
							{id: 'INR', name: 'INR'},
							{id: 'JPY', name: 'JPY'},
							{id: 'KGS', name: 'KGS'},
							{id: 'KRW', name: 'KRW'},
							{id: 'KZT', name: 'KZT'},
							{id: 'MDL', name: 'MDL'},
							{id: 'NOK', name: 'NOK'},
							{id: 'PLN', name: 'PLN'},
							{id: 'RON', name: 'RON'},
							{id: 'SEK', name: 'SEK'},
							{id: 'SGD', name: 'SGD'},
							{id: 'TJS', name: 'TJS'},
							{id: 'TMT', name: 'TMT'},
							{id: 'TRY', name: 'TRY'},
							{id: 'UAH', name: 'UAH'},
							{id: 'UZS', name: 'UZS'},
							{id: 'ZAR', name: 'ZAR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'bottom'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'assist')
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		fields.merchantid.setText(data.content.merchantid);
		fields.servername.setText(data.content.servername);
		fields.orderamount.setText(data.content.orderamount);
		itm = fields.ordercurrency.getItemById(data.content.ordercurrency);
		fields.ordercurrency.selectItem(itm);
		fields.ordercomment.setText(data.content.ordercomment);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		data.content.merchantid = fields.merchantid.getText();
		data.content.servername = fields.servername.getText();
		data.content.orderamount = fields.orderamount.getText();
		itm = fields.ordercurrency.getSelectedItem();
		data.content.ordercurrency = itm.getOriginal().id;
		data.content.ordercomment = fields.ordercomment.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.merchantid) data.content.merchantid = '';
		if (!data.content.servername) data.content.servername = '';
		if (!data.content.orderamount) data.content.orderamount = '1';
		if (!data.content.ordercurrency) data.content.ordercurrency = 'RUB';
		if (!data.content.ordercomment) data.content.ordercomment = 'Donate';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['assist.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'assist_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"pinterest","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/pinterest","customConfiguration":null};
PluginWrapper._config.id = 'pinterest';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/pinterest\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tif (!window.wbPinterestLoaded) {\n\t\t\twindow.wbPinterestLoaded = true;\n\t\t\t$.getScript('https:\/\/assets.pinterest.com\/js\/pinit.js');\n\t\t}\n\t})();\n<\/script>\n{{\/isPublished}}\n<a {{{content.param_pindo}}}\n   {{{content.pin_size}}}\n   {{{content.pin_terse}}}\n   {{{content.pin_count}}}\n   {{{content.pin_hover}}}\n   {{{content.pin_save}}}\n   {{{content.pin_lang}}}\n   {{{content.param_large}}}\n   {{{content.param_custom_image}}}\n   {{{content.param_round}}}\n   {{{content.param_color}}}\n   {{{content.param_s_imagewidth}}}\n   {{{content.param_s_boardheight}}}\n   {{{content.param_s_boardwidth}}}\n   {{{content.pinterest_url}}}>\n    {{{content.param_follow_title}}}\n    <img {{{content.img_tag}}} src=\"{{{content.image}}}\" alt=\"\"\/>\n<\/a>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('pinterest', {
	name: 'Pinterest',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 50, height: 20},
		resizable: true,
		renderOnce: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Widget type')},
						{type: 'DropdownBox', id: 'typew',
							options: [
								{id: '#1', name: __('Save Button'), value: 1},
								{id: '#2', name: __('Follow'), value: 2},
								{id: '#3', name: __('Pin'), value: 3},
								{id: '#4', name: __('Board'), value: 4},
								{id: '#5', name: __('Profile'), value: 5}
							],
							change: function (fields) {
								var type = this.getSelectedItem().getOriginal().value;
								if (type === 1) {
									fields.language_block.setVisible(true);
									fields.follow_block.setVisible(false);
									fields.image_block.setVisible(true);
									fields.pinit_block.setVisible(true);
									fields.pin_widget_block.setVisible(false);
									fields.sizes.setVisible(false);
									fields.follow_url_input.setVisible(false);
									fields.pin_url_input.setVisible(false);
									fields.board_url_input.setVisible(false);
									fields.profile_url_input.setVisible(false);
								} else if (type === 2) {
									fields.language_block.setVisible(false);
									fields.follow_block.setVisible(true);
									fields.image_block.setVisible(false);
									fields.pinit_block.setVisible(false);
									fields.pin_widget_block.setVisible(false);
									fields.sizes.setVisible(false);
									fields.save_button_one_image.setVisible(false);
									fields.pin_count_field.setVisible(false);
									fields.follow_url_input.setVisible(true);
									fields.pin_url_input.setVisible(false);
									fields.board_url_input.setVisible(false);
									fields.profile_url_input.setVisible(false);
								} else if (type === 3) {
									fields.language_block.setVisible(false);
									fields.follow_block.setVisible(false);
									fields.pinit_block.setVisible(false);
									fields.image_block.setVisible(false);
									fields.pin_widget_block.setVisible(true);
									fields.sizes.setVisible(false);
									fields.save_button_one_image.setVisible(false);
									fields.pin_count_field.setVisible(false);
									fields.follow_url_input.setVisible(false);
									fields.pin_url_input.setVisible(true);
									fields.board_url_input.setVisible(false);
									fields.profile_url_input.setVisible(false);
								} else if (type === 4) {
									fields.language_block.setVisible(false);
									fields.follow_block.setVisible(false);
									fields.pinit_block.setVisible(false);
									fields.image_block.setVisible(false);
									fields.pin_widget_block.setVisible(false);
									fields.sizes.setVisible(true);
									fields.save_button_one_image.setVisible(false);
									fields.pin_count_field.setVisible(false);
									fields.follow_url_input.setVisible(false);
									fields.pin_url_input.setVisible(false);
									fields.board_url_input.setVisible(true);
									fields.profile_url_input.setVisible(false);
								} else if (type === 5) {
									fields.language_block.setVisible(false);
									fields.follow_block.setVisible(false);
									fields.pinit_block.setVisible(false);
									fields.image_block.setVisible(false);
									fields.pin_widget_block.setVisible(false);
									fields.sizes.setVisible(true);
									fields.save_button_one_image.setVisible(false);
									fields.pin_count_field.setVisible(false);
									fields.follow_url_input.setVisible(false);
									fields.pin_url_input.setVisible(false);
									fields.board_url_input.setVisible(false);
									fields.profile_url_input.setVisible(true);
								}
							}
						}
					]},
					{type: 'HorizontalLayout', id: 'pinit_block', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', id: 'button_type_block', children: [
							{type: 'Label', text: __('Button type')},
							{type: 'DropdownBox', id: 'type',
								options: [
									{id: 'one_image', name: __('One Image')},
									{id: 'any_image', name: __('Any Image')},
								],
								change: function (fields) {
									var type = this.getSelectedItem().getOriginal().id;
									if (type === 'one_image') {
										fields.save_button_one_image.setVisible(true);
										fields.pin_count_field.setVisible(true);
										fields.image_block.setVisible(false);
									} else if (type === 'any_image') {
										fields.save_button_one_image.setVisible(false);
										fields.pin_count_field.setVisible(false);
										fields.image_block.setVisible(true);
									} else if (type === 'image_hover') {
										fields.save_button_one_image.setVisible(false);
										fields.pin_count_field.setVisible(false);
										fields.image_block.setVisible(false);
									}
								}
							}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Large')},
							{type: 'RadioBox', id: 'large0', label: __('Yes'), group: 'large'},
							{type: 'RadioBox', id: 'large1', label: __('No'), group: 'large'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Round')},
							{type: 'RadioBox', id: 'round0', label: __('Yes'), group: 'round',
								change: function (fields) {
									fields.pin_count_field.setVisible(false);
									fields.lang_block.setVisible(false);
								}
							},
							{type: 'RadioBox', id: 'round1', label: __('No'), group: 'round',
								change: function (fields) {
									fields.pin_count_field.setVisible(true);
									fields.lang_block.setVisible(true);
								}
							}
						]}
					]},
					{type: 'HorizontalLayout', id: 'save_button_one_image', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', css: {marginTop: 15}, children: [
							{type: 'Label', text: __('Image source URL'), helpText: __('URL of the page containing image')},
							{type: 'TextField', id: 'one_image_url'}
						]},
						{type: 'VerticalLayout', css: {marginTop: 15}, children: [
							{type: 'Label', text: __('Image URL'), helpText: __('Enter image URL')},
							{type: 'TextField', id: 'one_image_image'}
						]},
						{type: 'VerticalLayout', css: {marginTop: 15}, children: [
							{type: 'Label', text: __('Description'), helpText: __('Enter image description')},
							{type: 'TextField', id: 'one_image_description'}
						]}
					]},
					{type: 'HorizontalLayout', id: 'lang_block', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', id: 'language_block', children: [
							{type: 'Label', text: __('Language')},
							{type: 'DropdownBox', id: 'language', options: [
								{id: 'default', name: __("User's Default Language")},
								{id: 'en', name: "English"},
								{id: 'cs', name: "Czech"},
								{id: 'da', name: "Danish"},
								{id: 'de', name: "German"},
								{id: 'el', name: "Greek"},
								{id: 'es', name: "Spanish"},
								{id: 'fi', name: "Finnish"},
								{id: 'fr', name: "French"},
								{id: 'hi', name: "Hindu"},
								{id: 'hu', name: "Hungarian"},
								{id: 'id', name: "Indonesian"},
								{id: 'it', name: "Italian"},
								{id: 'ja', name: "Japanese"},
								{id: 'ko', name: "Korean"},
								{id: 'ms', name: "Malaysian"},
								{id: 'nb', name: "Norwegian"},
								{id: 'nl', name: "Dutch"},
								{id: 'pl', name: "Polish"},
								{id: 'pt', name: "Portuguese"},
								{id: 'pt-br', name: "Portuguese (Brazil)"},
								{id: 'ro', name: "Romanian"},
								{id: 'ru', name: "Russian"},
								{id: 'sk', name: "Slovak"},
								{id: 'sv', name: "Swedish"},
								{id: 'tl', name: "Tagalog"},
								{id: 'th', name: "Thai"},
								{id: 'tr', name: "Turkish"},
								{id: 'uk', name: "Ukrainian"},
								{id: 'vi', name: "Vietnamese"}
							]}
						]}
					]},
					{type: 'HorizontalLayout', id: 'pin_count_field', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Show Pin Count')},
							{type: 'DropdownBox', id: 'pin_count', options: [
								{id: 'none', name: __('Not Shown')},
								{id: 'above', name: __('Above the Button')},
								{id: 'beside', name: __('Beside the Button')}
							]}
						]}
					]},
					{type: 'VerticalLayout', id: 'image_block', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Custom button image'), helpText: __('Enter image URL')},
						{type: 'TextField', id: 'custom_image'}
					]},
					{type: 'VerticalLayout', id: 'follow_url_input', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Pinterest user URL'), helpText: __('Enter URL of the profile you want to embed')},
						{type: 'TextField', id: 'follow_url'}
					]},
					{type: 'VerticalLayout', id: 'pin_url_input', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Pin URL'), helpText: __('Enter URL of the pin you want to embed')},
						{type: 'TextField', id: 'pin_url'}
					]},
					{type: 'VerticalLayout', id: 'board_url_input', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Pinterest board URL'), helpText: __('Enter URL of the board you want to embed')},
						{type: 'TextField', id: 'board_url'}
					]},
					{type: 'VerticalLayout', id: 'profile_url_input', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Pinterest user profile URL'), helpText: __('Enter URL of the profile you want to embed')},
						{type: 'TextField', id: 'profile_url'}
					]},
					{type: 'HorizontalLayout', id: 'pin_widget_block', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Pin size')},
							{type: 'DropdownBox', id: 'pin_size', options: [
								{id: 'small', name: __('Small')},
								{id: 'medium', name: __('Medium')},
								{id: 'large', name: __('Large')}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Hide description'), helpText: __('Select option to show photo description on Pinterest Pin widget')},
							{type: 'RadioBox', id: 'descriptionv0', label: __('Yes'), group: 'description_visibility'},
							{type: 'RadioBox', id: 'descriptionv1', label: __('No'), group: 'description_visibility'}
						]}
					]},
					{type: 'VerticalLayout', id: 'follow_block', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Full name'), id: 'follow_titlel', helpText: __('Enter name of the profile you want to embed')},
						{type: 'TextField', id: 'follow_title'}
					]},
					{type: 'HorizontalLayout', id: 'sizes', css: {marginTop: 15}, columnWeights: [3, 3, 3], children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Width of images')},
							{type: 'SizeSelector', id: 's_imagewidth'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Board height')},
							{type: 'SizeSelector', id: 's_boardheight'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Board width')},
							{type: 'SizeSelector', id: 's_boardwidth'}
						]}
					]}
				]}
			]}
		]
	},
	properties: [
		{id: 'widgetType', type: 'PinterestWidgetType',
			get: function(data) {return data.content.typew; },
			set: function(value, data) {
				data.content.typew = value;
				if (data.content.previousType !== value) this.setWidgetSize(data);
				data.content.previousType = value;


				if(value === 1) this.buttonOneImage(data);
				if(value === 2) this.followWidget(data);
				if(value === 3) this.pinWidget(data);
				if(value === 4) this.boardWidget(data);
				if(value === 5) this.profileWidget(data);
			}
		},
		// Save Button widget
		{id: 'pinLang', type: 'PinterestPinLanguage',
			dependencies: ['widgetType', 'buttonRound'],
			visible: function(data) {
				return (data.content.typew == 1 && !data.content.param_round_checkbox);
			},
			get: function(data) { return data.content.language; },
			set: function(value, data) {
				var lang = value;
				if(data.content.type === 'one_image') {
					if (lang === 'default' || lang === 'en') {
						lang = 'www';
					}
					if (lang === 'cs') {
						lang = 'cz';
					}
					if (lang === 'da') {
						lang = 'dk';
					}
					if (lang === 'el') {
						lang = 'gr';
					}
					if (lang === 'hi') {
						lang = 'in';
					}
					if (lang === 'ja') {
						lang = 'jp';
					}
					if (lang === 'ko') {
						lang = 'kr';
					}
					if (lang === 'nb') {
						lang = 'no';
					}
					if (lang === 'pt-br') {
						lang = 'pt';
					}
					if (lang === 'sv') {
						lang = 'se';
					}
					data.content.language = lang;
					data.content.pin_lang = 'data-pin-lang="' + value + '"';
					this.buttonOneImage(data);
				}
				if(data.content.type === 'any_image') {
					data.content.pin_lang = 'data-pin-lang="' + value + '"';
					this.buttonAnyImage(data);
				}

			}
		},
		{id: 'buttonLarge', type: 'PinterestButtonLarge',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 1;
			},
			get: function(data) { return data.content.param_large_checkbox; },
			set: function(value, data) {
				data.content.param_large_checkbox = value;
				if (data.content.type === 'one_image') this.buttonOneImage(data); this.setWidgetSize(data);
				if (data.content.type === 'any_image') this.buttonAnyImage(data); this.setWidgetSize(data);
			}
		},
		{id: 'buttonRound', type: 'PinterestButtonRound',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 1;
			},
			get: function(data) { return data.content.param_round_checkbox; },
			set: function(value, data) {
				data.content.param_round_checkbox = value;
				if (data.content.type === 'one_image') this.buttonOneImage(data); this.setWidgetSize(data);
				if (data.content.type === 'any_image') this.buttonAnyImage(data); this.setWidgetSize(data);
			}
		},
		{id: 'buttonType', type: 'PinterestButtonType',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 1;
			},
			get: function(data) { return data.content.type; },
			set: function(value, data) {
				data.content.type = value;
				if (data.content.type === 'one_image') this.buttonOneImage(data);
				if (data.content.type === 'any_image') this.buttonAnyImage(data);
			}
		},
		{id: 'customButtonImage', type: 'PinterestCustomButtonImage', helpText: __('Enter image URL'),
			dependencies: ['widgetType', 'buttonType'],
			visible: function(data) {
				return data.content.typew == 1 && data.content.type == 'any_image';
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.custom_image; },
			set: function(value, data) {
				data.content.custom_image = value;
				if (data.content.type === 'any_image') this.buttonAnyImage(data);
			}
		},
		{id: 'showPin', type: 'PinterestShowPinCount',
			dependencies: ['widgetType', 'buttonRound'],
			visible: function(data) {
				return (data.content.typew == 1 && !data.content.param_round_checkbox);
			},
			get: function(data) { return data.content.pin_count_value; },
			set: function(value, data) {
				data.content.pin_count_value = value;
				if (value === "above") {
					data.content.pin_count = 'data-pin-count="above"';
				}
				if (value === "beside") {
					data.content.pin_count = 'data-pin-count="beside"';
				}
				this.buttonOneImage(data);
			}
		},
		{id: 'oneImageUrl', type: 'PinterestOneImageUrl', helpText: __('URL of the page containing image'),
			dependencies: ['widgetType', 'buttonType'],
			visible: function(data) {
				return data.content.typew == 1 && data.content.type == 'one_image';
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.one_image_url; },
			set: function(value, data) {
				data.content.one_image_url = value;
				this.buttonOneImage(data);
			}
		},
		{id: 'oneImageImage', type: 'PinterestOneImageImage', helpText: __('Enter image URL'),
			dependencies: ['widgetType', 'buttonType'],
			visible: function(data) {
				return data.content.typew == 1 && data.content.type == 'one_image';
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.one_image_image; },
			set: function(value, data) {
				data.content.one_image_image = value;
				this.buttonOneImage(data);
			}
		},
		{id: 'oneImageDesc', type: 'PinterestOneImageDesc', helpText: __('Enter image description'),
			dependencies: ['widgetType', 'buttonType'],
			visible: function(data) {
				return data.content.typew == 1 && data.content.type == 'one_image';
			},
			get: function(data) { return data.content.one_image_description; },
			set: function(value, data) {
				data.content.one_image_description = value;
				this.buttonOneImage(data);
			}
		},


		//Widget type - Follow
		{id: 'followUrl', type: 'PinterestFollowUrl', helpText: __('Enter URL of the profile you want to embed'),
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 2;
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.follow_url; },
			set: function(value, data) {
				data.content.follow_url = value;
				this.followWidget(data);
			}
		},
		{id: 'followTitle', type: 'PinterestFollowTitle', helpText: __('Enter name of the profile you want to embed'),
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 2;
			},
			get: function(data) { return data.content.follow_title; },
			set: function(value, data) {
				data.content.follow_title = value;
				this.followWidget(data);
			}
		},


		//Widget type - Pin
		{id: 'pinUrl', type: 'PinterestPinUrl', helpText: __('Enter URL of the pin you want to embed'),
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 3;
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.pin_url; },
			set: function(value, data) {
				data.content.pin_url = value;
				this.pinWidget(data);
			}
		},
		{id: 'pinSize', type: 'PinterestPinSize',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 3;
			},
			get: function(data) { return data.content.pin_size_param; },
			set: function(value, data) {
				data.content.pin_size_param = value;
				this.setWidgetSize(data);
				this.pinWidget(data);
			}
		},
		{id: 'hideDescription', type: 'PinterestHideDescription', helpText: __('Select option to show photo description on Pinterest Pin widget'),
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 3;
			},
			get: function(data) { return data.content.description_visibility_checkbox; },
			set: function(value, data) {
				data.content.description_visibility_checkbox = value;
				// data.content.description_visibility = value ? 1 : 0;
				this.pinWidget(data);
			}
		},


		//Widget type - board
		{id: 'boardUrl', type: 'PinterestBoardUrl', helpText: __('Enter URL of the board you want to embed'),
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 4;
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.board_url; },
			set: function(value, data) {
				data.content.board_url = value;
				this.boardWidget(data);
			}
		},
		{id: 'boardHeight', type: 'PinterestBoardHeight',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 4;
			},
			get: function(data) { return data.content.s_boardheight; },
			set: function(value, data) {
				data.content.s_boardheight = value;
				this.boardWidget(data);
			}
		},
		{id: 'boardWidth', type: 'PinterestBoardWidth',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 4;
			},
			get: function(data) { return data.content.s_boardwidth; },
			set: function(value, data) {
				data.content.s_boardwidth = value;
				this.boardWidget(data);
			}
		},
		{id: 'boardImageWidth', type: 'PinterestBoardImageWidth',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 4;
			},
			get: function(data) { return data.content.s_imagewidth; },
			set: function(value, data) {
				data.content.s_imagewidth = value;
				this.boardWidget(data);
			}
		},
		//Widget type - profile
		{id: 'profileUrl', type: 'PinterestProfileUrl', helpText: __('Enter URL of the profile you want to embed'),
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 5;
			},
			validate: function(value, data, api) {
				this.checkUrl(value, api, data);
			},
			get: function(data) { return data.content.profile_url; },
			set: function(value, data) {
				data.content.profile_url = value;
				this.profileWidget(data);
			}
		},
		{id: 'profileHeight', type: 'PinterestProfileHeight',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 5;
			},
			get: function(data) { return data.content.s_boardheight; },
			set: function(value, data) {
				data.content.s_boardheight = value;
				this.profileWidget(data);
			}
		},
		{id: 'profileWidth', type: 'PinterestProfileWidth',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 5;
			},
			get: function(data) { return data.content.s_boardwidth; },
			set: function(value, data) {
				data.content.s_boardwidth = value;
				this.profileWidget(data);
			}
		},
		{id: 'profileImageWidth', type: 'PinterestProfileImageWidth',
			dependencies: ['widgetType'],
			visible: function(data) {
				return data.content.typew == 5;
			},
			get: function(data) { return data.content.s_imagewidth; },
			set: function(value, data) {
				data.content.s_imagewidth = value;
				this.profileWidget(data);
			}
		}


	],

	checkUrl: function(value, api, data) {
		if(value === '') {
			this.setWidgetSize(data, false);
			this.displayErrorMessage(false);
			api.setError('');
		}
		else if(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&\/\/=]*)/.test(value)) {
			this.setWidgetSize(data, false);
			this.displayErrorMessage(false);
			api.setError(__(''));
		}
		else  {
			this.setWidgetSize(data, true);
			this.setErrorMessage(__('Invalid URL'));
			api.setError(__('Invalid URL'));
		}
	},

	cleanPreview: function(data) {

		data.content.pinterest_url = '';
		data.content.param_follow_title = '';
		data.content.param_s_imagewidth = '';
		data.content.param_s_boardheight = '';
		data.content.param_s_boardwidth = '';
		data.content.img_tag = '';
	},

	setWidgetSize: function(data, isError) {
			var w = null, h = null;
			if (data.content.typew === 1 && !data.content.param_large_checkbox && !data.content.param_round_checkbox) {
				if (isError) {
					w = 230;
					h = 270;
				} else {
					w = 50;
					h = 20;
				}
			} else if (data.content.typew === 1 && data.content.param_large_checkbox && !data.content.param_round_checkbox) {
				if (isError) {
					w = 230;
					h = 270;
				} else {
					w = 70;
					h = 30;
				}
			} else if (data.content.typew === 1 && data.content.param_large_checkbox && data.content.param_round_checkbox) {
				if (isError) {
					w = 230;
					h = 270;
				} else {
					w = 30;
					h = 30;
				}
			} else if (data.content.typew === 1 && !data.content.param_large_checkbox && data.content.param_round_checkbox) {
				if (isError) {
					w = 230;
					h = 270;
				} else {
					w = 15;
					h = 15;
				}
			}
			else if (data.content.typew === 2) {
				if (isError) {
					w = 230;
					h = 270;
				} else {
					w = 75;
					h = 20;
				}
			} else if (data.content.typew === 3 && data.content.pin_size_param === 'small') {
				w = 230;
				h = 270;
			} else if (data.content.typew === 3 && !data.content.pin_size_param) {
				w = 230;
				h = 270;
			} else if (data.content.typew === 3 && data.content.pin_size_param === 'medium') {
				w = 350;
				h = 350;
			} else if (data.content.typew === 3 && data.content.pin_size_param === 'large') {
				w = 600;
				h = 540;
			}
			else if (data.content.typew === 4) {
				w = 730;
				h = 350;
			} else if (data.content.typew === 5) {
				w = 730;
				h = 350;
			}
			this.setSize(w, h);
	},

	profileWidget: function(data) {
		this.cleanPreview(data);
		data.content.pinterest_url = data.content.profile_url ? ('href="' + this.escapeHTML(data.content.profile_url) + '"') : 'href="https://www.pinterest.com/pinterest/"';
		data.content.param_s_imagewidth = 'data-pin-scale-width="' + data.content.s_imagewidth + '"';
		data.content.param_s_boardheight = 'data-pin-scale-height="' + data.content.s_boardheight + '"';
		data.content.param_s_boardwidth = 'data-pin-board-width="' + data.content.s_boardwidth + '"';
		data.content.param_pindo = 'data-pin-do="embedUser"';
		data.content.img_tag = 'style="display: none;"';
		this.pluginScoped.addListener(this, function () {
		});
	},

	boardWidget: function(data) {
		this.cleanPreview(data);
		data.content.pinterest_url = data.content.board_url ? ('href="' + this.escapeHTML(data.content.board_url) + '"') : 'href="https://www.pinterest.com/pinterest/official-news/"';
		data.content.param_s_imagewidth = 'data-pin-scale-width="' + data.content.s_imagewidth + '"';
		data.content.param_s_boardheight = 'data-pin-scale-height="' + data.content.s_boardheight + '"';
		data.content.param_s_boardwidth = 'data-pin-board-width="' + data.content.s_boardwidth + '"';
		data.content.param_pindo = 'data-pin-do="embedBoard"';
		data.content.img_tag = 'style="display: none;"';
		this.pluginScoped.addListener(this, function () {
		});
	},

	pinWidget: function(data) {
		this.cleanPreview(data);
		data.content.param_customimage = '';
		data.content.param_follow_title = '';
		data.content.pin_size = '';
		data.content.pin_terse = '';
		data.content.pin_save = '';
		data.content.pin_lang = '';
		data.content.pin_count = '';
		data.content.pin_hover = '';
		data.content.param_round = '';
		data.content.param_one_image_url = '';
		data.content.param_one_image_image = '';
		data.content.param_one_image_description = '';
		data.content.param_custom_image = '';
		data.content.custom_image = '';
		data.content.pinterest_url = '';
		data.content.s_imagewidth = '';
		data.content.s_boardheight = '';
		data.content.s_boardwidth = '';
		data.content.profile_url = '';
		data.content.board_url = '';
		data.content.follow_url = '';
		data.content.param_pindo = 'data-pin-do="embedPin"';
		data.content.img_tag = 'style="display: none;"';
		data.content.pin_size = 'data-pin-width="' + data.content.pin_size_param + '"';
		data.content.pinterest_url = data.content.pin_url ? ('href="' + this.escapeHTML(data.content.pin_url) + '"') : 'href="https://www.pinterest.com/pin/99360735500167749/"';
		if (data.content.description_visibility_checkbox) {
			data.content.pin_terse = 'data-pin-terse="true"';
			data.content.description_visibility = 1;
		} else {
			data.content.pin_terse = '';
			data.content.description_visibility = 0;
		}
		this.pluginScoped.addListener(this, function () {
		});
	},

	followWidget: function(data) {
		this.cleanPreview(data);
		data.content.param_pindo = 'data-pin-do="buttonFollow"';
		data.content.img_tag = 'style="display: none;"';
		data.content.param_large = '';
		data.content.param_round = '';
		data.content.pinterest_url = data.content.follow_url ? ('href="' + this.escapeHTML(data.content.follow_url) + '"') : 'href="https://www.pinterest.com/pinterest/"';
		data.content.param_follow_title = data.content.follow_title;
		this.pluginScoped.addListener(this, function () {
		});
	},
	buttonOneImage: function(data) {
		this.cleanPreview(data);
		data.content.param_round = data.content.param_round_checkbox ? 'data-pin-round="true"' : '';
		data.content.param_large = data.content.param_large_checkbox ? 'data-pin-tall="true"' : '';
		data.content.param_pindo = 'data-pin-do="buttonPin"';
		data.content.pin_lang = data.content.language ? data.content.pin_lang : 'data-pin-lang="www"';
		data.content.language = data.content.language ? data.content.language : 'www';
		data.content.pin_save = data.content.param_round_checkbox ?  'data-pin-save="false"' : 'data-pin-save="true"';
		data.content.pinterest_url = "https://" + data.content.language + ".pinterest.com/pin/create/button/?url=" + (data.content.one_image_url ? this.escapeHTML(data.content.one_image_url) : 'https://www.flickr.com/photos/kentbrew/6851755809/') + "&media=" + (data.content.one_image_image ? this.escapeHTML(data.content.one_image_image) : 'https://farm8.staticflickr.com/7027/6851755809_df5b2051c9_z.jpg') + "&description=" + this.escapeHTML(data.content.one_image_description);
		data.content.pinterest_url = 'href="' + data.content.pinterest_url + '"';
		this.pluginScoped.addListener(this, function () {
		});
	},

	buttonAnyImage: function(data) {
		this.cleanPreview(data);
		data.content.param_round = data.content.param_round_checkbox ? 'data-pin-round="true"' : '';
		data.content.param_large = data.content.param_large_checkbox ? 'data-pin-tall="true"' : '';
		data.content.param_pindo = 'data-pin-do="buttonBookmark"';
		data.content.pin_lang = data.content.pin_lang ? data.content.pin_lang : 'data-pin-lang="www"';
		data.content.pinterest_url = 'href="https://www.pinterest.com/pin/create/button/"';
		data.content.pin_save = data.content.param_round_checkbox ?  'data-pin-save="false"' : 'data-pin-save="true"';
		data.content.image = data.content.custom_image ? this.escapeHTML(data.content.custom_image) : '';
		data.content.param_custom_image = data.content.custom_image ? 'data-pin-custom="true"' : '';
		this.pluginScoped.addListener(this, function () {
		});
	},

	escapeHTML: function(value) {
		var map = {
			'&': '&amp;',
			'<': '&lt;',
			'>': '&gt;',
			'"': '&quot;',
			"'": '&#039;'
		};

		return value.replace(/[&<>"']/g, function(m) {return map[m];});
	},

	resizeTimeout: null,
	resizeStopAction: function(data, elem) {
		this.pluginScoped.addListener(this, function () {
		});
	},

	pluginScoped: {
		scriptLoaded: false,
		timer: null,
		scriptReady: false,
		listeners: [],
		addListener: function (inst, func) {
			if (typeof func === 'function') {
				if (this.scriptReady) {
					func.call(inst);
				} else {
					this.listeners.push({inst: inst, func: func});
				}
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://assets.pinterest.com/js/pinit.js', function () {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
			clearTimeout(this.timer);
			this.timer = setTimeout(function () {
				inst.updateElement(true);
				if (window.PinUtils) {
					try {
						window.PinUtils.build();
					} catch (e) {
						setTimeout(window.PinUtils.build, 100);
						console.error(e);
					}
				}
			}, 100);
		}
	},
	openAction: function (fields, data, elem) {
		var itm;
		data.content.pinterest_url = '';
		fields.custom_image.setText(data.content.custom_image);
		fields.follow_title.setText(data.content.follow_title ? data.content.follow_title : 'Pinterest');
		fields.large0.setValue(data.content.large === 1);
		fields.large1.setValue(data.content.large === 0);

		itm = fields.type.getItemById(data.content.type);
		fields.type.selectItem(itm);

		fields.follow_url.setValue(data.content.follow_url);
		fields.pin_url.setValue(data.content.pin_url);
		fields.board_url.setValue(data.content.board_url);
		fields.profile_url.setValue(data.content.profile_url);

		fields.one_image_url.setValue(data.content.one_image_url);
		fields.one_image_image.setValue(data.content.one_image_image);
		fields.one_image_description.setValue(data.content.one_image_description);

		fields.s_imagewidth.setValue(data.content.s_imagewidth);
		fields.s_boardheight.setValue(data.content.s_boardheight);
		fields.s_boardwidth.setValue(data.content.s_boardwidth);
		fields.round0.setValue(data.content.round === 1);
		fields.round1.setValue(data.content.round === 0);
		fields.round0.trigger('change');
		if (data.content.round === 1) {
			fields.pin_count_field.setVisible(false);
			fields.lang_block.setVisible(false);
		} else {
			fields.pin_count_field.setVisible(true);
			fields.lang_block.setVisible(true);
		}
		itm = fields.typew.getItemById('#' + data.content.typew);
		if (itm) {
			fields.typew.selectItem(itm);
		} else {
			fields.typew.selectItem(fields.typew.getItem(0));
		}
		fields.typew.trigger('change');

		fields.descriptionv0.setValue(data.content.description_visibility === 1);
		fields.descriptionv1.setValue(data.content.description_visibility === 0);

		if (data.content.type === 'one_image') {
			fields.image_block.setVisible(false);
		}
		if (data.content.type === 'any_image') {
			fields.save_button_one_image.setVisible(false);
			fields.pin_count_field.setVisible(false);
			fields.image_block.setVisible(true);
		}
	},
	applyAction: function (fields, data, elem) {
		var itm;
		if (fields.large0.getValue())
			data.content.large = 1;
		if (fields.large1.getValue())
			data.content.large = 0;
		if (fields.round0.getValue())
			data.content.round = 1;
		if (fields.round1.getValue())
			data.content.round = 0;
		itm = fields.typew.getSelectedItem();
		data.content.typew = itm.getOriginal().value;
		itm = fields.type.getSelectedItem();
		data.content.type = itm.getOriginal().id;
		data.content.param_customimage = '';
		data.content.follow_title = '';
		data.content.param_follow_title = '';
		data.content.pin_size = '';
		data.content.pin_terse = '';
		data.content.pin_save = '';
		data.content.pin_lang = '';
		data.content.pin_count = '';
		data.content.pin_hover = '';
		data.content.param_round = '';
		data.content.param_one_image_url = '';
		data.content.param_one_image_image = '';
		data.content.param_one_image_description = '';
		data.content.param_custom_image = '';
		data.content.custom_image = fields.custom_image.getText();
		data.content.pinterest_url = '';
		data.content.s_imagewidth = fields.s_imagewidth.getValue();
		data.content.s_boardheight = fields.s_boardheight.getValue();
		data.content.s_boardwidth = fields.s_boardwidth.getValue();
		data.content.profile_url = fields.profile_url.getValue();
		data.content.board_url = fields.board_url.getValue();
		data.content.pin_url = fields.pin_url.getValue();
		data.content.follow_url = fields.follow_url.getValue();
		if (data.content.typew === 1) { //Pin it type
			var itm = fields.type.getSelectedItem();
			var current_pin_type = itm.getOriginal().id;
			if (current_pin_type === 'one_image') {
				data.content.param_pindo = 'data-pin-do="buttonPin"';
				data.content.param_one_image_url = fields.one_image_url.getText();
				data.content.param_one_image_image = fields.one_image_image.getText();
				data.content.param_one_image_description = fields.one_image_description.getText();
				var itm = fields.language.getSelectedItem();
				data.content.pin_lang = 'data-pin-lang="' + itm.getOriginal().id + '"';
				lang = itm.getOriginal().id;
				if (lang == 'default' || lang == 'en') {
					lang = 'www';
				}
				if (lang == 'cs') {
					lang = 'cz';
				}
				if (lang == 'da') {
					lang = 'dk';
				}
				if (lang == 'el') {
					lang = 'gr';
				}
				if (lang == 'hi') {
					lang = 'in';
				}
				if (lang == 'ja') {
					lang = 'jp';
				}
				if (lang == 'ko') {
					lang = 'kr';
				}
				if (lang == 'nb') {
					lang = 'no';
				}
				if (lang == 'pt-br') {
					lang = 'pt';
				}
				if (lang == 'sv') {
					lang = 'se';
				}
				data.content.pinterest_url = "https://" + lang + ".pinterest.com/pin/create/button/?url=" + this.escapeHTML(data.content.param_one_image_url) + "&media=" + this.escapeHTML(data.content.param_one_image_image) + "&description=" + this.escapeHTML(data.content.param_one_image_description);
				data.content.pinterest_url = 'href="' + data.content.pinterest_url + '"';
				var itm = fields.pin_count.getSelectedItem();
				var pin_count = itm.getOriginal().id;
				if (pin_count === "above") {
					data.content.pin_count = 'data-pin-count="above"';
				}
				if (pin_count === "beside") {
					data.content.pin_count = 'data-pin-count="beside"';
				}
				if (data.content.round === 1) {
					data.content.param_round = 'data-pin-round="true"';
					data.content.pin_save = 'data-pin-save="false"';
				} else {
					data.content.pin_save = 'data-pin-save="true"';
				}
				if (data.content.large === 1) {
					data.content.param_large = 'data-pin-tall="true"';
				} else {
					data.content.param_large = '';
				}
			}
			if (current_pin_type === 'any_image') {
				data.content.param_pindo = 'data-pin-do="buttonBookmark"';
				var itm = fields.language.getSelectedItem();
				data.content.pin_lang = 'data-pin-lang="' + itm.getOriginal().id + '"';
				data.content.pinterest_url = 'href="https://www.pinterest.com/pin/create/button/"';
				data.content.pin_save = 'data-pin-save="true"';
				if (data.content.round === 1) {
					data.content.param_round = 'data-pin-round="true"';
					data.content.pin_save = 'data-pin-save="false"';
				} else {
					data.content.param_round = '';
				}
				if (data.content.large === 1) {
					data.content.param_large = 'data-pin-tall="true"';
				} else {
					data.content.param_large = '';
				}

				if (data.content.custom_image != '') {
					data.content.image = this.escapeHTML(data.content.custom_image);
					data.content.param_custom_image = 'data-pin-custom="true"';
				}
			}
			if (current_pin_type === 'image_hover') {
				data.content.param_pindo = '';
				data.content.pin_save = 'data-pin-save="true"';
				data.content.pin_hover = 'data-pin-hover="true"';
				data.content.pinterest_url = '';
				data.content.image = '';
			}
			data.content.param_s_imagewidth = '';
			data.content.param_s_boardheight = '';
			data.content.param_s_boardwidth = '';
		}
		if (data.content.typew === 2) { //Follow type
			data.content.param_s_imagewidth = '';
			data.content.param_s_boardheight = '';
			data.content.param_s_boardwidth = '';
			data.content.param_pindo = 'data-pin-do="buttonFollow"';
			data.content.img_tag = 'style="display: none;"';
			data.content.param_large = '';
			data.content.param_round = '';
			data.content.follow_title = fields.follow_title.getText();
			data.content.param_follow_title = fields.follow_title.getText();
			data.content.pinterest_url = 'href="' + this.escapeHTML(data.content.follow_url) + '"';
		}
		else if (data.content.typew === 3) { //Pin type
			data.content.param_s_imagewidth = '';
			data.content.param_s_boardheight = '';
			data.content.param_s_boardwidth = '';
			data.content.param_pindo = 'data-pin-do="embedPin"';
			data.content.img_tag = 'style="display: none;"';
			var itm = fields.pin_size.getSelectedItem();
			data.content.pin_size = 'data-pin-width="' + itm.getOriginal().id + '"';
			data.content.follow_title = '';
			data.content.param_large = '';
			data.content.param_round = '';
			data.content.pinterest_url = 'href="' + this.escapeHTML(data.content.pin_url) + '"';
			if (fields.descriptionv0.getValue()) {
				data.content.pin_terse = 'data-pin-terse="true"';
				data.content.description_visibility = 1;
			}
			if (fields.descriptionv1.getValue()) {
				data.content.pin_terse = '';
				data.content.description_visibility = 0;
			}
		}
		else if (data.content.typew === 4) { //Board type
			data.content.pinterest_url = 'href="' + this.escapeHTML(data.content.board_url) + '"';
			data.content.param_s_imagewidth = 'data-pin-scale-width="' + data.content.s_imagewidth + '"';
			data.content.param_s_boardheight = 'data-pin-scale-height="' + data.content.s_boardheight + '"';
			data.content.param_s_boardwidth = 'data-pin-board-width="' + data.content.s_boardwidth + '"';
			data.content.param_pindo = 'data-pin-do="embedBoard"';
			data.content.img_tag = 'style="display: none;"';
			data.content.follow_title = '';
			data.content.param_large = '';
			data.content.param_round = '';
		}
		else if (data.content.typew === 5) {
			data.content.pinterest_url = 'href="' + this.escapeHTML(data.content.profile_url) + '"';
			data.content.param_s_imagewidth = 'data-pin-scale-width="' + data.content.s_imagewidth + '"';
			data.content.param_s_boardheight = 'data-pin-scale-height="' + data.content.s_boardheight + '"';
			data.content.param_s_boardwidth = 'data-pin-board-width="' + data.content.s_boardwidth + '"';
			data.content.param_pindo = 'data-pin-do="embedUser"';
			data.content.img_tag = 'style="display: none;"';
			data.content.follow_title = '';
			data.content.param_large = '';
			data.content.param_round = '';
		}
		this.pluginScoped.addListener(this, function () {
		});
	},
	loadAction: function (data) {
		if (!data.content.previousType)
			data.content.previousType = 1;
		if (!data.content.language)
			data.content.language = '';
		if (!data.content.pin_lang)
			data.content.pin_lang = '';
		if (data.content.param_large_checkbox == null)
			data.content.param_large_checkbox = false;
		if (data.content.param_round_checkbox == null)
			data.content.param_round_checkbox = false;
		if (data.content.description_visibility_checkbox == null)
			data.content.description_visibility_checkbox = false;
		if (!data.content.pin_count_value) data.content.pin_count_value = '';



		if (!data.content.typew)
			data.content.typew = 1;
		if (!data.content.pin_save)
			data.content.pin_save = 'data-pin-save="true"';
		if (!data.content.image)
			data.content.image = '';
		if (!data.content.param_large)
			data.content.param_large = '';
		if (!data.content.param_round)
			data.content.param_round = '';
		if (!data.content.pin_size)
			data.content.pin_size = '';
		if (!data.content.pin_terse)
			data.content.pin_terse = '';
		if (!data.content.type)
			data.content.type = 'any_image';
		if (!data.content.param_pindo)
			data.content.param_pindo = 'data-pin-do="buttonBookmark"';
		if (!data.content.one_image_url)
			data.content.one_image_url = '';
		if (!data.content.one_image_image)
			data.content.one_image_image = '';
		if (!data.content.one_image_description)
			data.content.one_image_description = 'Next stop: Pinterest';
		if (!data.content.img_tag)
			data.content.img_tag = '';
		if (!data.content.param_customimage)
			data.content.param_customimage = '';
		if (!data.content.large)
			data.content.large = 0;
		if (!data.content.description_visibility)
			data.content.description_visibility = 0;
		if (!data.content.round)
			data.content.round = 0;
		if (!data.content.custom_image)
			data.content.custom_image = '';
		if (!data.content.pinterest_url)
			data.content.pinterest_url = 'href="https://pinterest.com/pin/create/button/"';
		if (!data.content.follow_title)
			data.content.follow_title = 'Pinterest';
		if (!data.content.s_imagewidth)
			data.content.s_imagewidth = 400;
		if (!data.content.s_boardheight)
			data.content.s_boardheight = 240;
		if (!data.content.s_boardwidth)
			data.content.s_boardwidth = 80;
		if (!data.content.follow_url)
			data.content.follow_url = '';
		if (!data.content.pin_url)
			data.content.pin_url = '';
		if (!data.content.board_url)
			data.content.board_url = '';
		if (!data.content.profile_url)
			data.content.profile_url = '';

		this.pluginScoped.addListener(this, function () {
		});
	},
	loadedAction: function (data, elem) {
		this.pluginScoped.addListener(this, function () {
		});
	}

});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"mercado","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/mercado","customConfiguration":null};
PluginWrapper._config.id = 'mercado';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/mercado\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Mercado\" method=\"POST\" accept-charset=\"utf-8\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"mercado_submit\" value=\"1\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"returnUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"callbackUrl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"orderId\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.unitPrice}}\" \/>\n\t<input type=\"hidden\" name=\"title\" value=\"{{content.title}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currencyId}}\" \/>\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n{{^content.store}}\n{{{requireService}}}\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/mercado/main.php';
PluginWrapper._config.active = true;
var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {	
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'mercadopago_color_horizontal.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'mercadopago_black_horizontal.svg', name: 'logo-1'},
			{id: 'mercadopago_black_vertical.svg', name: 'logo-2'},
			{id: 'mercadopago_color_horizontal.svg', name: 'logo-3'},
			{id: 'mercadopago_color_vertical.svg', name: 'logo-4'},
			{id: 'mercadopago_monochrome_horizontal.svg', name: 'logo-5'},
			{id: 'mercadopago_monochrome_vertical.svg', name: 'logo-6'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'MercadoPago',
	id: 'mercado',
	pageUrl: 'https://www.mercadopago.com/',
	keyField: __('Client ID'),
	keyFieldId: 'clientId',
	keyField2: __('Secret ID'),
	keyField2Id: 'secretId',
	titleFieldId: 'label',
	nameFieldId: 'title',
	priceFieldId: 'unitPrice',
	currencyFieldId: 'currencyId',
	globalVars: ['clientId', 'secretId'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'mercado', true)
});
PluginWrapper.registerPlugin('mercado', {
	name: 'MercadoPago',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'clientId', type: 'MercadoClientId',
			get: function(data) { return data.content.clientId; },
			set: function(value, data) {
				data.content.clientId = value;
			}
		},
		{id: 'secretId', type: 'MercadoSecretId',
			get: function(data) { return data.content.secretId; },
			set: function(value, data) {
				data.content.secretId = value;
			}
		},
		{id: 'title', type: 'MercadoTitle', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.title; },
			set: function(value, data) {
				data.content.title = value;
			}
		},
		{id: 'unitPrice', type: 'MercadoUnitPrice',
			get: function(data) { return data.content.unitPrice; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.unitPrice = value;
			}
		},
		{id: 'currencyId', type: 'MercadoCurrencyId',
			get: function(data) { return data.content.currencyId; },
			set: function(value, data) {
				data.content.currencyId = value;
			}
		},
	], Globals.getLogosList(), 'mercado'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Client ID')},
							{type: 'TextField', id: 'clientId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Secret ID')},
							{type: 'TextField', id: 'secretId'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name'), helpText: __('The name of the goods. Cannot contain special symbols')},
							{type: 'TextField', id: 'title'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'unitPrice'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currencyId', options: [
								{id: '#ARS', name: 'ARS', value: 'ARS'},
								{id: '#BRL', name: 'BRL', value: 'BRL'},
								{id: '#VEF', name: 'VEF', value: 'VEF'},
								{id: '#CLP', name: 'CLP', value: 'CLP'},
								{id: '#MXN', name: 'MXN', value: 'MXN'},
								{id: '#COP', name: 'COP', value: 'COP'},
								{id: '#PEN', name: 'PEN', value: 'PEN'},
								{id: '#UYU', name: 'UYU', value: 'UYU'}
								// {id: '#USD', name: 'USD', value: 'USD'}
							]}
						]}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'mercado')
		]
	},
	openAction: function (fields, data, elem) {
		fields.clientId.setText(data.content.clientId);
		fields.secretId.setText(data.content.secretId);
		fields.title.setText(data.content.title);
		fields.unitPrice.setText(data.content.unitPrice);
		var itm;
		itm = fields.currencyId.getItemById('#' + data.content.currencyId);
		fields.currencyId.selectItem(itm);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		data.content.clientId = fields.clientId.getText();
		data.content.secretId = fields.secretId.getText();
		data.content.title = fields.title.getText();
		data.content.unitPrice = fields.unitPrice.getText();
		var itm;
		itm = fields.currencyId.getSelectedItem();
		data.content.currencyId = itm.getOriginal().value;
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.clientId) data.content.clientId = ''; // 7053461069604856
		if (!data.content.secretId) data.content.secretId = ''; // snhsL9y7Geq0nOqmM3PtEf79QkzRLLvy
		if (!data.content.title) data.content.title = ''; // Title of what you are paying for
		if (!data.content.unitPrice) data.content.unitPrice = '1'; // 10.20
		if (!data.content.currencyId) data.content.currencyId = 'ARS';
		if (['mercado pago bh.svg', 'mercado pago bv.svg', 'mercado pago ch.svg', 'mercado pago cv.svg', 'mercado pago mh.svg',
			'mercado pago mv.svg', 'mercado pago wh.svg', 'mercado pago wv.svg', 'a1.svg', 'a2.svg', 'a3.svg', 'b1.svg', 'b2.svg','b3.svg',].indexOf(data.content.logo) > -1) {
			data.content.logo = 'mercadopago_black_horizontal.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"vimeo","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/vimeo","customConfiguration":null};
PluginWrapper._config.id = 'vimeo';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/vimeo\/main.png";
PluginWrapper._config.template = "<iframe id=\"{{id}}_vimeo\" src=\"https:\/\/player.vimeo.com\/video\/{{content.finalGroupId}}?portrait={{content.portrait}}&title={{content.title}}{{#isPublished}}&autoplay={{content.autoplay}}{{\/isPublished}}&color={{content.color}}\" width=\"100%\" height=\"100%\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen><\/iframe>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('vimeo', {
	name: 'Vimeo',
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 480, height: 300},
		resizable: true,
		supportsFullWidth: true,
		supportsFullHeight: true,
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Vimeo ID or URL'),
						helpText: __('Vimeo video id or url with format https://vimeo.com/{video_id}')
					},
					{type: 'TextField', id: 'groupId', placeholder: '7976699'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Portrait'), helpText: __('Show the user’s portrait on the video')},
						{type: 'RadioBox', id: 'portrait0', label: __('Yes'), group: 'portrait'},
						{type: 'RadioBox', id: 'portrait1', label: __('No'), group: 'portrait'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Title'), helpText: __('Show the title on the video.')},
						{type: 'RadioBox', id: 'title0', label: __('Yes'), group: 'title'},
						{type: 'RadioBox', id: 'title1', label: __('No'), group: 'title'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Autoplay'), helpText: __('Play the video automatically on load.')},
						{type: 'RadioBox', id: 'autoplay0', label: __('Yes'), group: 'autoplay'},
						{type: 'RadioBox', id: 'autoplay1', label: __('No'), group: 'autoplay'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Color'), helpText: __('Specify the color of the video controls.')},
						{type: 'ColorSelector', id: 'color'}
					]}
				]}
			]}
		]
	},
	batchUpdates: true,
	properties: [
		{id: 'groupId', type: 'VimeoGroupId', helpText: __('Vimeo video id or url with format https://vimeo.com/{video_id}'),
			get: function(data) { return data.content.groupId; },
			validate: function (value, data, api) {
				this.getVideoId(value, api);
			},
			set: function(value, data) {
				var url = this.getVideoId(value);
				data.content.groupId = url ? url : value;
				data.content.finalGroupId = data.content.groupId ? data.content.groupId : '7976699';
			}
		},
		{id: 'portrait', type: 'VimeoPortrait', helpText: __('Show the user’s portrait on the video'),
			get: function(data) { return data.content.portrait; },
			set: function(value, data) {
				data.content.portrait = value;
			}
		},
		{id: 'title', type: 'VimeoTitle', helpText: __('Show the title on the video.'),
			get: function(data) { return data.content.title; },
			set: function(value, data) {
				data.content.title = value;
			}
		},
		{id: 'autoplay', type: 'VimeoAutoplay', helpText: __('Play the video automatically on load.'),
			get: function(data) { return data.content.autoplay; },
			set: function(value, data) {
				data.content.autoplay = value;
			}
		},
		{id: 'color', type: 'VimeoColor', helpText: __('Specify the color of the video controls.'),
			get: function(data) { return data.content.color; },
			set: function(value, data) {
				data.content.color = value.replace('#', '');
			}
		},
	],
	getVideoId: function(value, api) {
		var url = '';
		if (/^(\d+)$/.test(value) || /https?:\/\/(?:www\.)?vimeo.com\/(\d+)(?:$|\/)/.test(value)) {
			url = RegExp.$1;
			if (api) {
				this.displayErrorMessage(false);
				api.setError('');
			}
		} else if (api) {
			this.setErrorMessage(__('Invalid URL or ID'));
			api.setError(__('Invalid URL or ID'));
		}
		return url;
	},
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		var self = this;
		fields.groupId.setText(data.content.groupId);
		fields.portrait0.setValue(data.content.portrait === '1');
		fields.portrait1.setValue(data.content.portrait === '0');

		fields.title0.setValue(data.content.title === '1');
		fields.title1.setValue(data.content.title === '0');

		fields.autoplay0.setValue(data.content.autoplay === '1');
		fields.autoplay1.setValue(data.content.autoplay === '0');

		fields.color.setValue(data.content.color);

		fields.groupId.on('change', function(e) {
			fields.groupId.setText(self.getVideoId(e.target.value));
		});
	},
	applyAction: function(fields, data, elem) {
		if (fields.portrait0.getValue()) data.content.portrait = '1';
		if (fields.portrait1.getValue()) data.content.portrait = '0';

		if (fields.title0.getValue()) data.content.title = '1';
		if (fields.title1.getValue()) data.content.title = '0';

		if (fields.autoplay0.getValue()) data.content.autoplay = '1';
		if (fields.autoplay1.getValue()) data.content.autoplay = '0';

		data.content.color = fields.color.getValue().replace('#', '');
		data.content.groupId = fields.groupId.getText();
		data.content.finalGroupId = data.content.groupId ? data.content.groupId : '7976699';

	},
	loadAction: function (data) {
		if (!data.content.groupId) data.content.groupId = '';
		if (!data.content.portrait) data.content.portrait = '1';
		if (!data.content.title) data.content.title = '1';
		if (!data.content.autoplay) data.content.autoplay = '0';
		if (!data.content.color) data.content.color = '#00adef';
		data.content.finalGroupId = data.content.groupId ? data.content.groupId : '7976699';

	},

	supportsAutoWidth: function() {
		return false;
	},
	supportsAutoHeight: function() {
		return false;
	},

	getSupportedSizeUnits: function () {
		let sizeW = [{suffix: '', label: 'px'}, {suffix: '%', min: 1, max: 100, precision: 2, step: 1}];
		let sizeH = [{suffix: '', label: 'px'}, {suffix: '%', min: 1, max: 100, precision: 2, step: 1}];
		if( this.supportsAutoWidth() )
			sizeW.push({fixedValue: 'auto', label: __('auto')});
		if( this.supportsAutoHeight() )
			sizeH.push({fixedValue: 'auto', label: __('auto')});
		return {sizeW: sizeW, sizeH: sizeH};
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"paysera","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/paysera","customConfiguration":null};
PluginWrapper._config.id = 'paysera';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/paysera\/main.png";
PluginWrapper._config.template = "<form method=\"POST\" data-gateway-id=\"Paysera\" action=\"https:\/\/www.paysera.com\/pay\/\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\r\n\t{{#content.store}}\r\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" data-multiplier=\"100\" data-fixed-decimal=\"0\" \/>\r\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\r\n\t<input type=\"hidden\" name=\"orderid\" value=\"{transactionId}\" \/>\r\n\t<input type=\"hidden\" name=\"accepturl\" value=\"{returnUrl}\" \/>\r\n\t<input type=\"hidden\" name=\"cancelurl\" value=\"{cancelUrl}\" \/>\r\n\t<input type=\"hidden\" name=\"callbackurl\" value=\"{callbackUrl}\" \/>\r\n\t{{\/content.store}}\r\n\t{{^content.store}}\r\n\t{{{requireService}}}\r\n\t{{\/content.store}}\r\n\t{{{content.paymentGatewayButton}}}\r\n<\/form>\r\n";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/paysera/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'paysera_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'paysera_color.svg', name: 'coloured'},
			{id: 'paysera_black.svg', name: 'black'},
			{id: 'paysera_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Paysera',
	id: 'paysera',
	pageUrl: 'https://www.paysera.com/',
	keyField: __('Project ID'),
	keyFieldId: 'projectid',
	keyField2: __('Password'),
	keyField2Id: 'password',
	keyField3Id: 'test',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Project ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Password'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'paytext',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['projectid', 'password', 'test'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'paysera', true),
});
PluginWrapper.registerPlugin('paysera', {
	name: 'Paysera',
	element: {
		minSize: {width: 140, height: 30},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'projectid', type: 'PayseraProjectId', helpText: __('Unique project number'),
			get: function(data) { return data.content.projectid; },
			set: function(value, data) {
				data.content.projectid = value;
			}
		},
		{id: 'password', type: 'PayseraPassword',
			get: function(data) { return data.content.password; },
			set: function(value, data) {
				data.content.password = value;
			}
		},
		{id: 'paytext', type: 'PayseraPaytext', helpText:__('Necessary to include the following variables [order_nr] - payment number, [site_name] - site name'),
			get: function(data) { return data.content.paytext; },
			validate: function (value) {
				if (value.length > 255) {
					return (__('Text exceeds 255 symbols limit'));
				} else {
					return '';
				}
			},
			set: function(value, data) {
				data.content.paytext = value;
			}
		},
		{id: 'amount', type: 'PayseraAmount', helpText:__('Amount to be transferred'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'PayseraCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'test', type: 'PayseraTest', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.test; },
			set: function(value, data) {
				data.content.test = value;
			}
		},
	], Globals.getLogosList(), 'paysera'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Project ID'), helpText: __('Unique project number')},
							{type: 'TextField', id: 'projectid'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Password')},
							{type: 'TextField', id: 'password'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', html: '&nbsp;'},
							{type: 'CheckBox', id: 'test', label: __('Test mode'), css: {marginTop: 5},
								helpText: __('For testing purpose without real payments'),
								helpPlacement: 'top'
							}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name'), helpText:__('Necessary to include the following variables [order_nr] - payment number, [site_name] - site name')},
							{type: 'TextField', id: 'paytext'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText:__('Amount to be transferred')},
							{type: 'TextField', id: 'amount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: '#AED', name: 'AED', value: 'AED'},
								{id: '#ALL', name: 'ALL', value: 'ALL'},
								{id: '#AMD', name: 'AMD', value: 'AMD'},
								{id: '#ARS', name: 'ARS', value: 'ARS'},
								{id: '#AUD', name: 'AUD', value: 'AUD'},
								{id: '#AZN', name: 'AZN', value: 'AZN'},
								{id: '#BAM', name: 'BAM', value: 'BAM'},
								{id: '#BDT', name: 'BDT', value: 'BDT'},
								{id: '#BGN', name: 'BGN', value: 'BGN'},
								{id: '#BHD', name: 'BHD', value: 'BHD'},
								{id: '#BOB', name: 'BOB', value: 'BOB'},
								{id: '#BRL', name: 'BRL', value: 'BRL'},
								{id: '#BYN', name: 'BYN', value: 'BYN'},
								{id: '#CAD', name: 'CAD', value: 'CAD'},
								{id: '#CHF', name: 'CHF', value: 'CHF'},
								{id: '#CLP', name: 'CLP', value: 'CLP'},
								{id: '#CNY', name: 'CNY', value: 'CNY'},
								{id: '#COP', name: 'COP', value: 'COP'},
								{id: '#CRC', name: 'CRC', value: 'CRC'},
								{id: '#CVE', name: 'CVE', value: 'CVE'},
								{id: '#CZK', name: 'CZK', value: 'CZK'},
								{id: '#DKK', name: 'DKK', value: 'DKK'},
								{id: '#DOP', name: 'DOP', value: 'DOP'},
								{id: '#DZD', name: 'DZD', value: 'DZD'},
								{id: '#EGP', name: 'EGP', value: 'EGP'},
								{id: '#ETB', name: 'ETB', value: 'ETB'},
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#GBP', name: 'GBP', value: 'GBP'},
								{id: '#GEL', name: 'GEL', value: 'GEL'},
								{id: '#GNF', name: 'GNF', value: 'GNF'},
								{id: '#GTQ', name: 'GTQ', value: 'GTQ'},
								{id: '#HKD', name: 'HKD', value: 'HKD'},
								{id: '#HNL', name: 'HNL', value: 'HNL'},
								{id: '#HRK', name: 'HRK', value: 'HRK'},
								{id: '#HUF', name: 'HUF', value: 'HUF'},
								{id: '#IDR', name: 'IDR', value: 'IDR'},
								{id: '#ILS', name: 'ILS', value: 'ILS'},
								{id: '#INR', name: 'INR', value: 'INR'},
								{id: '#IQD', name: 'IQD', value: 'IQD'},
								{id: '#IRR', name: 'IRR', value: 'IRR'},
								{id: '#ISK', name: 'ISK', value: 'ISK'},
								{id: '#JOD', name: 'JOD', value: 'JOD'},
								{id: '#JPY', name: 'JPY', value: 'JPY'},
								{id: '#KES', name: 'KES', value: 'KES'},
								{id: '#KGS', name: 'KGS', value: 'KGS'},
								{id: '#KRW', name: 'KRW', value: 'KRW'},
								{id: '#KWD', name: 'KWD', value: 'KWD'},
								{id: '#KZT', name: 'KZT', value: 'KZT'},
								{id: '#LBP', name: 'LBP', value: 'LBP'},
								{id: '#LKR', name: 'LKR', value: 'LKR'},
								{id: '#MAD', name: 'MAD', value: 'MAD'},
								{id: '#MDL', name: 'MDL', value: 'MDL'},
								{id: '#MGA', name: 'MGA', value: 'MGA'},
								{id: '#MKD', name: 'MKD', value: 'MKD'},
								{id: '#MNT', name: 'MNT', value: 'MNT'},
								{id: '#MXN', name: 'MXN', value: 'MXN'},
								{id: '#MYR', name: 'MYR', value: 'MYR'},
								{id: '#MZN', name: 'MZN', value: 'MZN'},
								{id: '#NGN', name: 'NGN', value: 'NGN'},
								{id: '#NIO', name: 'NIO', value: 'NIO'},
								{id: '#NOK', name: 'NOK', value: 'NOK'},
								{id: '#NZD', name: 'NZD', value: 'NZD'},
								{id: '#OMR', name: 'OMR', value: 'OMR'},
								{id: '#PEN', name: 'PEN', value: 'PEN'},
								{id: '#PHP', name: 'PHP', value: 'PHP'},
								{id: '#PKR', name: 'PKR', value: 'PKR'},
								{id: '#PLN', name: 'PLN', value: 'PLN'},
								{id: '#PYG', name: 'PYG', value: 'PYG'},
								{id: '#QAR', name: 'QAR', value: 'QAR'},
								{id: '#RON', name: 'RON', value: 'RON'},
								{id: '#RSD', name: 'RSD', value: 'RSD'},
								{id: '#RUB', name: 'RUB', value: 'RUB'},
								{id: '#SAR', name: 'SAR', value: 'SAR'},
								{id: '#SEK', name: 'SEK', value: 'SEK'},
								{id: '#SGD', name: 'SGD', value: 'SGD'},
								{id: '#SYP', name: 'SYP', value: 'SYP'},
								{id: '#THB', name: 'THB', value: 'THB'},
								{id: '#TJS', name: 'TJS', value: 'TJS'},
								{id: '#TND', name: 'TND', value: 'TND'},
								{id: '#TRY', name: 'TRY', value: 'TRY'},
								{id: '#TWD', name: 'TWD', value: 'TWD'},
								{id: '#TZS', name: 'TZS', value: 'TZS'},
								{id: '#UAH', name: 'UAH', value: 'UAH'},
								{id: '#UGX', name: 'UGX', value: 'UGX'},
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#UYU', name: 'UYU', value: 'UYU'},
								{id: '#UZS', name: 'UZS', value: 'UZS'},
								{id: '#VEF', name: 'VEF', value: 'VEF'},
								{id: '#VND', name: 'VND', value: 'VND'},
								{id: '#XAF', name: 'XAF', value: 'XAF'},
								{id: '#XOF', name: 'XOF', value: 'XOF'},
								{id: '#YER', name: 'YER', value: 'YER'},
								{id: '#ZAR', name: 'ZAR', value: 'ZAR'}
							]}
						]}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'paysera')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.projectid.setText(data.content.projectid);
		fields.password.setText(data.content.password);
		fields.paytext.setText(data.content.paytext);
		fields.amount.setText(data.content.amount);
		fields.test.setValue(data.content.test ? true : false);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.projectid = fields.projectid.getText();
		data.content.password = fields.password.getText();
		data.content.paytext = fields.paytext.getText();
		data.content.amount = fields.amount.getText();
		data.content.test = fields.test.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.projectid)
			data.content.projectid = '';
		if (!data.content.password)
			data.content.password = '';
		if (!data.content.paytext)
			data.content.paytext = 'Payment for goods made to order [order_nr] in website [site_name]';
		if (!data.content.amount)
			data.content.amount = '1';
		if (!data.content.currency)
			data.content.currency = 'EUR';
		if (!data.content.test) data.content.test = false;
		if (['paysera.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'paysera_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"olark","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/olark","customConfiguration":null};
PluginWrapper._config.id = 'olark';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/olark\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n\t<div class=\"wb_caption smaller wb-prevent-layout-click\">\n\t\t<div>\n\t\t\t<i class=\"ico-pl-olark\"><\/i> Olark\n\t\t<\/div>\n\t<\/div>\n{{\/isPublished}}\n{{#firstOnPage}}\n<script data-cfasync=\"false\" type='text\/javascript'>\/*<![CDATA[*\/window.olark||(function(c){var f=window,d=document,l=f.location.protocol==\"https:\"?\"https:\":\"http:\",z=c.name,r=\"load\";var nt=function(){\nf[z]=function(){\n(a.s=a.s||[]).push(arguments)};var a=f[z]._={\n},q=c.methods.length;while(q--){(function(n){f[z][n]=function(){\nf[z](\"call\",n,arguments)}})(c.methods[q])}a.l=c.loader;a.i=nt;a.p={\n0:+new Date};a.P=function(u){\na.p[u]=new Date-a.p[0]};function s(){\na.P(r);f[z](r)}f.addEventListener?f.addEventListener(r,s,false):f.attachEvent(\"on\"+r,s);var ld=function(){function p(hd){\nhd=\"head\";return[\"<\",hd,\"><\/\",hd,\"><\",i,' onl' + 'oad=\"var d=',g,\";d.getElementsByTagName('head')[0].\",j,\"(d.\",h,\"('script')).\",k,\"='\",l,\"\/\/\",a.l,\"'\",'\"',\"><\/\",i,\">\"].join(\"\")}var i=\"body\",m=d[i];if(!m){\nreturn setTimeout(ld,100)}a.P(1);var j=\"appendChild\",h=\"createElement\",k=\"src\",n=d[h](\"div\"),v=n[j](d[h](z)),b=d[h](\"iframe\"),g=\"document\",e=\"domain\",o;n.style.display=\"none\";m.insertBefore(n,m.firstChild).id=z;b.frameBorder=\"0\";b.id=z+\"-loader\";if(\/MSIE[ ]+6\/.test(navigator.userAgent)){\nb.src=\"javascript:false\"}b.allowTransparency=\"true\";v[j](b);try{\nb.contentWindow[g].open()}catch(w){\nc[e]=d[e];o=\"javascript:var d=\"+g+\".open();d.domain='\"+d.domain+\"';\";b[k]=o+\"void(0);\"}try{\nvar t=b.contentWindow[g];t.write(p());t.close()}catch(x){\nb[k]=o+'d.write(\"'+p().replace(\/\"\/g,String.fromCharCode(92)+'\"')+'\");d.close();'}a.P(2)};ld()};nt()})({\nloader: \"static.olark.com\/jsclient\/loader0.js\",name:\"olark\",methods:[\"configure\",\"extend\",\"declare\",\"identify\"]});\n\/* custom configuration goes here (www.olark.com\/documentation) *\/\nolark.identify('{{content.groupId}}');\/*]]>*\/<\/script><noscript><a href=\"https:\/\/www.olark.com\/site\/{{content.groupId}}\/contact\" title=\"Contact us\" target=\"_blank\">Questions? Feedback?<\/a> powered by <a href=\"http:\/\/www.olark.com?welcome\" title=\"Olark live chat software\">Olark live chat software<\/a><\/noscript>\n{{\/firstOnPage}}\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('olark', {
    name: 'Olark',
    element: {
        minSize: {
            width: 190,
            height: 70
        },
        defaultSize: {
            width: 190,
            height: 70
        },
        resizable: false,
		supportsFullWidth: false
    },
    properties: [
        {id: 'groupId', type: 'OlarkGroupId', helpText: __('You can find your Site ID in Olark Admin Panel, Settings => Installation => "Get embed code". Enter the ID you will find at the bottom of the code inside olark.identify parentheses, i.e. "1111-222-33-4444"'),
            get: function(data) { return data.content.groupId; },
            validate: function(value) {
                if (/^([\d]*-?)*\d$/.test(value) || value == '') return '';
                else return __('This ID is incorrect');
            },
            set: function(value, data) {
                data.content.groupId = (/^([\d]*-?)*\d$/.test(value) ? value : '');
            }
        },
    ],
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [{
                type: 'VerticalLayout',
                children: [{
                    type: 'Label',
                    text: __('Site ID')
                }, {
                    type: 'TextField',
                    id: 'groupId'
                }]
            }]
        }]
    },
    resizeTimeout: null,

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.groupId.setText(data.content.groupId);
    },
    applyAction: function(fields, data, elem) {
        data.content.groupId = (/^([\d]*-?)*\d$/.test(fields.groupId.getText()) ? fields.groupId.getText() : '');
    },
    loadAction: function(data) {
        if (!data.content.groupId) data.content.groupId = '';
    },
	loadedAction: function(data, elem) {
        var thisClass = this;
        elem.parent().children('.wb_controls').on('dblclick', function() { thisClass.openProperties(); });
    }
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"7_connect","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/7_connect","customConfiguration":null};
PluginWrapper._config.id = '7_connect';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/7_connect\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n<img height=\"38\" src=\"plugins\/7_connect\/site\/gallery_gen\/7_connect\/7_connect.png\" \/>\n{{\/isPublished}}\n\n{{#content.store}}\n<form data-gateway-id=\"7Connect\" class=\"{{id}}\" method=\"get\" action=\"https:\/\/pay.7-eleven.com.ph\/transact\">\n\t<input type=\"hidden\" name=\"merchantID\" value=\"{{content.merchantID}}\">\n\t<input type=\"hidden\" name=\"merchantRef\" value=\"{{content.merchantRef}}\">\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\">\n\t<input type=\"hidden\" name=\"transactionDescription\" value=\"{{content.transactionDescription}}\">\n\t<input type=\"hidden\" name=\"token\" value=\"{{content.token}}\">\n\t<input type=\"hidden\" name=\"successURL\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"failURL\" value=\"{cancelUrl}\" \/>\n\t<button style=\"background:url('gallery_gen\/7_connect\/7_connect.png') no-repeat; background-size:contain; border: none; width:38px; height:38px\" type=\"submit\" value=\"submit\"><\/button>\n<\/form>\n{{\/content.store}}\n\n{{^content.store}}\n{{{requireService}}}\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
ElementRegister.registerPaymentGateway({
	name: __('7-Connect'),
	id: '7_connect',
	pageUrl: 'https://7-connect.philseven.com/',
	keyField: __('Merchant ID'),
	keyFieldId: 'merchantID',
	keyField2: __('Transaction Key'),
	keyField2Id: 'transactionKey',
	titleFieldId: null,
	nameFieldId: 'transactionDescription',
	priceFieldId: 'amount',
	currencyFieldId: null
});
PluginWrapper.registerPlugin('7_connect', {
	name: __('7-Connect'),
	element: {
		minSize: {width: 38, height: 38},
		defaultSize: {width: 38, height: 38},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
			tabs: [
				{children: [
					{type: 'VerticalLayout', spacing: 15, children: [
						{type: 'VerticalLayout', children: [
							{
								type: 'Label', text: __('Merchant ID'),
								helpText: __("Merchant's ID as provided by 7-CONNECT")
							},
							{type: 'TextField', id: 'merchantID'}
						]},
						{type: 'VerticalLayout', children: [
							{
								type: 'Label', text: __('Transaction Key'),
								helpText: __("TransactionKey as provided by 7-CONNECT")
							},
							{type: 'TextField', id: 'transactionKey'}
						]},
						{type: 'VerticalLayout', children: [
							{
								type: 'Label', text: __('Merchant Ref'),
								helpText: __("Merchant's Reference Number")
							},
							{type: 'TextField', id: 'merchantRef'}
						]},
						{type: 'VerticalLayout', children: [
							{
								type: 'Label', text: __('Transaction Description'),
								helpText: __("Will be shown in the customer LCD screen and payment instruction page (max of 3000 characters)")
							},
							{type: 'TextField', id: 'transactionDescription'}
						]},
						{type: 'VerticalLayout', children: [
							{
								type: 'Label', text: __('Amount'),
								helpText: __("Amount to be transferred") + ', PHP'
							},
							{type: 'TextField', id: 'amount'}
						]},
					]}
				]}
			]
	},
	openAction: function(fields, data, elem) {
		fields.merchantID.setText(data.content.merchantID);
		fields.merchantRef.setText(data.content.merchantRef);
		fields.amount.setText(data.content.amount);
		fields.transactionKey.setText(data.content.transactionKey);
		fields.transactionDescription.setText(data.content.transactionDescription);
	},
	applyAction: function(fields, data, elem) {
		data.content.transactionKey = fields.transactionKey.getText();
		data.content.merchantID = fields.merchantID.getText();
		data.content.merchantRef = fields.merchantRef.getText();
		data.content.amount = parseFloat(fields.amount.getText()).toFixed(2);
		data.content.transactionDescription = fields.transactionDescription.getText();
	},
	loadAction: function (data) {
		if (!data.content.merchantID) data.content.merchantID = ''; // 7-Eleven
		if (!data.content.merchantRef) data.content.merchantRef = ''; // 51644
		if (!data.content.amount) data.content.amount = '1'; // 49.99
		// if (!data.content.token) data.content.token = '996700bdd155a5d0e6b1398655e51c0c9cc3d90c';
		if (!data.content.transactionKey) data.content.transactionKey = ''; // 628e936f45884030ac1f34bcde9c28efa6ae9c839623b45b8942bd4490e1f05d
		if (!data.content.transactionDescription) data.content.transactionDescription = ''; // Product description
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"klarna","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/klarna","customConfiguration":null};
PluginWrapper._config.id = 'klarna';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\n\n{{#isPublished}}\n<div class=\"modal fade\" id=\"klarnaModal_{{id}}\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n                <h4 class=\"modal-title\" id=\"myModalLabel\">Klarna<\/h4>\n            <\/div>\n            <div class=\"modal-body\">\n                <form id=\"klarnaForm_{{id}}\" method=\"post\" action=\"\" data-gateway-id=\"Klarna\">\n\n                    {{^content.store}}\n                    <div class=\"form-group\">\n                        <label>{{content.__t.country}}: <span style=\"color: #c00;\">*<\/span><\/label>\n                        <select class=\"form-control\" id=\"countries\" name=\"CountriesList\" form=\"klarnaForm_{{id}}\" required=\"required\">\n                            <option value=\"AX\">\u00c5land Islands<\/option>\n                            <option value=\"AL\">Albania<\/option>\n                            <option value=\"DZ\">Algeria<\/option>\n                            <option value=\"AS\">American Samoa<\/option>\n                            <option value=\"AD\">Andorra<\/option>\n                            <option value=\"AI\">Anguilla<\/option>\n                            <option value=\"AQ\">Antarctica<\/option>\n                            <option value=\"AG\">Antigua and Barbuda<\/option>\n                            <option value=\"AR\">Argentina<\/option>\n                            <option value=\"AM\">Armenia<\/option>\n                            <option value=\"AW\">Aruba<\/option>\n                            <option value=\"AU\">Australia<\/option>\n                            <option value=\"AT\">Austria<\/option>\n                            <option value=\"AZ\">Azerbaijan<\/option>\n                            <option value=\"BS\">Bahamas<\/option>\n                            <option value=\"BH\">Bahrain<\/option>\n                            <option value=\"BD\">Bangladesh<\/option>\n                            <option value=\"BB\">Barbados<\/option>\n                            <option value=\"BY\">Belarus<\/option>\n                            <option value=\"BE\">Belgium<\/option>\n                            <option value=\"BZ\">Belize<\/option>\n                            <option value=\"BJ\">Benin<\/option>\n                            <option value=\"BM\">Bermuda<\/option>\n                            <option value=\"BT\">Bhutan<\/option>\n                            <option value=\"BO\">Bolivia<\/option>\n                            <option value=\"BA\">Bosnia and Herzegovina<\/option>\n                            <option value=\"BW\">Botswana<\/option>\n                            <option value=\"BR\">Brazil<\/option>\n                            <option value=\"BQ\">British Antarctic Territory<\/option>\n                            <option value=\"VG\">British Virgin Islands<\/option>\n                            <option value=\"BN\">Brunei<\/option>\n                            <option value=\"BG\">Bulgaria<\/option>\n                            <option value=\"BF\">Burkina Faso<\/option>\n                            <option value=\"CM\">Cameroon<\/option>\n                            <option value=\"CA\">Canada<\/option>\n                            <option value=\"CV\">Cape Verde<\/option>\n                            <option value=\"KY\">Cayman Islands<\/option>\n                            <option value=\"CF\">Central African Republic<\/option>\n                            <option value=\"CL\">Chile<\/option>\n                            <option value=\"CN\">China<\/option>\n                            <option value=\"CX\">Christmas Island<\/option>\n                            <option value=\"CO\">Colombia<\/option>\n                            <option value=\"KM\">Comoros<\/option>\n                            <option value=\"CK\">Cook Islands<\/option>\n                            <option value=\"CR\">Costa Rica<\/option>\n                            <option value=\"CI\">C\u00f4te d\u2019Ivoire<\/option>\n                            <option value=\"HR\">Croatia<\/option>\n                            <option value=\"CU\">Cuba<\/option>\n                            <option value=\"CY\">Cyprus<\/option>\n                            <option value=\"CZ\">Czech Republic<\/option>\n                            <option value=\"DK\">Denmark<\/option>\n                            <option value=\"DJ\">Djibouti<\/option>\n                            <option value=\"DM\">Dominica<\/option>\n                            <option value=\"DO\">Dominican Republic<\/option>\n                            <option value=\"EC\">Ecuador<\/option>\n                            <option value=\"EG\">Egypt<\/option>\n                            <option value=\"SV\">El Salvador<\/option>\n                            <option value=\"ER\">Eritrea<\/option>\n                            <option value=\"EE\">Estonia<\/option>\n                            <option value=\"ET\">Ethiopia<\/option>\n                            <option value=\"FK\">Falkland Islands<\/option>\n                            <option value=\"FO\">Faroe Islands<\/option>\n                            <option value=\"FJ\">Fiji<\/option>\n                            <option value=\"FI\">Finland<\/option>\n                            <option value=\"FR\">France<\/option>\n                            <option value=\"GF\">French Guiana<\/option>\n                            <option value=\"PF\">French Polynesia<\/option>\n                            <option value=\"TF\">French Southern Territories<\/option>\n                            <option value=\"GA\">Gabon<\/option>\n                            <option value=\"GM\">Gambia<\/option>\n                            <option value=\"GE\">Georgia<\/option>\n                            <option value=\"DE\">Germany<\/option>\n                            <option value=\"GH\">Ghana<\/option>\n                            <option value=\"GI\">Gibraltar<\/option>\n                            <option value=\"GR\">Greece<\/option>\n                            <option value=\"GL\">Greenland<\/option>\n                            <option value=\"GD\">Grenada<\/option>\n                            <option value=\"GP\">Guadeloupe<\/option>\n                            <option value=\"GU\">Guam<\/option>\n                            <option value=\"GT\">Guatemala<\/option>\n                            <option value=\"GG\">Guernsey<\/option>\n                            <option value=\"GN\">Guinea<\/option>\n                            <option value=\"GY\">Guyana<\/option>\n                            <option value=\"HN\">Honduras<\/option>\n                            <option value=\"HK\">Hong Kong SAR China<\/option>\n                            <option value=\"HU\">Hungary<\/option>\n                            <option value=\"IS\">Iceland<\/option>\n                            <option value=\"IN\">India<\/option>\n                            <option value=\"ID\">Indonesia<\/option>\n                            <option value=\"IE\">Ireland<\/option>\n                            <option value=\"IM\">Isle of Man<\/option>\n                            <option value=\"IL\">Israel<\/option>\n                            <option value=\"IT\">Italy<\/option>\n                            <option value=\"JM\">Jamaica<\/option>\n                            <option value=\"JP\">Japan<\/option>\n                            <option value=\"JE\">Jersey<\/option>\n                            <option value=\"JO\">Jordan<\/option>\n                            <option value=\"KZ\">Kazakhstan<\/option>\n                            <option value=\"KE\">Kenya<\/option>\n                            <option value=\"KI\">Kiribati<\/option>\n                            <option value=\"KW\">Kuwait<\/option>\n                            <option value=\"KG\">Kyrgyzstan<\/option>\n                            <option value=\"LA\">Laos<\/option>\n                            <option value=\"LV\">Latvia<\/option>\n                            <option value=\"LB\">Lebanon<\/option>\n                            <option value=\"LS\">Lesotho<\/option>\n                            <option value=\"LR\">Liberia<\/option>\n                            <option value=\"LI\">Liechtenstein<\/option>\n                            <option value=\"LT\">Lithuania<\/option>\n                            <option value=\"LU\">Luxembourg<\/option>\n                            <option value=\"MO\">Macau SAR China<\/option>\n                            <option value=\"MK\">Macedonia<\/option>\n                            <option value=\"MG\">Madagascar<\/option>\n                            <option value=\"MW\">Malawi<\/option>\n                            <option value=\"MY\">Malaysia<\/option>\n                            <option value=\"MV\">Maldives<\/option>\n                            <option value=\"ML\">Mali<\/option>\n                            <option value=\"MT\">Malta<\/option>\n                            <option value=\"MH\">Marshall Islands<\/option>\n                            <option value=\"MQ\">Martinique<\/option>\n                            <option value=\"MR\">Mauritania<\/option>\n                            <option value=\"MU\">Mauritius<\/option>\n                            <option value=\"YT\">Mayotte<\/option>\n                            <option value=\"MX\">Mexico<\/option>\n                            <option value=\"FM\">Micronesia<\/option>\n                            <option value=\"MD\">Moldova<\/option>\n                            <option value=\"MC\">Monaco<\/option>\n                            <option value=\"MN\">Mongolia<\/option>\n                            <option value=\"ME\">Montenegro<\/option>\n                            <option value=\"MA\">Morocco<\/option>\n                            <option value=\"MZ\">Mozambique<\/option>\n                            <option value=\"MM\">Myanmar [Burma]<\/option>\n                            <option value=\"NA\">Namibia<\/option>\n                            <option value=\"NR\">Nauru<\/option>\n                            <option value=\"NP\">Nepal<\/option>\n                            <option value=\"NL\">Netherlands<\/option>\n                            <option value=\"NC\">New Caledonia<\/option>\n                            <option value=\"NZ\">New Zealand<\/option>\n                            <option value=\"NI\">Nicaragua<\/option>\n                            <option value=\"NE\">Niger<\/option>\n                            <option value=\"NG\">Nigeria<\/option>\n                            <option value=\"NU\">Niue<\/option>\n                            <option value=\"NF\">Norfolk Island<\/option>\n                            <option value=\"MP\">Northern Mariana Islands<\/option>\n                            <option value=\"NO\">Norway<\/option>\n                            <option value=\"OM\">Oman<\/option>\n                            <option value=\"PK\">Pakistan<\/option>\n                            <option value=\"PW\">Palau<\/option>\n                            <option value=\"PS\">Palestinian Territories<\/option>\n                            <option value=\"PA\">Panama<\/option>\n                            <option value=\"PG\">Papua New Guinea<\/option>\n                            <option value=\"PY\">Paraguay<\/option>\n                            <option value=\"PE\">Peru<\/option>\n                            <option value=\"PH\">Philippines<\/option>\n                            <option value=\"PL\">Poland<\/option>\n                            <option value=\"PT\">Portugal<\/option>\n                            <option value=\"PR\">Puerto Rico<\/option>\n                            <option value=\"QA\">Qatar<\/option>\n                            <option value=\"RE\">R\u00e9union<\/option>\n                            <option value=\"RO\">Romania<\/option>\n                            <option value=\"RU\">Russia<\/option>\n                            <option value=\"RW\">Rwanda<\/option>\n                            <option value=\"BL\">Saint Barth\u00e9lemy<\/option>\n                            <option value=\"SH\">Saint Helena<\/option>\n                            <option value=\"KN\">Saint Kitts and Nevis<\/option>\n                            <option value=\"LC\">Saint Lucia<\/option>\n                            <option value=\"MF\">Saint Martin<\/option>\n                            <option value=\"PM\">Saint Pierre and Miquelon<\/option>\n                            <option value=\"VC\">Saint Vincent and the Grenadines<\/option>\n                            <option value=\"WS\">Samoa<\/option>\n                            <option value=\"SM\">San Marino<\/option>\n                            <option value=\"ST\">S\u00e3o Tom\u00e9 and Pr\u00edncipe<\/option>\n                            <option value=\"SA\">Saudi Arabia<\/option>\n                            <option value=\"SN\">Senegal<\/option>\n                            <option value=\"RS\">Serbia<\/option>\n                            <option value=\"SC\">Seychelles<\/option>\n                            <option value=\"SL\">Sierra Leone<\/option>\n                            <option value=\"SG\">Singapore<\/option>\n                            <option value=\"SK\">Slovakia<\/option>\n                            <option value=\"SI\">Slovenia<\/option>\n                            <option value=\"SB\">Solomon Islands<\/option>\n                            <option value=\"ZA\">South Africa<\/option>\n                            <option value=\"GS\">South Georgia and the South Sandwich Islands<\/option>\n                            <option value=\"KR\">South Korea<\/option>\n                            <option value=\"ES\">Spain<\/option>\n                            <option value=\"LK\">Sri Lanka<\/option>\n                            <option value=\"SR\">Suriname<\/option>\n                            <option value=\"SJ\">Svalbard and Jan Mayen<\/option>\n                            <option value=\"SZ\">Swaziland<\/option>\n                            <option value=\"SE\">Sweden<\/option>\n                            <option value=\"CH\">Switzerland<\/option>\n                            <option value=\"TW\">Taiwan<\/option>\n                            <option value=\"TJ\">Tajikistan<\/option>\n                            <option value=\"TZ\">Tanzania<\/option>\n                            <option value=\"TH\">Thailand<\/option>\n                            <option value=\"TL\">Timor-Leste<\/option>\n                            <option value=\"TG\">Togo<\/option>\n                            <option value=\"TK\">Tokelau<\/option>\n                            <option value=\"TO\">Tonga<\/option>\n                            <option value=\"TT\">Trinidad and Tobago<\/option>\n                            <option value=\"TR\">Turkey<\/option>\n                            <option value=\"TC\">Turks and Caicos Islands<\/option>\n                            <option value=\"TV\">Tuvalu<\/option>\n                            <option value=\"UM\">U.S. Minor Outlying Islands<\/option>\n                            <option value=\"VI\">U.S. Virgin Islands<\/option>\n                            <option value=\"UG\">Uganda<\/option>\n                            <option value=\"UA\">Ukraine<\/option>\n                            <option value=\"AE\">United Arab Emirates<\/option>\n                            <option value=\"GB\">United Kingdom<\/option>\n                            <option value=\"US\">United States<\/option>\n                            <option value=\"UY\">Uruguay<\/option>\n                            <option value=\"UZ\">Uzbekistan<\/option>\n                            <option value=\"VU\">Vanuatu<\/option>\n                            <option value=\"VA\">Vatican City<\/option>\n                            <option value=\"VN\">Vietnam<\/option>\n                            <option value=\"WF\">Wallis and Futuna<\/option>\n                            <option value=\"ZM\">Zambia<\/option>\n                            <option value=\"ZW\">Zimbabwe<\/option>\n                        <\/select>\n                    <\/div>\n                    {{\/content.store}}\n                    {{#content.store}}\n\n                    <input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n                    <input type=\"hidden\" name=\"price\" value=\"{{content.price}}\" \/>\n                    <input type=\"hidden\" name=\"currencyCode\" value=\"{{content.currencyCode}}\" \/>\n                    <input type=\"hidden\" name=\"callbackUrl\" value=\"{callbackUrl}\" \/>\n                    <input type=\"hidden\" name=\"returnUrl\" value=\"{returnUrl}\" \/>\n                    <input class=\"hidden\" type=\"submit\"\/>\n                   {{\/content.store}}\n                <\/form>\n                <div id=\"klarnaCheckoutRender_{{id}}\"><\/div>\n                <div id=\"klarnaError_{{id}}\" class=\"alert alert-danger\"><\/div>\n\n            <\/div>\n            {{^content.store}}\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\n                <button id=\"klarnaBackBtn_{{id}}\" type=\"button\" class=\"btn btn-primary\" onclick=\"showModal_{{id}}()\">{{content.__t.back}}<\/button>\n                <button id=\"klarnaNextBtn_{{id}}\" type=\"button\" class=\"btn btn-primary\" onclick=\"startPaymentFlow_{{id}}()\">{{content.__t.next}}<\/button>\n            <\/div>\n            {{\/content.store}}\n            {{#content.store}}\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close<\/button>\n            <\/div>\n            {{\/content.store}}\n        <\/div>\n    <\/div>\n<\/div>\n{{{requireService}}}\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/klarna/main.php';
PluginWrapper._config.active = true;
var Globals = {
    getDefaultStyles: function(isStore) {
		var styles = {
            button_color: '#fafafa',
            button_border: {
                color: '#fff',
                style: 'solid',
                weight: 1,
                css: { border: '1px solid #fff' },
                cssRaw: 'border: 1px solid #fff'
            },
            logo: 'klarna_dark.svg',
            font_family: 'Arial',
            font_size: 12,
            label_color: '#949494'
		};
        return isStore ? styles : $.extend(true, styles, {
            button_label: __('Pay with %s').replace('%s', ''),
            showlogo: true,
            logo_width: 110,
            button_padding: 4
        });
    },
	getLogosList: function() {
		return [
			{id: 'klarna_dark.svg', name: 'dark'},
			{id: 'klarna_light.svg', name: 'light'},
			{id: 'klarna_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

(function() {
    if (typeof window.klarna_translations === 'undefined') {
        window.klarna_translations = {
            'country': __c('Billing country'),
            'close': __c('Close'),
            'next': __c('Next'),
            'back': __c('Back'),
            'unknown_error': __c('Unknown error')
        };
    }
})();


ElementRegister.registerPaymentGateway( {
    name: 'Klarna',
    id: 'klarna',
    pageUrl: 'https://klarna.com/',
    keyField: __('Username'),
    keyFieldId: 'username',
    keyField2: __('Password'),
    keyField2Id: 'password',
    keyField4: __('Test API'),
    keyField4Id: 'isTest',
    keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,6,6], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Username'), id: 'key'},
		{type: 'TextField', placeholder: __('Password'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key4',  css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
    nameFieldId: 'itemName',
    priceFieldId: 'price',
    currencyFieldId: 'currencyCode',
    defaultStyles: Globals.getDefaultStyles(true),
    styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'klarna', true),
    globalVars: ['username', 'password', 'isTest'],
    useStylesInStoreCart: true
});

PluginWrapper.registerPlugin('klarna', {
    name: 'Klarna',
    element: {
        minSize: {width: 100, height: 50},
        defaultSize: {width: 160, height: 81},
        resizable: true
    },
    properties: PluginWrapper.paymentGatewayStylePropertiesDef([
        {id: 'username', type: 'KlarnaUsername',
            get: function(data) { return data.content.username; },
            set: function(value, data) {
                data.content.username = value;
            }
        },
        {id: 'password', type: 'KlarnaPassword',
            get: function(data) { return data.content.password; },
            set: function(value, data) {
                data.content.password = value;
            }
        },
        {id: 'itemName', type: 'KlarnaItemName', helpText: __('The name of the goods. Cannot contain special symbols'),
            get: function(data) { return data.content.itemName; },
            set: function(value, data) {
                data.content.itemName = value;
            }
        },
        {id: 'defaultCountry', type: 'KlarnaDefaultCountry',
            get: function(data) { return data.content.defaultCountry; },
            set: function(value, data) {
                data.content.defaultCountry = value;
            }
        },
        {id: 'price', type: 'KlarnaPrice',
            get: function(data) { return data.content.price; },
            validate: function(value) {
                if (/^[\d.,]+$/.test(value)) {
                    return '';
                } else {
                    return (__('Incorrect format'));
                }
            },
            set: function(value, data) {
                data.content.price = value;
            }
        },
        {id: 'taxAmount', type: 'KlarnaTaxAmount',
            get: function(data) { return data.content.taxAmount; },
            set: function(value, data) {
                data.content.taxAmount = value;
            }
        },
        {id: 'currencyCode', type: 'KlarnaCurrencyCode',
            get: function(data) { return data.content.currencyCode; },
            set: function(value, data) {
                data.content.currencyCode = value;
            }
        },
        {id: 'isTest', type: 'KlarnaIsTest', helpText: __('For testing purpose without real payments'),
            get: function(data) { return data.content.isTest; },
            set: function(value, data) {
                data.content.isTest = value;
            }
        },
    ], Globals.getLogosList(), 'klarna'),
    propertyDialog: {
        noScroll: true,
        tabs: [
            {
                children: [
                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Username')},
                                    {type: 'TextField', id: 'username'}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Password')},
                                    {type: 'TextField', id: 'password'}
                                ]
                            },
                        ]
                    },
                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Currency')},
                                    {
                                        type: 'DropdownBox', id: 'currencyCode', value: 'currencyCode',  options: [
                                            {id: 'USD', name: 'USD', value: 'USD'},
                                            {id: 'GBP', name: 'GBP', value: 'GBP'},
                                            {id: 'DKK', name: 'DKK', value: 'DKK'},
                                            {id: 'EUR', name: 'EUR', value: 'EUR'},
                                            {id: 'NOK', name: 'NOK', value: 'NOK'},
                                            {id: 'SEK', name: 'SEK', value: 'SEK'}
                                        ]
                                    }
                                ]
                            },
                        ]
                    },

                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Item Name')},
                                    {type: 'TextField', id: 'itemName'}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Price with Tax')},
                                    {type: 'TextField', id: 'price'}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Tax Amount') + ', %'},
                                    {type: 'SizeSelector', id: 'taxAmount', min: 0, max: 100}
                                ]
                            },
                        ]
                    },

                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {
                                        type: 'VerticalLayout', css: {marginTop: 15}, children: [
                                            {type: 'Label', text: __('Default billing country')},
                                            {
                                                type: 'DropdownBox', id: 'defaultCountry', value: 'defaultCountry',  options: [
                                                    {id: 'AX', value: 'AX',  name: 'Åland Islands' },
                                                    {id: 'AL', value: 'AL',  name: 'Albania' },
                                                    {id: 'DZ', value: 'DZ',  name: 'Algeria' },
                                                    {id: 'AS', value: 'AS',  name: 'American Samoa' },
                                                    {id: 'AD', value: 'AD',  name: 'Andorra' },
                                                    {id: 'AI', value: 'AI',  name: 'Anguilla' },
                                                    {id: 'AQ', value: 'AQ',  name: 'Antarctica' },
                                                    {id: 'AG', value: 'AG',  name: 'Antigua and Barbuda' },
                                                    {id: 'AR', value: 'AR',  name: 'Argentina' },
                                                    {id: 'AM', value: 'AM',  name: 'Armenia' },
                                                    {id: 'AW', value: 'AW',  name: 'Aruba' },
                                                    {id: 'AU', value: 'AU',  name: 'Australia' },
                                                    {id: 'AT', value: 'AT',  name: 'Austria' },
                                                    {id: 'AZ', value: 'AZ',  name: 'Azerbaijan' },
                                                    {id: 'BS', value: 'BS',  name: 'Bahamas' },
                                                    {id: 'BH', value: 'BH',  name: 'Bahrain' },
                                                    {id: 'BD', value: 'BD',  name: 'Bangladesh' },
                                                    {id: 'BB', value: 'BB',  name: 'Barbados' },
                                                    {id: 'BY', value: 'BY',  name: 'Belarus' },
                                                    {id: 'BE', value: 'BE',  name: 'Belgium' },
                                                    {id: 'BZ', value: 'BZ',  name: 'Belize' },
                                                    {id: 'BJ', value: 'BJ',  name: 'Benin' },
                                                    {id: 'BM', value: 'BM',  name: 'Bermuda' },
                                                    {id: 'BT', value: 'BT',  name: 'Bhutan' },
                                                    {id: 'BO', value: 'BO',  name: 'Bolivia' },
                                                    {id: 'BA', value: 'BA',  name: 'Bosnia and Herzegovina' },
                                                    {id: 'BW', value: 'BW',  name: 'Botswana' },
                                                    {id: 'BR', value: 'BR',  name: 'Brazil' },
                                                    {id: 'BQ', value: 'BQ',  name: 'British Antarctic Territory' },
                                                    {id: 'VG', value: 'VG',  name: 'British Virgin Islands' },
                                                    {id: 'BN', value: 'BN',  name: 'Brunei' },
                                                    {id: 'BG', value: 'BG',  name: 'Bulgaria' },
                                                    {id: 'BF', value: 'BF',  name: 'Burkina Faso' },
                                                    {id: 'CM', value: 'CM',  name: 'Cameroon' },
                                                    {id: 'CA', value: 'CA',  name: 'Canada' },
                                                    {id: 'CV', value: 'CV',  name: 'Cape Verde' },
                                                    {id: 'KY', value: 'KY',  name: 'Cayman Islands' },
                                                    {id: 'CF', value: 'CF',  name: 'Central African Republic' },
                                                    {id: 'CL', value: 'CL',  name: 'Chile' },
                                                    {id: 'CN', value: 'CN',  name: 'China' },
                                                    {id: 'CX', value: 'CX',  name: 'Christmas Island' },
                                                    {id: 'CO', value: 'CO',  name: 'Colombia' },
                                                    {id: 'KM', value: 'KM',  name: 'Comoros' },
                                                    {id: 'CK', value: 'CK',  name: 'Cook Islands' },
                                                    {id: 'CR', value: 'CR',  name: 'Costa Rica' },
                                                    {id: 'CI', value: 'CI',  name: 'Côte d’Ivoire' },
                                                    {id: 'HR', value: 'HR',  name: 'Croatia' },
                                                    {id: 'CU', value: 'CU',  name: 'Cuba' },
                                                    {id: 'CY', value: 'CY',  name: 'Cyprus' },
                                                    {id: 'CZ', value: 'CZ',  name: 'Czech Republic' },
                                                    {id: 'DK', value: 'DK',  name: 'Denmark' },
                                                    {id: 'DJ', value: 'DJ',  name: 'Djibouti' },
                                                    {id: 'DM', value: 'DM',  name: 'Dominica' },
                                                    {id: 'DO', value: 'DO',  name: 'Dominican Republic' },
                                                    {id: 'EC', value: 'EC',  name: 'Ecuador' },
                                                    {id: 'EG', value: 'EG',  name: 'Egypt' },
                                                    {id: 'SV', value: 'SV',  name: 'El Salvador' },
                                                    {id: 'ER', value: 'ER',  name: 'Eritrea' },
                                                    {id: 'EE', value: 'EE',  name: 'Estonia' },
                                                    {id: 'ET', value: 'ET',  name: 'Ethiopia' },
                                                    {id: 'FK', value: 'FK',  name: 'Falkland Islands' },
                                                    {id: 'FO', value: 'FO',  name: 'Faroe Islands' },
                                                    {id: 'FJ', value: 'FJ',  name: 'Fiji' },
                                                    {id: 'FI', value: 'FI',  name: 'Finland' },
                                                    {id: 'FR', value: 'FR',  name: 'France' },
                                                    {id: 'GF', value: 'GF',  name: 'French Guiana' },
                                                    {id: 'PF', value: 'PF',  name: 'French Polynesia' },
                                                    {id: 'TF', value: 'TF',  name: 'French Southern Territories' },
                                                    {id: 'GA', value: 'GA',  name: 'Gabon' },
                                                    {id: 'GM', value: 'GM',  name: 'Gambia' },
                                                    {id: 'GE', value: 'GE',  name: 'Georgia' },
                                                    {id: 'DE', value: 'DE',  name: 'Germany' },
                                                    {id: 'GH', value: 'GH',  name: 'Ghana' },
                                                    {id: 'GI', value: 'GI',  name: 'Gibraltar' },
                                                    {id: 'GR', value: 'GR',  name: 'Greece' },
                                                    {id: 'GL', value: 'GL',  name: 'Greenland' },
                                                    {id: 'GD', value: 'GD',  name: 'Grenada' },
                                                    {id: 'GP', value: 'GP',  name: 'Guadeloupe' },
                                                    {id: 'GU', value: 'GU',  name: 'Guam' },
                                                    {id: 'GT', value: 'GT',  name: 'Guatemala' },
                                                    {id: 'GG', value: 'GG',  name: 'Guernsey' },
                                                    {id: 'GN', value: 'GN',  name: 'Guinea' },
                                                    {id: 'GY', value: 'GY',  name: 'Guyana' },
                                                    {id: 'HN', value: 'HN',  name: 'Honduras' },
                                                    {id: 'HK', value: 'HK',  name: 'Hong Kong SAR China' },
                                                    {id: 'HU', value: 'HU',  name: 'Hungary' },
                                                    {id: 'IS', value: 'IS',  name: 'Iceland' },
                                                    {id: 'IN', value: 'IN',  name: 'India' },
                                                    {id: 'ID', value: 'ID',  name: 'Indonesia' },
                                                    {id: 'IE', value: 'IE',  name: 'Ireland' },
                                                    {id: 'IM', value: 'IM',  name: 'Isle of Man' },
                                                    {id: 'IL', value: 'IL',  name: 'Israel' },
                                                    {id: 'IT', value: 'IT',  name: 'Italy' },
                                                    {id: 'JM', value: 'JM',  name: 'Jamaica' },
                                                    {id: 'JP', value: 'JP',  name: 'Japan' },
                                                    {id: 'JE', value: 'JE',  name: 'Jersey' },
                                                    {id: 'JO', value: 'JO',  name: 'Jordan' },
                                                    {id: 'KZ', value: 'KZ',  name: 'Kazakhstan' },
                                                    {id: 'KE', value: 'KE',  name: 'Kenya' },
                                                    {id: 'KI', value: 'KI',  name: 'Kiribati' },
                                                    {id: 'KW', value: 'KW',  name: 'Kuwait' },
                                                    {id: 'KG', value: 'KG',  name: 'Kyrgyzstan' },
                                                    {id: 'LA', value: 'LA',  name: 'Laos' },
                                                    {id: 'LV', value: 'LV',  name: 'Latvia' },
                                                    {id: 'LB', value: 'LB',  name: 'Lebanon' },
                                                    {id: 'LS', value: 'LS',  name: 'Lesotho' },
                                                    {id: 'LR', value: 'LR',  name: 'Liberia' },
                                                    {id: 'LI', value: 'LI',  name: 'Liechtenstein' },
                                                    {id: 'LT', value: 'LT',  name: 'Lithuania' },
                                                    {id: 'LU', value: 'LU',  name: 'Luxembourg' },
                                                    {id: 'MO', value: 'MO',  name: 'Macau SAR China' },
                                                    {id: 'MK', value: 'MK',  name: 'Macedonia' },
                                                    {id: 'MG', value: 'MG',  name: 'Madagascar' },
                                                    {id: 'MW', value: 'MW',  name: 'Malawi' },
                                                    {id: 'MY', value: 'MY',  name: 'Malaysia' },
                                                    {id: 'MV', value: 'MV',  name: 'Maldives' },
                                                    {id: 'ML', value: 'ML',  name: 'Mali' },
                                                    {id: 'MT', value: 'MT',  name: 'Malta' },
                                                    {id: 'MH', value: 'MH',  name: 'Marshall Islands' },
                                                    {id: 'MQ', value: 'MQ',  name: 'Martinique' },
                                                    {id: 'MR', value: 'MR',  name: 'Mauritania' },
                                                    {id: 'MU', value: 'MU',  name: 'Mauritius' },
                                                    {id: 'YT', value: 'YT',  name: 'Mayotte' },
                                                    {id: 'MX', value: 'MX',  name: 'Mexico' },
                                                    {id: 'FM', value: 'FM',  name: 'Micronesia' },
                                                    {id: 'MD', value: 'MD',  name: 'Moldova' },
                                                    {id: 'MC', value: 'MC',  name: 'Monaco' },
                                                    {id: 'MN', value: 'MN',  name: 'Mongolia' },
                                                    {id: 'ME', value: 'ME',  name: 'Montenegro' },
                                                    {id: 'MA', value: 'MA',  name: 'Morocco' },
                                                    {id: 'MZ', value: 'MZ',  name: 'Mozambique' },
                                                    {id: 'MM', value: 'MM',  name: 'Myanmar [Burma]' },
                                                    {id: 'NA', value: 'NA',  name: 'Namibia' },
                                                    {id: 'NR', value: 'NR',  name: 'Nauru' },
                                                    {id: 'NP', value: 'NP',  name: 'Nepal' },
                                                    {id: 'NL', value: 'NL',  name: 'Netherlands' },
                                                    {id: 'NC', value: 'NC',  name: 'New Caledonia' },
                                                    {id: 'NZ', value: 'NZ',  name: 'New Zealand' },
                                                    {id: 'NI', value: 'NI',  name: 'Nicaragua' },
                                                    {id: 'NE', value: 'NE',  name: 'Niger' },
                                                    {id: 'NG', value: 'NG',  name: 'Nigeria' },
                                                    {id: 'NU', value: 'NU',  name: 'Niue' },
                                                    {id: 'NF', value: 'NF',  name: 'Norfolk Island' },
                                                    {id: 'MP', value: 'MP',  name: 'Northern Mariana Islands' },
                                                    {id: 'NO', value: 'NO',  name: 'Norway' },
                                                    {id: 'OM', value: 'OM',  name: 'Oman' },
                                                    {id: 'PK', value: 'PK',  name: 'Pakistan' },
                                                    {id: 'PW', value: 'PW',  name: 'Palau' },
                                                    {id: 'PS', value: 'PS',  name: 'Palestinian Territories' },
                                                    {id: 'PA', value: 'PA',  name: 'Panama' },
                                                    {id: 'PG', value: 'PG',  name: 'Papua New Guinea' },
                                                    {id: 'PY', value: 'PY',  name: 'Paraguay' },
                                                    {id: 'PE', value: 'PE',  name: 'Peru' },
                                                    {id: 'PH', value: 'PH',  name: 'Philippines' },
                                                    {id: 'PL', value: 'PL',  name: 'Poland' },
                                                    {id: 'PT', value: 'PT',  name: 'Portugal' },
                                                    {id: 'PR', value: 'PR',  name: 'Puerto Rico' },
                                                    {id: 'QA', value: 'QA',  name: 'Qatar' },
                                                    {id: 'RE', value: 'RE',  name: 'Réunion' },
                                                    {id: 'RO', value: 'RO',  name: 'Romania' },
                                                    {id: 'RU', value: 'RU',  name: 'Russia' },
                                                    {id: 'RW', value: 'RW',  name: 'Rwanda' },
                                                    {id: 'BL', value: 'BL',  name: 'Saint Barthélemy' },
                                                    {id: 'SH', value: 'SH',  name: 'Saint Helena' },
                                                    {id: 'KN', value: 'KN',  name: 'Saint Kitts and Nevis' },
                                                    {id: 'LC', value: 'LC',  name: 'Saint Lucia' },
                                                    {id: 'MF', value: 'MF',  name: 'Saint Martin' },
                                                    {id: 'PM', value: 'PM',  name: 'Saint Pierre and Miquelon' },
                                                    {id: 'VC', value: 'VC',  name: 'Saint Vincent and the Grenadines' },
                                                    {id: 'WS', value: 'WS',  name: 'Samoa' },
                                                    {id: 'SM', value: 'SM',  name: 'San Marino' },
                                                    {id: 'ST', value: 'ST',  name: 'São Tomé and Príncipe' },
                                                    {id: 'SA', value: 'SA',  name: 'Saudi Arabia' },
                                                    {id: 'SN', value: 'SN',  name: 'Senegal' },
                                                    {id: 'RS', value: 'RS',  name: 'Serbia' },
                                                    {id: 'SC', value: 'SC',  name: 'Seychelles' },
                                                    {id: 'SL', value: 'SL',  name: 'Sierra Leone' },
                                                    {id: 'SG', value: 'SG',  name: 'Singapore' },
                                                    {id: 'SK', value: 'SK',  name: 'Slovakia' },
                                                    {id: 'SI', value: 'SI',  name: 'Slovenia' },
                                                    {id: 'SB', value: 'SB',  name: 'Solomon Islands' },
                                                    {id: 'ZA', value: 'ZA',  name: 'South Africa' },
                                                    {id: 'GS', value: 'GS',  name: 'South Georgia and the South Sandwich Islands' },
                                                    {id: 'KR', value: 'KR',  name: 'South Korea' },
                                                    {id: 'ES', value: 'ES',  name: 'Spain' },
                                                    {id: 'LK', value: 'LK',  name: 'Sri Lanka' },
                                                    {id: 'SR', value: 'SR',  name: 'Suriname' },
                                                    {id: 'SJ', value: 'SJ',  name: 'Svalbard and Jan Mayen' },
                                                    {id: 'SZ', value: 'SZ',  name: 'Swaziland' },
                                                    {id: 'SE', value: 'SE',  name: 'Sweden' },
                                                    {id: 'CH', value: 'CH',  name: 'Switzerland' },
                                                    {id: 'TW', value: 'TW',  name: 'Taiwan' },
                                                    {id: 'TJ', value: 'TJ',  name: 'Tajikistan' },
                                                    {id: 'TZ', value: 'TZ',  name: 'Tanzania' },
                                                    {id: 'TH', value: 'TH',  name: 'Thailand' },
                                                    {id: 'TL', value: 'TL',  name: 'Timor-Leste' },
                                                    {id: 'TG', value: 'TG',  name: 'Togo' },
                                                    {id: 'TK', value: 'TK',  name: 'Tokelau' },
                                                    {id: 'TO', value: 'TO',  name: 'Tonga' },
                                                    {id: 'TT', value: 'TT',  name: 'Trinidad and Tobago' },
                                                    {id: 'TR', value: 'TR',  name: 'Turkey' },
                                                    {id: 'TC', value: 'TC',  name: 'Turks and Caicos Islands' },
                                                    {id: 'TV', value: 'TV',  name: 'Tuvalu' },
                                                    {id: 'UM', value: 'UM',  name: 'U.S. Minor Outlying Islands' },
                                                    {id: 'VI', value: 'VI',  name: 'U.S. Virgin Islands' },
                                                    {id: 'UG', value: 'UG',  name: 'Uganda' },
                                                    {id: 'UA', value: 'UA',  name: 'Ukraine' },
                                                    {id: 'AE', value: 'AE',  name: 'United Arab Emirates' },
                                                    {id: 'GB', value: 'GB',  name: 'United Kingdom' },
                                                    {id: 'US', value: 'US',  name: 'United States' },
                                                    {id: 'UY', value: 'UY',  name: 'Uruguay' },
                                                    {id: 'UZ', value: 'UZ',  name: 'Uzbekistan' },
                                                    {id: 'VU', value: 'VU',  name: 'Vanuatu' },
                                                    {id: 'VA', value: 'VA',  name: 'Vatican City' },
                                                    {id: 'VN', value: 'VN',  name: 'Vietnam' },
                                                    {id: 'WF', value: 'WF',  name: 'Wallis and Futuna' },
                                                    {id: 'ZM', value: 'ZM',  name: 'Zambia' },
                                                    {id: 'ZW', value: 'ZW',  name: 'Zimbabwe' },
                                                ]
                                            }
                                        ]
                                    },
                                ]
                            },
                        ]
                    },

                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {
                                        type: 'VerticalLayout', css: {marginTop: 15}, children: [
                                            {
                                                type: 'CheckBox',
                                                id: 'isTest',
                                                css: {display: 'inline-block'},
                                                label: __('Test mode'),
                                                init: function () {
                                                    this.getElem().attr('title', __('For testing purpose without real payments'));
                                                    this.getElem().tooltip({placement: 'right'});
                                                }
                                            }
                                        ]
                                    },
                                ]
                            },
                        ]
                    },
                ]
            },
            PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'klarna'),
        ]
    },

    openAction: function (fields, data, elem) {
        fields.username.setValue(data.content.username);
        fields.password.setValue(data.content.password);
        fields.isTest.setValue(data.content.isTest);
        fields.currencyCode.setValue(data.content.currencyCode);
        fields.itemName.setValue(data.content.itemName);
        fields.price.setValue(data.content.price);
        fields.taxAmount.setValue(data.content.taxAmount);
        fields.defaultCountry.setValue(data.content.defaultCountry);
        PluginWrapper.paymentGatewayOpenAction(fields, data);
    },
    applyAction: function (fields, data, elem) {
        data.content.username = fields.username.getValue();
        data.content.password = fields.password.getValue();
        data.content.isTest = fields.isTest.getValue();
        data.content.currencyCode = fields.currencyCode.getValue();
        data.content.itemName = fields.itemName.getValue();
        data.content.price = fields.price.getValue();
        data.content.taxAmount = fields.taxAmount.getValue();
        data.content.defaultCountry = fields.defaultCountry.getValue();
        PluginWrapper.paymentGatewayApplyAction(fields, data, elem);
    },
    loadAction: function (data) {
        data.content.__t = window.klarna_translations;
        data.content.__globalVars = ['username', 'password', 'isTest'];
        if (!data.content.username)
            data.content.username = '';
        if (!data.content.password)
            data.content.password = '';
        if(!data.content.itemName)
            data.content.itemName = '';
        if(!data.content.price)
            data.content.price = '';
        if(!data.content.taxAmount)
            data.content.taxAmount = '';
        if (!data.content.isTest)
            data.content.isTest = true;
        if (!data.content.currencyCode)
            data.content.currencyCode = null;
        if (!data.content.defaultCountry)
            data.content.defaultCountry = null;
        if (['logo.svg'].indexOf(data.content.logo) > -1) {
            data.content.logo = 'klarna_dark.svg';
        }
        PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
    },
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"dragonpay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/dragonpay","customConfiguration":null};
PluginWrapper._config.id = 'dragonpay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/dragonpay\/main.png";
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\n\n<div class=\"modal fade\" id=\"{{id}}_modal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n                <h4 class=\"modal-title\">Dragonpay<\/h4>\n            <\/div>\n            <div class=\"modal-body\">\n\t\t\t\t<form data-gateway-id=\"Dragonpay\" id=\"{{id}}_form\" action=\"{{#content.demo}}https:\/\/test.dragonpay.ph\/Pay.aspx{{\/content.demo}}{{^content.demo}}https:\/\/gw.dragonpay.ph\/Pay.aspx{{\/content.demo}}\" method=\"get\" style=\"width: 100%; height: 100%;\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label>{{content.__t.email}} <span style=\"color: #c00;\">*<\/span><\/label>\n\t\t\t\t\t\t<input class=\"form-control input-sm\" type=\"email\" name=\"email\" required \/>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<input type=\"hidden\" name=\"merchantid\" value=\"{{content.merchant_id}}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" data-fixed-decimal=\"2\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"ccy\" value=\"{{content.currency}}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\n\t\t\t\t\t<input type=\"submit\" class=\"hidden\" \/>\n\t\t\t\t\t{{{requireService}}}\n\t\t\t\t\t{{#content.store}}\n\t\t\t\t\t<input type=\"hidden\" name=\"txnid\" value=\"{transactionId}\" \/>\n\t\t\t\t\t{{\/content.store}}\n\t\t\t\t<\/form>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\n                <button type=\"button\" class=\"btn btn-primary\" id=\"{{id}}_pay_btn\">{{content.__t.pay}}<\/button>\n            <\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar modalAppendToBody = false;\n\t\twindow.{{id}}_showModal = function() {\n\t\t\tif (!modalAppendToBody) {\n\t\t\t\t$('#{{id}}_modal').appendTo('body');\n\t\t\t\tmodalAppendToBody = true;\n\t\t\t}\n\t\t\t$('#{{id}}_modal').modal('show');\n\t\t};\n\t\t$('#{{id}}_pay_btn').on('click', function() {\n\t\t\t$(this).attr('disabled', 'disabled');\n\t\t\t$('#{{id}}_modal').find('input[type=\"submit\"]').trigger('click');\n\t\t});\n\t\t$('#{{id}}_modal').on('show.bs.modal', function() {\n\t\t\t$('#{{id}}_pay_btn').removeAttr('disabled');\n\t\t});\n\t\t$('#{{id}}_payment_gateway_button').on('click', {{id}}_showModal);\n\t})();\n<\/script>\n{{\/isPublished}}\n";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/dragonpay/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://www.dragonpay.ph" target="_blank">https://www.dragonpay.ph</a></p>'
				+ '<p><strong>Postback URL:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Dragonpay' + '</pre></p>'
				+ '<p><strong>Return URL:</strong><br />'
				+ '<pre>' + base_url + 'store-return/Dragonpay' + '</pre></p>';
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#fafafa',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'dragonpay_color_3.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 109,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'dragonpay_color_1.svg', name: 'coloured'},
			{id: 'dragonpay_color_2.svg', name: 'coloured 2'},
			{id: 'dragonpay_color_3.svg', name: 'coloured 3'},
		];
	},
	getTranslations: function() {
		return {
			'email': __c('E-mail'),
			'pay': __c('Pay'),
			'close': __c('Close')
		};
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Dragonpay',
	id: 'dragonpay',
	keyFieldId: 'merchant_id',
	keyField2Id: 'secret_key',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [6,6,12], children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['merchant_id', 'secret_key', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'dragonpay', true),
	settingsTabDef: Globals.getSettingsContent(),
	__t: Globals.getTranslations()
});
PluginWrapper.registerPlugin('dragonpay', {
	name: 'Dragonpay',
	element: {
		minSize: {width: 60, height: 20},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchant_id', type: 'DragonpayMerchantId',
			get: function(data) { return data.content.merchant_id; },
			set: function(value, data) {
				data.content.merchant_id = value;
			}
		},
		{id: 'secret_key', type: 'DragonpaySecretKey',
			get: function(data) { return data.content.secret_key; },
			set: function(value, data) {
				data.content.secret_key = value;
			}
		},
		{id: 'description', type: 'DragonpayDescription',
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'DragonpayAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'DragonpayCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'DragonpayDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'dragonpay'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID')},
						{type: 'TextField', id: 'merchant_id'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key')},
						{type: 'TextField', id: 'secret_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#PHP', name: 'PHP', value: 'PHP'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#CAD', name: 'CAD', value: 'CAD'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'dragonpay')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.merchant_id.setText(data.content.merchant_id);
		fields.secret_key.setText(data.content.secret_key);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.merchant_id = fields.merchant_id.getText();
		data.content.secret_key = fields.secret_key.getText();
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__t = Globals.getTranslations();
		if (!data.content.currency) data.content.currency = 'PHP';
		if (!data.content.merchant_id) data.content.merchant_id = '';
		if (!data.content.secret_key) data.content.secret_key = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.description) data.content.description = '';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['dragonpay.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'dragonpay_color_1.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"odnoklassniki","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/odnoklassniki","customConfiguration":null};
PluginWrapper._config.id = 'odnoklassniki';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/odnoklassniki\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"https:\/\/connect.ok.ru\/connect.js\"><\/script>\n\t{{\/firstOnPage}}\n{{\/isPublished}}\n<div id=\"{{id}}_ok_group_widget\" class=\"wb-prevent-layout-click\"><\/div>\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar onOKLoaded = function(callback) {\n\t\t\tif (!window.OK || !window.OK.CONNECT) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tonOKLoaded(callback);\n\t\t\t\t}, 200);\n\t\t\t} else if (typeof(callback) === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tvar render = function(w, h) {\n\t\t\ttry {\n{{#isPublished}}\n\t\t\t\tw = w || $('#{{id}}').width();\n\t\t\t\th = h || $('#{{id}}').height();\n{{\/isPublished}}\n{{^isPublished}}\n\t\t\t\tw = {{width}};\n\t\t\t\th = {{height}};\n{{\/isPublished}}\n\t\t\t\t$('#{{id}}_ok_group_widget').empty();\n\t\t\t\twindow.OK.CONNECT.insertGroupWidget('{{id}}_ok_group_widget', '{{content.finalGroupId}}', '{width:' + w + ',height:' + h + '}');\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Odnoklassniki error: ' + error.message);\n\t\t\t}\n\t\t};\n\t\tonOKLoaded(render);\n{{#isPublished}}\n\t\tvar resizeTimeout;\n\t\tvar elem = $('#{{id}}'), inner = $('#{{id}}_ok_group_widget');\n\t\tvar resizeHandler = function() {\n\t\t\tvar iw = inner.width(),\n\t\t\t\tih = inner.height();\n\t\t\tvar ew = elem.width(),\n\t\t\t\teh = elem.height();\n\t\t\tif (iw != ew || ih != eh) {\n\t\t\t\tclearTimeout(resizeTimeout);\n\t\t\t\t(function(w, h) {\n\t\t\t\t\tresizeTimeout = setTimeout(function() {\n\t\t\t\t\t\trender(w, h);\n\t\t\t\t\t}, 500);\n\t\t\t\t})(ew, eh);\n\t\t\t}\n\t\t};\n\t\t$(window).on('resize', resizeHandler);\n\t\tresizeHandler();\n{{\/isPublished}}\n\t})();\n<\/script>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;

PluginWrapper.registerPlugin('odnoklassniki', {
	name: 'OK',
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 200, height: 285},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Group ID'), helpText: __('Open your group (as administrator), on left side under group logo in menu select "change settings", then at the bottom of the page you will find "ID of this group on Odnoklassniki".')},
					{type: 'TextField', id: 'groupId', placeholder: '52101667553405', change: function(fields) {
						fields.__self.notifyHelpSystemPlayer('prop-groupId-change');
					}}
				]}
			]}
		]
	},
	
	pluginScoped: {
		placeholderGroupId: '52101667553405',
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://connect.ok.ru/connect.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	properties: [
		{id: 'groupId', type: 'OdnoklassnikiGroupId', helpText: __('Open your group (as administrator), on left side under group logo in menu select "change settings", then at the bottom of the page you will find "ID of this group on Odnoklassniki".'),
			get: function(data) { return data.content.groupId; },
			validate: function (value, data, api) {
				this.updateFinalGroupId(data, api);
			},
			set: function(value, data) {
				data.content.groupId = value;
				this.updateFinalGroupId(data);
			}
		},
	],
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		var self = this;
		clearTimeout(this.resizeTimeout);
		this.resizeTimeout = setTimeout(function() { self.updateElement(); }, 500);
	},
	updateFinalGroupId: function(data, api) {
		if (/^(\d+)$/.test(data.content.groupId)) {
			if (api) {
				this.displayErrorMessage(false);
				api.setError('');
			}
			data.content.finalGroupId = data.content.groupId;
		} else {
			if (api) {
				this.setErrorMessage(__('Invalid ID'));
				api.setError(__('Invalid ID'));
			}
			data.content.finalGroupId = this.pluginScoped.placeholderGroupId;
		}
	},
	openAction: function(fields, data, elem) {
		fields.__self = this;
		fields.groupId.setText(data.content.groupId);
	},
	applyAction: function(fields, data, elem) {
		data.content.groupId = fields.groupId.getText();
		this.updateFinalGroupId(data);
	},
	loadAction: function(data) {
		if (!data.content.groupId) data.content.groupId = '';
		this.updateFinalGroupId(data);
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
			window.OK.CONNECT.insertGroupWidget(data.id + '_ok_group_widget', data.content.finalGroupId, '{width:' + data.width + ',height:' + data.height + '}');
		});
	},
	switchModeAction: function(data, elem) {
		clearTimeout(this.resizeTimeout);
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"click","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/click","customConfiguration":null};
PluginWrapper._config.id = 'click';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/click\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Click\" action=\"https:\/\/my.click.uz\/pay\/\" method=\"post\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"MERCHANT_ID\" value=\"{{content.merchantId}}\" \/>\n\t<input type=\"hidden\" name=\"MERCHANT_SERVICE_ID\" value=\"{{content.merchantServiceId}}\" \/>\n\t<input type=\"hidden\" name=\"MERCHANT_TRANS_AMOUNT\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"MERCHANT_TRANS_NOTE\" value=\"{{content.description}}\" \/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"MERCHANT_TRANS_ID\" value=\"{transactionId}\" \/>\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/click/main.php';
PluginWrapper._config.active = false;

var Globals = {
	_settingsDialog: null,
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="http://click.uz/" target="_blank">http://click.uz/</a></p>'
				+ '<p><strong>Prepare URL:</strong><br />'
				+ '<pre>' + base_url + 'store-verify/Click' + '</pre></p>'
				+ '<p><strong>Complete URL:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Click' + '</pre></p>';
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#5c5c5c',
			button_border: {
				color: '#424242',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #424242' },
				cssRaw: 'border: 1px solid #424242'
			},
			logo: 'click_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#cfcfcf'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'click_color.svg', name: 'coloured'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Click',
	id: 'click',
	keyFieldId: 'merchantId',
	keyField2Id: 'merchantServiceId',
	keyField3Id: 'secretKey',
//	keyField4Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12/* ,12 */], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Merchant Service ID'), id: 'key2'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key3', css: {marginTop: 5}}/* ,
		{type: 'CheckBox', label: __('Test mode'), id: 'key4', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}} */
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	globalVars: ['merchantId', 'merchantServiceId', 'secretKey'/* , 'demo' */],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'click', true),
	settingsTabDef: Globals.getSettingsContent()
});

PluginWrapper.registerPlugin('click', {
	name: 'Click',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchantId', type: 'ClickEvolutionMerchantId', moreInfo: function() {
				Globals.getSettingsDialog().setVisible(true);
			},
			get: function(data) { return data.content.merchantId; },
			set: function(value, data) {
				data.content.merchantId = value;
			}
		},
		{id: 'merchantServiceId', type: 'ClickEvolutionMerchantServiceId',
			get: function(data) { return data.content.merchantServiceId; },
			set: function(value, data) {
				data.content.merchantServiceId = value;
			}
		},
		{id: 'secretKey', type: 'ClickEvolutionSecretKey',
			get: function(data) { return data.content.secretKey; },
			set: function(value, data) {
				data.content.secretKey = value;
			}
		},
		{id: 'description', type: 'ClickEvolutionDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'ClickEvolutionAmount', helpText: __('Amount to be transferred') + ', UZS',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'click'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID')},
						{type: 'TextField', id: 'merchantId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant Service ID')},
						{type: 'TextField', id: 'merchantServiceId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key')},
						{type: 'TextField', id: 'secretKey'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + ', UZS'},
						{type: 'TextField', id: 'amount'}
					]}
				]},
				{type: 'CustomContainer', css: {marginTop: 15}, init: function() {
					this.getElem().append('(')
							.append($('<a>').text(__('Settings'))
								.attr('href', 'javascript:void(0)')
								.on('click', function() { Globals.getSettingsDialog().setVisible(true); }))
							.append(')');
				}}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'click')
		]
	},
	openAction: function(fields, data, elem) {
		fields.merchantId.setText(data.content.merchantId);
		fields.merchantServiceId.setText(data.content.merchantServiceId);
		fields.secretKey.setText(data.content.secretKey);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.merchantId = fields.merchantId.getText();
		data.content.merchantServiceId = fields.merchantServiceId.getText();
		data.content.secretKey = fields.secretKey.getText();
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.merchantId) data.content.merchantId = '';
		if (!data.content.merchantServiceId) data.content.merchantServiceId = '';
		if (!data.content.secretKey) data.content.secretKey = '';
		if (!data.content.description) data.content.description = '';
		if (!data.content.amount) data.content.amount = '1';
		if (['click.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'click_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"vkontakte_community","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/vkontakte_community","customConfiguration":null};
PluginWrapper._config.id = 'vkontakte_community';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/vkontakte_community\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"\/\/vk.com\/js\/api\/openapi.js?116\"><\/script>\n\t{{\/firstOnPage}}\n{{\/isPublished}}\n<div id=\"{{id}}_vk_groups\" class=\"vk_groups wb-prevent-layout-click\"><\/div>\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar onVKLoaded = function(callback) {\n\t\t\tif (!window.VK) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tonVKLoaded(callback);\n\t\t\t\t}, 200);\n\t\t\t} else if (typeof(callback) === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tvar render = function(w, h) {\n\t\t\ttry {\n{{#isPublished}}\n\t\t\t\tw = w || $('#{{id}}').width();\n\t\t\t\th = h || $('#{{id}}').height();\n{{\/isPublished}}\n{{^isPublished}}\n\t\t\t\tw = 'auto';\n\t\t\t\th = {{height}};\n{{\/isPublished}}\n\t\t\t\t$('#{{id}}_vk_groups').empty();\n\t\t\t\tVK.Widgets.Group('{{id}}_vk_groups', {mode: {{content.mode}}, width: w, height: h, color1: '{{content.color1}}', color2: '{{content.color2}}', color3: '{{content.color3}}'}, '{{content.finalProfileId}}');\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('VK Community error: ' + error.message);\n\t\t\t}\n\t\t};\n\t\tonVKLoaded(render);\n{{#isPublished}}\n\t\tvar resizeTimeout;\n\t\tvar elem = $('#{{id}}'), inner = $('#{{id}}_vk_groups');\n\t\tvar resizeHandler = function() {\n\t\t\tvar iw = inner.width(),\n\t\t\t\tih = inner.height();\n\t\t\tvar ew = elem.width(),\n\t\t\t\teh = elem.height();\n\t\t\tif (iw != ew || ih != eh) {\n\t\t\t\tclearTimeout(resizeTimeout);\n\t\t\t\t(function(w, h) {\n\t\t\t\t\tresizeTimeout = setTimeout(function() {\n\t\t\t\t\t\trender(w, h);\n\t\t\t\t\t}, 500);\n\t\t\t\t})(ew, eh);\n\t\t\t}\n\t\t};\n\t\t$(window).on('resize', resizeHandler);\n\t\tresizeHandler();\n{{\/isPublished}}\n\t})();\n<\/script>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

PluginWrapper.registerPlugin('vkontakte_community', {
	name: 'VK',
	noButton: true,
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 220, height: 260},
		resizable: true
	},
	propertyDialog: {
		//size: {width: 500, height: 400},
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('ID for Page or Group'),
							helpText: __('Note that ID for profile page must be entered with "-" sign at the beginning. Use this page to find your ID: %s').replace('%s', '<a href="https://vk.com/dev/Community" target="_blank">https://vk.com/dev/Community</a>')
						},
						{type: 'TextField', id: 'link', placeholder: '20003922', change: function(fields) {
							fields.__self.notifyHelpSystemPlayer('prop-link-change');
							this.setValue(this.getValue().replace(/^.*?(\-*\d+).*$/, '$1'));
						}}
					]},
					{type: 'HorizontalLayout',
						css: {marginTop: 15},
						columnWeights: [5, 7],
						children: [
							{type: 'VerticalLayout', children: [
								{type: 'Label', text: __('Layout')},
								{type: 'RadioBox', id: 'mode0', label: __('Members'), group: 'mode', change: function(fields) {
									fields.__self.notifyHelpSystemPlayer('prop-mode0-change');
								}},
								{type: 'RadioBox', id: 'mode2', label: __('News'), group: 'mode', change: function(fields) {
									fields.__self.notifyHelpSystemPlayer('prop-mode2-change');
								}},
								{type: 'RadioBox', id: 'mode1', label: __('Name only'), group: 'mode', change: function(fields) {
									fields.__self.notifyHelpSystemPlayer('prop-mode1-change');
								}}
							]},
							{type: 'VerticalLayout', children: [
								{type: 'HorizontalLayout', columnWeights: [8, 4], children: [
									{type: 'Label', text: __('Background color')},
									{type: 'ColorSelector', id: 'color1', noTransparent: true, change: function(fields) {
										fields.__self.notifyHelpSystemPlayer('prop-color1-change');
									}}
								]},
								{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 4}, children: [
									{type: 'Label', text: __('Text color')},
									{type: 'ColorSelector', id: 'color2', noTransparent: true, change: function(fields) {
										fields.__self.notifyHelpSystemPlayer('prop-color2-change');
									}}
								]},
								{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 4}, children: [
									{type: 'Label', text: __('Buttons color')},
									{type: 'ColorSelector', id: 'color3', noTransparent: true, change: function(fields) {
										fields.__self.notifyHelpSystemPlayer('prop-color3-change');
									}}
								]}
							]}
						]
					}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://vk.com/js/api/openapi.js?116', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		},
		handleLink: function(link, func) {
			var selfFunc = func;
			if (('' + link).match(/^([0-9]+|\-[0-9]+)$/i)) {
				if (typeof selfFunc === 'function') selfFunc(link);
			} else {
				$.post('https://vk.com/al_pages.php', {act: 'a_oid_by_link', url: link}, function(oid) {
					if (typeof selfFunc === 'function') selfFunc((oid && oid.match(/^[0-9]+$/)) ? oid : null);
				});
			}
		}
	},
	properties: [
		{id: 'profileId', type: 'VkontakteProfileId', helpText: __('Note that ID for profile page must be entered with "-" sign at the beginning. Use this page to find your ID: %s').replace('%s', '<a href="https://vk.com/dev/Community" target="_blank">https://vk.com/dev/Community</a>'),
			get: function(data) { return data.content.profileId; },
			validate: function (value, data, api) {
				this.setFinalProfileId(data, api);
			},
			set: function(value, data) {
				data.content.profileId = value.replace(/^.*?(\-*\d+).*$/, '$1');
				this.setFinalProfileId(data);
			}
		},
		{id: 'layout', type: 'VkontakteLayout',
			get: function(data) { return data.content.mode; },
			set: function(value, data) {
				data.content.mode = value;
			}
		},
		{id: 'backgroundColor', type: 'VkontakteBackgroundColor',
			get: function(data) { return data.content.color1; },
			set: function(value, data) {
				data.content.color1 = value.substring(1);
			}
		},
		{id: 'textColor', type: 'VkontakteTextColor',
			get: function(data) { return data.content.color2; },
			set: function(value, data) {
				data.content.color2 = value.substring(1);
			}
		},
		{id: 'buttonsColor', type: 'VkontakteButtonsColor',
			get: function(data) { return data.content.color3; },
			set: function(value, data) {
				data.content.color3 = value.substring(1);
			}
		},
	],
	setFinalProfileId: function (data, api) {
		if (/^-*(\d+)$/.test(data.content.profileId)) {
			if (api) {
				this.displayErrorMessage(false);
				api.setError('');
			}
			data.content.finalProfileId = data.content.profileId;
		} else {
			if (api) {
				this.setErrorMessage(__('Incorrect ID'));
				api.setError(__('Incorrect ID'));
			}
			data.content.finalProfileId = '22822305';
		}

	},
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		var self = this;
		clearTimeout(this.resizeTimeout);
		this.resizeTimeout = setTimeout(function() { self.updateElement(); }, 500);
	},
	openAction: function(fields, data, elem) {
		fields.__self = this;
		fields.link.setText(data.content.profileId);
		fields.mode0.setValue(data.content.mode === 0);
		fields.mode1.setValue(data.content.mode === 1);
		fields.mode2.setValue(data.content.mode === 2);
		fields.color1.setValue(data.content.color1);
		fields.color2.setValue(data.content.color2);
		fields.color3.setValue(data.content.color3);
	},
	applyAction: function(fields, data, elem) {
		data.content.profileId = fields.link.getText();
		if (fields.mode0.getValue()) data.content.mode = 0;
		if (fields.mode1.getValue()) data.content.mode = 1;
		if (fields.mode2.getValue()) data.content.mode = 2;
		data.content.color1 = fields.color1.getValue().substring(1);
		data.content.color2 = fields.color2.getValue().substring(1);
		data.content.color3 = fields.color3.getValue().substring(1);
		this.setFinalProfileId(data);
	},
	loadAction: function(data) {
		if (!data.content.mode) data.content.mode = 0;
		if (!data.content.color1) data.content.color1 = 'ffffff';
		if (!data.content.color2) data.content.color2 = '2B587A';
		if (!data.content.color3) data.content.color3 = '5B7FA6';
		if (!data.content.profileId) data.content.profileId = '';
		this.setFinalProfileId(data);
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
//			window.VK.Widgets.Group(data.id + '_vk_groups', {mode: data.content.mode, width: data.width, height: data.height, color1: data.content.color1, color2: data.content.color2, color3: data.content.color3}, data.content.finalProfileId);
		});
	},
	switchModeAction: function(data, elem) {
		clearTimeout(this.resizeTimeout);
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"facebook_comment","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/facebook_comment","customConfiguration":null};
PluginWrapper._config.id = 'facebook_comment';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/facebook_comment\/main.png";
PluginWrapper._config.template = "<div class=\"fb_comment_wrap wb-prevent-layout-click\" style=\"width:100%; height:{{height}}px; overflow-y: auto; overflow-x: hidden;\">\n\t<div id=\"fb-root\"><\/div>\n\t<script>\n\t\t(function (d, s, id) {\n\t\t\tvar js, fjs = d.getElementsByTagName(s)[0];\n\t\t\tif (d.getElementById(id))\n\t\t\t\treturn;\n\t\t\tjs = d.createElement(s);\n\t\t\tjs.id = id;\n\t\t\tjs.async = false;\n\t\t\tjs.src = \"\/\/connect.facebook.net\/en_US\/sdk.js#xfbml=1&version=v2.6\";\n\t\t\tfjs.parentNode.insertBefore(js, fjs);\n\t\t}(document, 'script', 'facebook-jssdk'));\n\t<\/script>\n\t<div class=\"fb-comments\" data-href=\"{{content.finalPageUrl}}\" data-order-by=\"{{content.order_by}}\" data-colorscheme=\"{{content.colorscheme}}\" data-numposts=\"{{content.postNumber}}\" data-width=\"100%\"><\/div>\n<\/div>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('facebook_comment', {
	name: 'Comments',
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 500, height: 400},
		resizable: true,
		renderOnce: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [7, 5], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Link'), helpText:__('URL address of your link, where this comments box will be post')},
							{type: 'TextField', id: 'pageUrl', placeholder: 'https://developers.facebook.com/docs/plugins/comments'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Number of items to show')},
							{type: 'SizeSelector', id: 'postNumber', max:20}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Color Scheme'), helpText: __('The color scheme used by the comments plugin')},
							{type: 'DropdownBox', id: 'colorscheme', options: [
								{id: '#light', name: 'light', value: 'light'},
								{id: '#dark', name: 'dark', value: 'dark'}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Comments Sorting'), helpText: __('The order to use when displaying comments')},
							{type: 'DropdownBox', id: 'order_by', options: [
								{id: '#social', name: 'social', value: 'social'},
								{id: '#reverse_time', name: 'reverse_time', value: 'reverse_time'},
								{id: '#time', name: 'time', value: 'time'}
							]}
						]}
					]}
				]}
			]}
		]
	},
	pluginScoped: {
		pageUrlPlaceholder: 'https://developers.facebook.com/docs/plugins/comments',
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (typeof func === 'function') {
				if (this.scriptReady) {
					func.call(inst);
				} else {
					this.listeners.push({inst: inst, func: func});
				}
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://connect.facebook.net/en_US/sdk.js', function() {
					FB.init({
						status     : true,
						xfbml      : true,
						version    : 'v2.6'
					});
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	batchUpdates: true,
	properties: [
		{id: 'link', type: 'FacebookCommentLink', helpText:__('URL address of your link, where this comments box will be post'),
			get: function(data) { return data.content.pageUrl; },
			validate: function(value) {
				if(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&\/\/=]*)/.test(value) || /^\d{1,}$/.test(value) || value == '') {
					this.displayErrorMessage(false);
					return '';
				}
				else {
					this.setErrorMessage(__('Invalid URL'));
					return __('Invalid URL');
				}
			},
			set: function(value, data) {
				data.content.pageUrl = value;
				this.updateFinalPageUrl(data);
				this.updateHTML(data);
			}
		},
		{id: 'postNumber', type: 'FacebookCommentPostNumber',
			get: function(data) { return data.content.postNumber; },
			set: function(value, data) {
				data.content.postNumber = value;
				this.updateHTML(data);
			}
		},
		{id: 'colourScheme', type: 'FacebookCommentColourScheme',
			get: function(data) { return data.content.colorscheme; },
			set: function(value, data) {
				data.content.colorscheme = value;
				this.updateHTML(data);
			}
		},
		{id: 'commentSorting', type: 'FacebookCommentSorting',
			get: function(data) { return data.content.order_by; },
			set: function(value, data) {
				data.content.order_by = value;
				this.updateHTML(data);
			}
		},
	],
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
				elem.children('.fb_comment_wrap').css({height:data.height});
				FB.XFBML.parse(elem.get(0));
			}, 1000);
		}
	},
	updateFinalPageUrl: function(data) {
		data.content.finalPageUrl = /^http(s)*:\/\//.test(data.content.pageUrl) ? data.content.pageUrl : this.pluginScoped.pageUrlPlaceholder;
	},
	updateHTML: function(data) {
		var elem = $('#' + data.id + ', [data-id="' + data.id + '"]').eq(0);
		elem = elem.get(0);
		var fbclass = $(elem).find('.wb_content').find('.fb_comment_wrap').find('.fb-comments');
		fbclass.attr({'data-width':data.width,'data-href':data.content.finalPageUrl,'data-numposts': data.content.postNumber,'data-colorscheme':data.content.colorscheme, 'data-order-by':data.content.order_by});
		FB.XFBML.parse(elem);
		// plugin.elem.find('.fb-comments').attr({'data-width':data.width,'data-href':data.content.finalPageUrl,'data-numposts': data.content.postNumber,'data-colorscheme':data.content.colorscheme, 'data-order-by':data.content.order_by});
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.colorscheme.getItemById('#' + data.content.colorscheme);
		fields.colorscheme.selectItem(itm);
		itm = fields.order_by.getItemById('#' + data.content.order_by);
		fields.order_by.selectItem(itm);
		fields.pageUrl.setText(data.content.pageUrl);
		fields.postNumber.setValue(data.content.postNumber);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		itm = fields.colorscheme.getSelectedItem();
		data.content.colorscheme = itm.getOriginal().value;
		itm = fields.order_by.getSelectedItem();
		data.content.order_by = itm.getOriginal().value;
		data.content.pageUrl = fields.pageUrl.getText();
		this.updateFinalPageUrl(data);
		data.content.postNumber = fields.postNumber.getValue();
		this.updateHTML(data);
	},
	loadAction: function (data) {
		if (!data.content.pageUrl) data.content.pageUrl = '';
		if (!data.content.postNumber) data.content.postNumber = '5';
		if (!data.content.colorscheme) data.content.colorscheme = 'light';
		if (!data.content.order_by) data.content.order_by = 'social';
		this.updateFinalPageUrl(data);
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
			this.updateHTML(data);
		});
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"payfast","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/payfast","customConfiguration":null};
PluginWrapper._config.id = 'payfast';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/payfast\/main.png";
PluginWrapper._config.template = "<form action=\"https:\/\/www.payfast.co.za\/eng\/process\" method=\"post\" data-gateway-id=\"Payfast\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"merchant_id\" value=\"{{content.merchantId}}\" \/>\n\t<input type=\"hidden\" name=\"merchant_key\" value=\"{{content.merchantKey}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"return_url\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancel_url\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"notify_url\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"m_payment_id\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"item_name\" value=\"{{content.itemName}}\" \/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/payfast/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: "#cccccc",
				style: 'solid',
				weight: 1,
				differ: false,
				css: "1px solid #cccccc",
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'PayFast_color.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'PayFast_color.svg', name: 'coloured'},
			{id: 'Payfast_color_vertical.svg', name: 'coloured 2'},
			{id: 'PayFast_dark.svg', name: 'dark'},
			{id: 'Payfast_white.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'PayFast_tiny.svg', name: 'tiny'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'PayFast',
	id: 'payfast',
	pageUrl: 'https://www.payfast.co.za/',
	keyFieldId: 'merchantId',
	keyField2Id: 'merchantKey',
	keyField3Id: 'passphrase',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [12,6,6], children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Merchant Key'), id: 'key2', css: {marginTop: 5}},
		{type: 'TextField', placeholder: __('Passphrase'), id: 'key3', css: {marginTop: 5}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'itemName',
	priceFieldId: 'amount',
	globalVars: ['merchantId', 'merchantKey', 'passphrase'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payfast', true)
});
PluginWrapper.registerPlugin('payfast', {
	name: 'PayFast',
	element: {
		minSize: {width: 106, height: 32},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchantId', type: 'PayfastMerchantId',
			get: function(data) { return data.content.merchantId; },
			set: function(value, data) {
				data.content.merchantId = value;
			}
		},
		{id: 'merchantKey', type: 'PayfastMerchantKey',
			get: function(data) { return data.content.merchantKey; },
			set: function(value, data) {
				data.content.merchantKey = value;
			}
		},
		{id: 'passphrase', type: 'PayfastPassphrase',
			get: function(data) { return data.content.passphrase; },
			set: function(value, data) {
				data.content.passphrase = value;
			}
		},
		{id: 'itemName', type: 'PayfastItemName',
			get: function(data) { return data.content.itemName; },
			set: function(value, data) {
				data.content.itemName = value;
			}
		},
		{id: 'amount', type: 'PayfastAmount',  helpText: __("Amount to be transferred") + ', ' + 'ZAR',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'payfast'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [9, 3], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'itemName'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred") + ', ' + 'ZAR'},
						{type: 'TextField', id: 'amount'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID')},
						{type: 'TextField', id: 'merchantId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant Key')},
						{type: 'TextField', id: 'merchantKey'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Passphrase')},
						{type: 'TextField', id: 'passphrase'}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'payfast')
		]
	},
	openAction: function (fields, data, elem) {
		fields.merchantId.setText(data.content.merchantId);
		fields.merchantKey.setText(data.content.merchantKey);
		fields.passphrase.setText(data.content.passphrase);
		fields.itemName.setText(data.content.itemName);
		fields.amount.setText(data.content.amount);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		data.content.merchantId = fields.merchantId.getText();
		data.content.merchantKey = fields.merchantKey.getText();
		data.content.passphrase = fields.passphrase.getText();
		data.content.itemName = fields.itemName.getText();
		data.content.amount = fields.amount.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.merchantId)
			data.content.merchantId = ''; // 10005521
		if (!data.content.merchantKey)
			data.content.merchantKey = ''; // o3mztwvetaxrk
		if (!data.content.passphrase)
			data.content.passphrase = ''; // sitepro4payfast
		if (!data.content.itemName)
			data.content.itemName = ''; // Black Eye Boxing Gloves
		if (!data.content.amount)
			data.content.amount = '1'; // 129.99
		
		if (data.content.button) {
			data.content.logo = data.content.button + '.png';
			data.content.button = null;
			delete data.content.button;
		}
		if (['PayFast_tiny2.svg', 'buynow-dark.png', 'buynow-light.png', 'donate-dark.png', 'donate-light.png', 'logo_coins.png', 'logo-payfast.png',
		'logo-stacked.png', 'paynow-dark.png', 'paynow-light'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'PayFast_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"liqpay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/liqpay","customConfiguration":null};
PluginWrapper._config.id = 'liqpay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/liqpay\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Liqpay\" method=\"POST\" action=\"https:\/\/www.liqpay.ua\/api\/3\/checkout\"{{^content.store}} target=\"_blank\"{{\/content.store}} accept-charset=\"utf-8\" style=\"width: 100%; height: 100%;\">\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"version\" value=\"3\" \/>\n\t<input type=\"hidden\" name=\"action\" value=\"pay\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"order_id\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"result_url\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"server_url\" value=\"{callbackUrl}\" \/>\n\t{{{content.paymentGatewayButton}}}\n\t{{\/content.store}}\n\t{{^isPublished}}\n\t{{{content.paymentGatewayButton}}}\n\t{{\/isPublished}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/liqpay/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {	
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'liqpay_color.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'liqpay_color.svg', name: 'coloured'},
			{id: 'liqpay_black.svg', name: 'black'},
			{id: 'liqpay_white.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'liqpay_white_color.svg', name: 'white coloured'},
			{id: 'liqpay_tiny.svg', name: 'tiny'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'LiqPay',
	id: 'liqpay',
	pageUrl: 'https://www.liqpay.ua/',
	keyFieldId: 'public_key',
	keyField2Id: 'private_key',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Public Key'), id: 'key'},
		{type: 'TextField', placeholder: __('Private Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['public_key', 'private_key', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'liqpay', true)
});
PluginWrapper.registerPlugin('liqpay', {
	name: 'LiqPay',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'public_key', type: 'LiqpayPublicKey', helpText: __('This key you can get in LiqPay account on shop settings page'),
			get: function(data) { return data.content.public_key; },
			set: function(value, data) {
				data.content.public_key = value;
			}
		},
		{id: 'private_key', type: 'LiqpayPrivateKey', helpText: __('This key you can get in LiqPay account on shop settings page'),
			get: function(data) { return data.content.private_key; },
			set: function(value, data) {
				data.content.private_key = value;
			}
		},
		{id: 'description', type: 'LiqpayDescription',
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'LiqpayAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'LiqpayCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'LiqpayDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'liqpay'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Public Key'), helpText: __('This key you can get in LiqPay account on shop settings page')},
							{type: 'TextField', id: 'public_key'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Private Key'), helpText: __('This key you can get in LiqPay account on shop settings page')},
							{type: 'TextField', id: 'private_key'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'description'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'amount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#RUB', name: 'RUB', value: 'RUB'},
								{id: '#UAH', name: 'UAH', value: 'UAH'},
								{id: '#BYN', name: 'BYN', value: 'BYN'},
								{id: '#KZT', name: 'KZT', value: 'KZT'}
							]}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'liqpay')
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		fields.public_key.setText(data.content.public_key);
		fields.private_key.setText(data.content.private_key);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		data.content.public_key = fields.public_key.getText();
		data.content.private_key = fields.private_key.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function(data) {
		if (!data.content.description)
			data.content.description = ''; // Items description
		if (!data.content.amount)
			data.content.amount = '1'; // 129.99
		if (!data.content.currency)
			data.content.currency = 'RUB';
		if (!data.content.public_key)
			data.content.public_key = ''; // 12345
		if (!data.content.private_key)
			data.content.private_key = ''; // 54321
		data.content.langCode = this._getBuilderLanguage();
		if (data.content.demo === undefined) data.content.demo = false;
		if (['liqpay-1.png', 'liqpay-2.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'liqpay_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	_getBuilderLanguage: function() {
		var lang;
		return (lang = wb_builder.getLanguageByLocale(wb_builder.locale)) ? lang.code : 'en';
	},
	switchLanguageAction: function(data, elem, langCode) {
		data.content.langCode = ((langCode === 'ru') ? 'ru' : 'en');
		this.updateElement();
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"effect","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/effect","customConfiguration":null};
PluginWrapper._config.id = 'effect';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/effect\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n\t<div class=\"wb_caption smaller\">\n\t\t<div>\n\t\t\t<i class=\"ico-pl-effect\"><\/i> <strong>Effect<\/strong><br \/>{{content.placeholder}}\n\t\t<\/div>\n\t<\/div>\n{{\/isPublished}}\n{{#firstOnPage}}\n\t<script type=\"text\/javascript\" src=\"\/\/effect.com\/widget\"><\/script>\n{{\/firstOnPage}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
PluginWrapper.registerPlugin('effect', {
	name: 'Effect',
	element: {
		renderOnce: true,
		resizable: false,
		supportsFullWidth: false,
		minSize: {width: 190, height: 70},
		defaultSize: { width: 190, height: 70}
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{general: true, options: false, children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('To start receiving messages from clients please finish plugin setup.')}
				]},
				{type: 'VerticalLayout', css: {marginTop: 5}, children: [
					{type: 'Button', text: __('Finish setup'), buttonStyle: 'success', click: function() {
						var win = window.open('https://effect.com?r=6isnvi', '_blank');
						win.focus();
					}}
				]}
			]}
		]
	},
	loadAction: function(data) {
		data.content.placeholder = __('Double click to change properties');
//		data.content.placeholder = 'Effect.com ' + __('Settings').toLowerCase();
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"platron","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/platron","customConfiguration":null};
PluginWrapper._config.id = 'platron';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/platron\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Platron\" method=\"post\" action=\"https:\/\/www.platron.ru\/payment.php\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"pg_merchant_id\" value=\"{{content.merchant_id}}\" \/>\n\t<input type=\"hidden\" name=\"pg_amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"pg_description\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"pg_currency\" value=\"{{content.currency}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"pg_result_url\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"pg_success_url\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"pg_success_url_method\" value=\"POST\" \/>\n\t<input type=\"hidden\" name=\"pg_failure_url\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"pg_failure_url_method\" value=\"POST\" \/>\n\t<input type=\"hidden\" name=\"pg_order_id\" value=\"{transactionId}\" \/>\n\t<input type=\"submit\" class=\"hidden\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		return {
			button_label: __('Pay with %s').replace('%s', ''),
			button_color: '#516b85',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#fff',
			button_border: {
				color: '#ccc',
				style: 'none',
				weight: 1,
				css: { border: '1px none #ccc' },
				cssRaw: 'border: 1px none #ccc'
			},
			logo: 'gestpay.png',
			showlogo: true,
			logo_width: 90,
			button_padding: 1
		};
	},
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://front.platron.ru/" target="_blank">https://front.platron.ru/</a></p>'
				+ '<p><strong>Result URL:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Platron' + '</pre></p>'
				+ '<p><strong>Success URL:</strong><br />'
				+ '<pre>' + base_url + 'store-return/Platron' + '</pre></p>'
				+ '<p><strong>Failure URL:</strong><br />'
				+ '<pre>' + base_url + 'store-cancel/Platron' + '</pre></p>';
	},
	_settingsDialog: null,
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getTranslations: function() {
		return {
			'first_name': __c('First Name'),
			'last_name': __c('Last Name'),
			'email': __c('E-mail'),
			'address': __c('Address'),
			'phone': __c('Phone'),
			'close': __c('Close'),
			'pay': __c('Pay')
		};
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Platron',
	id: 'platron',
	keyFieldId: 'merchant_id',
	keyField2Id: 'secret_key',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [6,6,12], children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['merchant_id', 'secret_key', 'demo'],
	__t: Globals.getTranslations(),
	useStylesInStoreCart: true,
	defaultStyles: {
		logo: 'gestpay.png'
	},
	settingsTabDef: Globals.getSettingsContent()
});
PluginWrapper.registerPlugin('platron', {
	name: 'Platron',
	element: {
		minSize: {width: 60, height: 20},
		defaultSize: {width: 160, height: 30},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID')},
						{type: 'TextField', id: 'merchant_id'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key')},
						{type: 'TextField', id: 'secret_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#RUB', name: 'RUB', value: 'RUB'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef()
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.merchant_id.setText(data.content.merchant_id);
		fields.secret_key.setText(data.content.secret_key);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.merchant_id = fields.merchant_id.getText();
		data.content.secret_key = fields.secret_key.getText();
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.currency) data.content.currency = 'RUB';
		if (!data.content.merchant_id) data.content.merchant_id = '';
		if (!data.content.secret_key) data.content.secret_key = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.description) data.content.description = '';
		if (data.content.demo === undefined) data.content.demo = false;
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"paytrail","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/paytrail","customConfiguration":null};
PluginWrapper._config.id = 'paytrail';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/paytrail\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Paytrail\" method=\"post\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\" id=\"{{id}}_form\">\n\t<input name=\"amount\" value=\"{{content.amount}}\" type=\"hidden\" \/>\n\t<input name=\"currency\" value=\"{{content.currency}}\" type=\"hidden\" \/>\n\t<input name=\"description\" value=\"{{content.name}}\" type=\"hidden\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"returnUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"callbackUrl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/paytrail/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#e60094',
			button_border: {
				color: '#cccccc',
				style: 'none',
				weight: 1,
				css: { border: '1px none #cccccc' },
				cssRaw: 'border: 1px none #cccccc'
			},
			logo: 'paytrail_white_line.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#ffa6e0'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'paytrail_color_block.svg', name: 'block coloured'},
			{id: 'paytrail_black_block.svg', name: 'block black'},
			{id: 'paytrail_white_block.svg', name: 'block white'},
			{id: 'paytrail_color_line.svg', name: 'coloured'},
			{id: 'paytrail_black_line.svg', name: 'black'},
			{id: 'paytrail_white_line.svg', name: 'white'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Paytrail',
	id: 'paytrail',
	pageUrl: 'https://www.paytrail.com/',
	keyField: __('Merchant ID'),
	keyFieldId: 'merchantId',
	keyField2: __('Secret Key'),
	keyField2Id: 'secretKey',
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['merchantId', 'secretKey'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'paytrail', true),
});
PluginWrapper.registerPlugin('paytrail', {
	name: 'Paytrail',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merchantId', type: 'PaytrailMerchantId',
			get: function(data) { return data.content.merchantId; },
			set: function(value, data) {
				data.content.merchantId = value;
			}
		},
		{id: 'secretKey', type: 'PaytrailSecretKey',
			get: function(data) { return data.content.secretKey; },
			set: function(value, data) {
				data.content.secretKey = value;
			}
		},
		{id: 'name', type: 'PaytrailName',
			get: function(data) { return data.content.name; },
			set: function(value, data) {
				data.content.name = value;
			}
		},
		{id: 'amount', type: 'PaytrailAmount', helpText: __('Amount to be transferred') + ', EUR',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'paytrail'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', children: [
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Merchant ID')},
						{type: 'TextField', id: 'merchantId'}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Secret Key')},
						{type: 'TextField', id: 'secretKey'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [9,3], columnWeightsSmall: [9,3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description')},
						{type: 'TextField', id: 'name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + ', EUR'},
						{type: 'TextField', id: 'amount'}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'paytrail')
		]
	},
	openAction: function (fields, data, elem) {
		fields.merchantId.setText(data.content.merchantId);
		fields.secretKey.setText(data.content.secretKey);
		fields.amount.setValue(data.content.amount);
		fields.name.setText(data.content.name);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		data.content.merchantId = fields.merchantId.getText();
		data.content.secretKey = fields.secretKey.getText();
		data.content.amount = fields.amount.getValue();
		data.content.name = fields.name.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__globalVars = ['merchantId', 'secretKey'];
		if (!data.content.merchantId) data.content.merchantId = '';
		if (!data.content.secretKey) data.content.secretKey = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.currency) data.content.currency = 'EUR';
		if (!data.content.name) data.content.name = '';
		if (['paytrail.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'paytrail_color_block.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"zopim","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/zopim","customConfiguration":null};
PluginWrapper._config.id = 'zopim';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/zopim\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n\t<div class=\"wb_caption smaller\">\n\t\t<div>\n\t\t\t<i class=\"ico-pl-zopim\"><\/i> Zendesk\n\t\t<\/div>\n\t<\/div>\n{{\/isPublished}}\n{{#firstOnPage}}\n<script id=\"ze-snippet\" src=\"https:\/\/static.zdassets.com\/ekr\/snippet.js?key={{content.groupId}}\"> <\/script>\n{{\/firstOnPage}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('zopim', {
    name: 'Zendesk',
    element: {
        minSize: {
            width: 190,
            height: 70
        },
        defaultSize: {
            width: 190,
            height: 70
        },
        resizable: false,
		supportsFullWidth: false
    },
    properties: [
        {id: 'groupId', type: 'ZopimGroupId', helpText: __('SRC ID from widget code "/v2.zopim.com/?SRC_ID" provided by Zopim'),
            get: function(data) { return data.content.groupId; },
            validate: function(value, data, api) { this.extractKey(data, value, api); },
            set: function(value, data) {
                this.extractKey(data, value);
            }
        },
    ],
    propertyDialog: {
        noScroll: true,
        tabs: [{
            name: 'General',
            children: [{
                type: 'VerticalLayout',
                children: [{
                    type: 'Label',
                    text: __('Widget key'),
                    helpText: __('Paste full widget code or key from Zendesk Admin Portal')
                }, {
                    type: 'TextField',
                    id: 'groupId',
                    change: function() {
                        var value = this.getText();
                        var regexp = /^((.*\n)?.*key=)?([A-Za-z0-9\-]+)(.*\n)?/;
                        var result = value.match(regexp);
                        if (result && result[3]) {
                            this.setValue(result[3]);
                        } else {
                            this.setValue(value);
                        }
                    }
                }]
            }]
        }]
    },
    resizeTimeout: null,

    extractKey: function (data, value, api) {
        var regexp = /^((.*\n)?.*key=)?([A-Za-z0-9\-]+)(.*\n)?/;
        var result = value.match(regexp);
        if (result && result[3]) {
            data.content.groupId = result[3];
            if (api) {
                this.displayErrorMessage(false);
                api.setError('');
                this.setSize(190, 70);
            }
        } else {
            if (api) {
                this.setErrorMessage(__('Incorrect ID'));
                api.setError(__('Incorrect ID'));
                this.setSize(190, 200);
            }
            data.content.groupId = '';
        }
    },

    resizeAction: function(data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function() {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function(fields, data, elem) {
        fields.groupId.setText(data.content.groupId);
    },
    applyAction: function(fields, data, elem) {
        data.content.groupId = fields.groupId.getText();
    },
    loadAction: function(data) {
		if (!data.content.groupId) data.content.groupId = '';
    },
	loadedAction: function(data, elem) {
        var thisClass = this;
        elem.parent().children('.wb_controls').on('dblclick', function() { thisClass.openProperties(); });
    }
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"pagseguro","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/pagseguro","customConfiguration":null};
PluginWrapper._config.id = 'pagseguro';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/pagseguro\/main.png";
PluginWrapper._config.template = "<form method=\"post\" data-gateway-id=\"PagSeguro\"{{^content.store}} target=\"pagseguro\"{{\/content.store}} action=\"https:\/\/pagseguro.uol.com.br\/v2\/checkout\/payment.html\" style=\"width: 100%; height: 100%;\">\r\n\t<input name=\"receiverEmail\" type=\"hidden\" value=\"{{content.email}}\" \/>\r\n\t<input name=\"currency\" type=\"hidden\" value=\"BRL\" \/>\r\n\t<input name=\"itemDescription1\" type=\"hidden\" value=\"{{content.itemdescription}}\" \/>\r\n\t<input name=\"itemQuantity1\" type=\"hidden\" value=\"{{#content.itemquantity}}{{content.itemquantity}}{{\/content.itemquantity}}{{^content.itemquantity}}1{{\/content.itemquantity}}\" \/>\r\n\t{{#content.store}}\r\n\t<input name=\"itemAmount1\" type=\"hidden\" value=\"{{content.itemamount}}\" data-fixed-decimal=\"2\" \/>\r\n\t<input name=\"itemId1\" type=\"hidden\" value=\"{transactionId}\" \/>\r\n\t{{\/content.store}}\r\n\t{{^content.store}}\r\n\t{{{requireService}}}\r\n\t{{\/content.store}}\r\n\t{{{content.paymentGatewayButton}}}\r\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/pagseguro/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {	
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'pagseguro_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: '',
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'pagseguro_color.svg', name: 'coloured'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'PagSeguro',
	id: 'pagseguro',
	pageUrl: 'https://pagseguro.uol.com.br/',
	keyField: __('Email'),
	keyFieldId: 'email',
	nameFieldId: 'itemdescription',
	priceFieldId: 'itemamount',
	priceFixedDecimal: 2,
	defaultStyles: Globals.getDefaultStyles(true),
	useStylesInStoreCart: true,
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'pagseguro', true)
});

PluginWrapper.registerPlugin('pagseguro', {
	name: 'PagSeguro',
	element: {
		minSize: {width: 120, height: 55},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'email', type: 'PagseguroEmail', helpText:__("Email registered to your PagSeguro account."),
			get: function(data) { return data.content.email; },
			set: function(value, data) {
				data.content.email = value;
			}
		},
		{id: 'itemdescription', type: 'PagseguroItemDescription',  helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.itemdescription; },
			set: function(value, data) {
				data.content.itemdescription = value;
			}
		},
		{id: 'itemamount', type: 'PagseguroItemAmount', helptext: __("Amount to be transferred") + ', ' + __('BRL'),
			get: function(data) { return data.content.itemamount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.itemamount = value;
			}
		},
		{id: 'itemquantity', type: 'PagseguroItemQuantity',
			get: function(data) { return data.content.itemquantity; },
			set: function(value, data) {
				data.content.itemquantity = value;
			}
		},
	], Globals.getLogosList(), 'pagseguro'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Email'), helpText:__("Email registered to your PagSeguro account.")},
							{type: 'TextField', id: 'email'}
						]}
					]},
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'itemamount', helptext: __("Amount to be transferred") + ', ' + __('BRL')}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Quantity')},
							{type: 'TextField', id: 'itemquantity'}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'itemdescription'}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'pagseguro', true)
		]
	},
	openAction: function(fields, data, elem) {
		fields.email.setText(data.content.email);
		fields.itemdescription.setText(data.content.itemdescription);
		fields.itemamount.setText(data.content.itemamount);
		fields.itemquantity.setText(data.content.itemquantity);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.email = fields.email.getText();
		data.content.itemdescription = fields.itemdescription.getText();
		data.content.itemamount = fields.itemamount.getText();
		data.content.itemquantity = fields.itemquantity.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.email) data.content.email = '';
		if (!data.content.itemdescription) data.content.itemdescription = 'Donate';
		if (!data.content.itemamount) data.content.itemamount = '1';
		if (!data.content.itemquantity) data.content.itemquantity = 1;
		if (['logo_old.gif', 'logo1.png', 'logo2.png', 'pagseguro.gif'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'pagseguro_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"bepaid","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/bepaid","customConfiguration":null};
PluginWrapper._config.id = 'bepaid';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/bepaid\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Bepaid\" method=\"POST\" accept-charset=\"utf-8\" {{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"redirectUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"webhookUrl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"orderId\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"{{id}}_submit\" value=\"1\" \/>\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/bepaid/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ebebeb',
			button_border: {
				color: '#cccccc',
				style: 'none',
				weight: 1,
				css: { border: '0px none #cccccc' },
				cssRaw: 'border: 0px none #cccccc'
			},
			logo: 'bepaid_color.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'bepaid_color.svg', name: 'coloured'},
			{id: 'bepaid_black.svg', name: 'black'},
			{id: 'bepaid_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'bePaid',
	id: 'bepaid',
	pageUrl: 'https://bepaid.by/',
	keyFieldId: 'shop_id',
	keyField2Id: 'shop_key',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [6,6,12], children: [
		{type: 'TextField', placeholder: __('Shop ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['shop_id', 'shop_key', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'bepaid', true)
});

PluginWrapper.registerPlugin('bepaid', {
	name: 'bePaid',
	element: {
		minSize: {width: 162, height: 56},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'shop_id', type: 'BepaidShopId',
			get: function(data) { return data.content.shop_id; },
			set: function(value, data) {
				data.content.shop_id = value;
			}
		},
		{id: 'shop_key', type: 'BepaidShopKey',
			get: function(data) { return data.content.shop_key; },
			set: function(value, data) {
				data.content.shop_key = value;
			}
		},
		{id: 'orderdescription', type: 'BepaidOrderDescription', helpText:__('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.orderdescription; },
			set: function(value, data) {
				data.content.orderdescription = value;
			}
		},
		{id: 'amount', type: 'BepaidAmount', helpText: __("Amount to be transferred"),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'BepaidCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'BepaidDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'bepaid'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Shop ID')},
						{type: 'TextField', id: 'shop_id'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key')},
						{type: 'TextField', id: 'shop_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], columnWeightsSmall: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name'), helpText:__('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'orderdescription'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred")},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#RUB', name: 'RUB', value: 'RUB'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#BYN', name: 'BYN', value: 'BYN'},
							{id: '#AMD', name: 'AMD', value: 'AMD'},
							{id: '#AUD', name: 'AUD', value: 'AUD'},
							{id: '#AZN', name: 'AZN', value: 'AZN'},
							{id: '#BGN', name: 'BGN', value: 'BGN'},
							{id: '#BRL', name: 'BRL', value: 'BRL'},
							{id: '#CAD', name: 'CAD', value: 'CAD'},
							{id: '#CHF', name: 'CHF', value: 'CHF'},
							{id: '#CNY', name: 'CNY', value: 'CNY'},
							{id: '#CZK', name: 'CZK', value: 'CZK'},
							{id: '#DKK', name: 'DKK', value: 'DKK'},
							{id: '#GBP', name: 'GBP', value: 'GBP'},
							{id: '#HUF', name: 'HUF', value: 'HUF'},
							{id: '#INR', name: 'INR', value: 'INR'},
							{id: '#JPY', name: 'JPY', value: 'JPY'},
							{id: '#KGS', name: 'KGS', value: 'KGS'},
							{id: '#KRW', name: 'KRW', value: 'KRW'},
							{id: '#KZT', name: 'KZT', value: 'KZT'},
							{id: '#MDL', name: 'MDL', value: 'MDL'},
							{id: '#NOK', name: 'NOK', value: 'NOK'},
							{id: '#PLN', name: 'PLN', value: 'PLN'},
							{id: '#RON', name: 'RON', value: 'RON'},
							{id: '#SEK', name: 'SEK', value: 'SEK'},
							{id: '#SGD', name: 'SGD', value: 'SGD'},
							{id: '#TJS', name: 'TJS', value: 'TJS'},
							{id: '#TMT', name: 'TMT', value: 'TMT'},
							{id: '#TRY', name: 'TRY', value: 'TRY'},
							{id: '#UAH', name: 'UAH', value: 'UAH'},
							{id: '#UZS', name: 'UZS', value: 'UZS'},
							{id: '#ZAR', name: 'ZAR', value: 'ZAR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'bottom'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'bepaid')
		]
	},
	openAction: function(fields, data, elem) {
		fields.shop_id.setText(data.content.shop_id);
		fields.shop_key.setText(data.content.shop_key);
		fields.orderdescription.setText(data.content.orderdescription);
		fields.amount.setText(data.content.amount);
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.shop_id = fields.shop_id.getText();
		data.content.shop_key = fields.shop_key.getText();
		data.content.orderdescription = fields.orderdescription.getText();
		data.content.amount = fields.amount.getText();
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.shop_id) data.content.shop_id = ''; // 4225
		if (!data.content.shop_key) data.content.shop_key = ''; // 3834fbef1fe6ea024ef77f5c79ec7ff1ba710ea6241c08c2f341afda8af4c1c4
		if (!data.content.ordername) data.content.orderdescription = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.currency) data.content.currency = 'BYN';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['bepaid.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'bepaid_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"mellat","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/mellat","customConfiguration":null};
PluginWrapper._config.id = 'mellat';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "{{^isPublished}}\n{{{content.paymentGatewayButton}}}\n{{\/isPublished}}\n{{#isPublished}}\n<form data-gateway-id=\"Mellat\" id=\"mellatForm_{{id}}\" action=\"{{#content.isTest}}https:\/\/banktest.ir\/gateway\/pgw.bpm.bankmellat.ir\/pgwchannel\/startpay.mellat{{\/content.isTest}}{{^content.isTest}}https:\/\/bpm.shaparak.ir\/pgwchannel\/startpay.mellat{{\/content.isTest}}\" method=\"post\" {{^content.store}} target=\"_blank\"{{\/content.store}}  style=\"width: 100%; height: 100%;\">\n{{#content.store}}\n<input type=\"hidden\" name=\"total\" value=\"{{content.amount}}\" \/>\n<input type=\"hidden\" name=\"orderid\" value=\"{transactionId}\" \/>\n<input type=\"hidden\" name=\"callBackUrl\" value=\"{callbackUrl}\" \/>\n{{\/content.store}}\n\n{{^content.store}}\n{{\/content.store}}\n<input class=\"hidden\" type=\"submit\"\/>\n{{{requireService}}}\n<\/form>\n\n\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/mellat/main.php';
PluginWrapper._config.active = false;
var Globals = {
	_settingsDialog: null,
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://bankmellat.ir/" target="_blank">https://bankmellat.ir/</a></p>'
			+ '<p><strong>callBackUrl:</strong><br />'
			+ '<pre>' + base_url + 'store-verify/Mellat' + '</pre></p>';
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#fafafa',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'mellat_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'mellat_color.svg', name: 'coloured'},
			{id: 'mellat_bw.svg', name: 'black'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Mellat',
	id: 'mellat',
	pageUrl: 'https://bankmellat.ir/',
	keyField: __('Terminal ID'),
	keyFieldId: 'terminal_id',
	keyField2: __('Username'),
	keyField2Id: 'username',
	keyField3: __('Password'),
	keyField3Id: 'password',
	keyField4: __('Test API'),
	keyField4Id: 'isTest',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [4,4,4,12], noPadding: true, children: [
			{type: 'TextField', placeholder: __('Terminal ID'), id: 'key'},
			{type: 'TextField', placeholder: __('Username'), id: 'key2'},
			{type: 'TextField', placeholder: __('Password'), id: 'key3'},
			{
				type: 'CheckBox',
				label: __('Test mode'),
				id: 'key4',
				css: {padding: 7, marginTop: 5, display: 'inline-block'},
				init: function () {
					this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
				}
			}
		]},
	titleFieldId: 'label',
	nameFieldId: 'additional_data',
	priceFieldId: 'amount',
	globalVars: ['terminal_id', 'username', 'password', 'isTest'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'mellat', true),
	settingsTabDef: Globals.getSettingsContent()
});

PluginWrapper.registerPlugin('mellat', {
	name: 'Mellat',
	element: {
		minSize: {width: 120, height: 70},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'terminal_id', type: 'MellatTerminalId', helpText: __('Merchant Terminal Identifier'),
			get: function(data) { return data.content.terminal_id; },
			set: function(value, data) {
				data.content.terminal_id = value;
			}
		},
		{id: 'username', type: 'MellatUsername', helpText: __('Merchant username'),
			get: function(data) { return data.content.username; },
			set: function(value, data) {
				data.content.username = value;
			}
		},
		{id: 'password', type: 'MellatPassword', helpText: __('Merchant password'),
			get: function(data) { return data.content.password; },
			set: function(value, data) {
				data.content.password = value;
			}
		},
		{id: 'additional_data', type: 'MellatAdditionalData', helpText: __('The name of the goods'),
			get: function(data) { return data.content.additional_data; },
			set: function(value, data) {
				data.content.additional_data = value;
			}
		},
		{id: 'amount', type: 'MellatAmount', helpText: __('Item price'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'isTest', type: 'MellatIsTest', helpText: __('For testing purpose without real payments'), moreInfo: function() {Globals.getSettingsDialog().setVisible(true);},
			get: function(data) { return data.content.isTest; },
			set: function(value, data) {
				data.content.isTest = value;
			}
		},
	], Globals.getLogosList(), 'mellat'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
					{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [4, 4, 4], children: [
							{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Terminal ID'), helpText: __('Merchant Terminal Identifier')},
									{type: 'TextField', id: 'terminal_id'}
								]},
							{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Username'), helpText: __('Merchant username')},
									{type: 'TextField', id: 'username'}
								]},
							{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Password'), helpText: __('Merchant password')},
									{type: 'TextField', id: 'password'}
								]}
						]},
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
							{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Item Name'), helpText: __('The name of the goods')},
									{type: 'TextField', id: 'additional_data'}
								]},
							{type: 'VerticalLayout', children: [
									{type: 'Label', text: __('Price'), helpText: __('Item price')},
									{type: 'TextField', id: 'amount'}
								]}
						]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
							{type: 'CheckBox', id: 'isTest', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
									this.getElem().attr('title', __('For testing purpose without real payments'));
									this.getElem().tooltip({placement: 'right'});
								}}
						]},
					{type: 'CustomContainer', css: {marginTop: 15}, init: function() {
							this.getElem().append('(')
								.append($('<a>').text(__('Settings'))
									.attr('href', 'javascript:void(0)')
									.on('click', function() { Globals.getSettingsDialog().setVisible(true); }))
								.append(')');
						}}
				]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'mellat')
		]
	},

	openAction: function (fields, data, elem) {
		fields.terminal_id.setValue(data.content.terminal_id);
		fields.username.setValue(data.content.username);
		fields.password.setValue(data.content.password);
		fields.additional_data.setValue(data.content.additional_data);
		fields.amount.setValue(data.content.amount);
		fields.isTest.setValue(data.content.isTest);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},

	applyAction: function (fields, data, elem) {
		data.content.terminal_id = fields.terminal_id.getValue();
		data.content.username = fields.username.getValue();
		data.content.password = fields.password.getValue();
		data.content.additional_data = fields.additional_data.getValue();
		data.content.amount = fields.amount.getValue();
		data.content.isTest = fields.isTest.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},

	loadAction: function (data) {
		data.content.__globalVars = ['terminal_id', 'username', 'password', 'isTest'];
		if (!data.content.terminal_id) data.content.terminal_id = '';
		if (!data.content.username) data.content.username = '';
		if (!data.content.password) data.content.password = '';
		if (!data.content.additional_data) data.content.additional_data = '';
		if (!data.content.amount) data.content.amount = '';
		if (!data.content.isTest) data.content.isTest = false;
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"default_dark_ui","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/default_dark_ui","customConfiguration":{}};
PluginWrapper._config.id = 'default_dark_ui';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "<div id=\"builder_canvas\"><\/div>\n<div id=\"elements_toolbar\" class=\"spdrk-tb-elements spdrk-collapsed\"><\/div>\n<div id=\"builder_toolbar\" class=\"spdrk-tb-main\"><\/div>\n<div id=\"builder_notification\" class=\"spdrk-tb-notifications hidden\"><\/div>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
var __extends=this&&this.__extends||function(){var n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])})(e,t)};return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}}(),__spreadArray=this&&this.__spreadArray||function(e,t,o){if(o||2===arguments.length)for(var n,i=0,r=t.length;i<r;i++)!n&&i in t||(n||(n=Array.prototype.slice.call(t,0,i)),n[i]=t[i]);return e.concat(n||Array.prototype.slice.call(t))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};define("default_dark_ui/SPDarkMenuNode",["require","exports"],function(e,t){"use strict";t.__esModule=!0,t.SPDarkMenuNode=void 0;var o=function(){function e(){this.visible=!0,this.enabled=!0,this.iconVisible=!1,this.iconClass=null,this.textVisible=!1,this.isActive=!1,this.isChecked=!1,this.autoHideLabel=!1,this.elem=$('<div class="spdrk-menu-node"/>'),this.content=$('<span class="spdrk-mn-content"/>'),this.icon=$('<i class="ico-tb-i"/>'),this.text=$('<span class="spdrk-mn-text"/>'),this.elem.append(this.content)}return e.prototype.getElem=function(){return this.elem},e.prototype.setVisible=function(e){return(this.visible=e)?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this.elem.trigger(e?"toolbaritem.show":"toolbaritem.hide"),this},e.prototype.getVisible=function(){return this.visible},e.prototype.getIcon=function(){return this.iconClass},e.prototype.setIcon=function(e){return null===(this.iconClass=e)?this.iconVisible&&(this.iconVisible=!1,this.icon.detach()):(this.icon.attr("class","ico-tb-i "+e),this.iconVisible||(this.iconVisible=!0,this.content.prepend(this.icon))),this},e.prototype.setIconEnabled=function(e){return e?this.elem.addClass("enabled"):this.elem.removeClass("enabled"),this},e.prototype.setText=function(e){return null===e?this.textVisible&&(this.textVisible=!1,this.text.detach()):(this.text.empty().append(e),this.textVisible||(this.textVisible=!0,this.iconVisible?this.text.insertAfter(this.icon):this.content.prepend(this.text))),this},e.prototype.getTextElem=function(){return this.text},e.prototype.setTooltip=function(e){return this.content.attr("title",e),this},e.prototype.setTooltipMark=function(e,t){void 0===t&&(t="");var o=$('<span class="badge wb_badge_help" >?</span>');return t&&""!=t&&o.attr("data-placement",t),this.content.after(o.attr("data-original-title",e)),this},e.prototype.setActive=function(e){return e?this.elem.addClass("active"):this.elem.removeClass("active"),this.isActive=e,this},e.prototype.getActive=function(){return this.isActive},e.prototype.setEnabled=function(e){return this.enabled=e,this.markEnabled(e),this},e.prototype.markEnabled=function(e){return e?this.elem.removeClass("disabled"):this.elem.addClass("disabled"),this},e.prototype.getEnabled=function(){return this.enabled},e.prototype.addSpacer=function(){return $('<span class="spacer"></span>').insertAfter(this.elem.find(".spdrk-mn-text")),this},e.prototype.setAutoHideLabel=function(e){return e==this.autoHideLabel||((this.autoHideLabel=e)?this.text.addClass("spdrk-mobile-hidden"):this.text.removeClass("spdrk-mobile-hidden")),this},e}();t.SPDarkMenuNode=o}),define("default_dark_ui/SPDarkMenuItem",["require","exports","default_dark_ui/SPDarkMenuNode","PluginApi/PluginTranslation"],function(e,t,o,a){"use strict";t.__esModule=!0,t.SPDarkMenuItem=void 0;var n=function(r){function s(e,t,o,n){void 0===o&&(o=null),void 0===n&&(n=null);var i=r.call(this)||this;return i.switcherBlock=o,i.builder=n,i.clickCallback=null,i.switchCallback=null,i.data=null,i.switchVisible=!1,i.isDraggable=!1,i.dots=null,i.setIcon(e).setText(t),i.name=null!==t?i.text.text():"",i.name&&i.setTooltip(i.name),i.switch=$('<div class="spdrk-mn-switch"><input type="checkbox" class="spdrk-switch-input" id="spdrk-ims-'+s.nextSwitchId+'" /><label for="spdrk-ims-'+s.nextSwitchId+++'" class="spdrk-switch-label spdrk-no-text"></label></div>'),o&&n&&i.switch.prepend($("<span>"+t+(t==(0,a.__)("Auto Layout")?"":" "+(0,a.__)("version"))+"</span>")),i.switch.find("input").on("change",function(e){if(s.isClickPrevented()||!i.getEnabled())return e.stopImmediatePropagation(),void e.preventDefault();i.isActive=$(e.target).is(":checked"),i.isChecked=$(e.target).is(":checked"),i.switchCallback&&i.switchCallback(i)}).on("click",function(e){if(s.isClickPrevented()||!i.getEnabled())return e.stopImmediatePropagation(),void e.preventDefault()}),i.elem.on("touchstart",function(e){s.isClickPrevented()||$(e.target).closest(".spdrk-mn-switch").length||(s.lastTouchedItem=i)}),i.elem.on("touchmove touchcancel",function(e){s.isClickPrevented()||$(e.target).closest(".spdrk-mn-switch").length||(s.lastTouchedItem=null)}),i.elem.on("touchend",function(e){s.isClickPrevented()||$(e.target).closest(".spdrk-mn-switch").length||s.lastTouchedItem===i&&(s.lastTouchedItem=null,e.stopImmediatePropagation(),e.preventDefault(),i.elem.trigger("click"))}),i.elem.on("click",function(e){s.isClickPrevented()||$(e.target).closest(".spdrk-mn-switch").length||(e.stopImmediatePropagation(),e.preventDefault(),i.getEnabled()&&(i.clickCallback?i.clickCallback(i):i.switchVisible&&(i.setActive(!i.getActive()),i.switchCallback&&i.switchCallback(i))))}),i}return __extends(s,r),s.prototype.setDragable=function(e){if(this.isDraggable==e)return this;if(this.isDraggable=e){if(!this.dots){var t='<svg width="3" height="3"><circle cx="1.5" cy="1.5" r="1.5" fill="#919191"/></svg>';this.dots=$("<div>").addClass("spdrk-mn-dots").append($("<div>").append(t).append(t).append(t)).append($("<div>").append(t).append(t).append(t))}this.elem.addClass("spdrk-mn-draggable"),this.text.before(this.dots)}else this.dots&&this.dots.detach(),this.elem.removeClass("spdrk-mn-draggable");return this},s.isClickPrevented=function(){return s.preventClickUntil>(new Date).getTime()},s.preventClick=function(){s.preventClickUntil=(new Date).getTime()+250},s.prototype.onClick=function(e){return this.clickCallback=e,this},s.prototype.onSwitch=function(e){return this.switchCallback=e,this},s.prototype.setSwitchVisible=function(e){return this.switchVisible!=e&&((this.switchVisible=e)?(this.switcherBlock?this.switcherBlock.append(this.switch):this.content.append(this.switch),this.elem.addClass("spdrk-mn-has-switch")):(this.switch.detach(),this.elem.removeClass("spdrk-mn-has-switch"))),this},s.prototype.setActive=function(e){return this.isActive=e,r.prototype.setActive.call(this,e)},s.prototype.setChecked=function(e){return this.isChecked=e,this.switch.children("input").prop("checked",e),e?this.elem.addClass("checked"):this.elem.removeClass("checked"),this},s.prototype.getChecked=function(){return this.isChecked},s.prototype.setData=function(e){return this.data=e,this},s.prototype.getData=function(){return this.data},s.lastTouchedItem=null,s.nextSwitchId=0,s.preventClickUntil=0,s}(o.SPDarkMenuNode);t.SPDarkMenuItem=n}),define("default_dark_ui/SPDarkMenu",["require","exports","default_dark_ui/SPDarkMenuNode","default_dark_ui/SPDarkMenuItem","BuilderEvent","PluginApi/PluginTranslation"],function(e,t,o,r,n,a){"use strict";t.__esModule=!0,t.SPDarkMenu=void 0;var i=function(t){function i(e){void 0===e&&(e=!1);var n=t.call(this)||this;n.items=[],n.inline=!1,n.oneRow=!0,n.caretVisible=!1;var s=n;return n.dropdown=$('<div class="spdrk-dropdown"/>'),e&&(n.searchBlock=$("<div>").addClass("spdrk-dd-search").appendTo(n.dropdown),n.searchInput=$("<input>").addClass("form-control").attr("type","text").attr("placeholder",(0,a.__)("Search")).on("change keyup",function(e){27===e.keyCode&&(this.value="");for(var t=this.value.toLowerCase(),o=0,n=s.items;o<n.length;o++){var i=n[o];if(i){var r=0<=i.getTextElem().text().toLowerCase().indexOf(t);i.setVisible(r)}}}).appendTo(n.searchBlock)),n.itemContainer=$('<div class="spdrk-dd-item-container"/>'),n.dropdown.append($('<div class="spdrk-dd-scroll"/>').append(n.itemContainer)),n.elem.addClass("spdrk-mn-has-dropdown spdrk-dd-right").on("mouseover",function(e){var t=$(e.target);if(!n.elem.is(".spdrk-over")&&!t.closest(".spdrk-et-vertical").length){var o=t.parents().addBack().filter(".spdrk-mn-has-dropdown");o.length<2&&(i.closeAllDropDowns(),o.each(function(){$(this).addClass("spdrk-over")}))}}).on("mouseout",function(e){$(e.target).closest(".spdrk-et-vertical").length||n.elem.parents(".spdrk-dropdown").length||n.elem[0].contains(e.relatedTarget)||(r.SPDarkMenuItem.preventClick(),n.elem.removeClass("spdrk-over"))}).on("touchstart",function(e){i.lastTouchedMenu=n}).on("touchmove touchcancel",function(e){i.lastTouchedMenu=null}).on("touchend",function(e){if(i.lastTouchedMenu===n){i.lastTouchedMenu=null,e.stopImmediatePropagation();try{e.preventDefault()}catch(e){}$(e.target).trigger("click")}}).on("click",function(e){var t=$(e.target);if(n.elem.is(".spdrk-over")){var o=t.closest(".spdrk-dropdown,.spdrk-menu-node");if(o.length&&o[0]===n.elem[0])return e.stopImmediatePropagation(),e.preventDefault(),void n.elem.removeClass("spdrk-over").find(".spdrk-over").removeClass("spdrk-over")}i.closeAllDropDowns(),$(e.target).parents().addBack().filter(".spdrk-mn-has-dropdown").each(function(){$(this).addClass("spdrk-over")})}).append(n.dropdown),n.caret=$('<span class="caret"></span>'),n}return __extends(i,t),i.firstInit=function(){i.firstInitDone||(i.firstInitDone=!0,$(document.body).on("touchstart",function(e){$(e.target).closest(".spdrk-has-dropdown").length||i.closeAllDropDowns()}),n.GlobalEvents.on("modal.show contextmenu.show",function(){i.closeAllDropDowns()}))},i.closeAllDropDowns=function(){$(".spdrk-over").removeClass("spdrk-over")},i.prototype.clearItems=function(){return this.items=[],this.itemContainer.empty(),this},i.prototype.addItem=function(e){if(this.items.push(e),e?this.itemContainer.append(e.getElem()):this.itemContainer.append('<div class="spdrk-dropdown-separator"/>'),this.searchBlock&&(this.searchInput.val(""),this.searchBlock.css("display",this.items.length>=i.minOptionsNumberForSearchShowing?"block":"none"),this.searchBlock.is(":not(:visible)")))for(var t=0,o=this.items;t<o.length;t++){var n=o[t];n&&n.setVisible(!0)}return this},i.prototype.setSeparatorForItemVisible=function(e,t){var o=this.items.indexOf(t),n=this.items.length;if(!(o<0)){var i=null;0==o&&1<n&&!this.items[o+1]?i=t.getElem().next():0<o&&!this.items[o-1]&&(n<=o+1||!this.items[o+1])&&(i=t.getElem().prev()),i&&(e?i.show():i.hide())}},i.prototype.getItems=function(){return this.items},i.prototype.setInline=function(e){return(this.inline=e)?this.elem.addClass("spdrk-dd-inline"):this.elem.removeClass("spdrk-dd-inline"),this},i.prototype.setOneRow=function(e){return(this.oneRow=e)?this.elem.addClass("spdrk-dd-onerow"):this.elem.removeClass("spdrk-dd-onerow"),this},i.prototype.getInline=function(){return this.inline},i.prototype.getOneRow=function(){return this.oneRow},i.prototype.setDropdownDirection=function(e){return this.elem.removeClass("spdrk-dd-left spdrk-dd-right").addClass("spdrk-dd-"+e),this},i.prototype.setCaretVisible=function(e,t,o){return void 0===t&&(t=!1),void 0===o&&(o=!1),this.caretVisible!=e&&(this.caretVisible=e,t&&this.caret.addClass("closely"),e?o?this.content.append($('<span class="caret-box"></span>').append(this.caret)):this.content.append(this.caret):(this.caret.detach(),this.content.find(".caret-box").detach())),this},i.prototype.setOpen=function(e){return e?this.elem.addClass("spdrk-over"):this.elem.removeClass("spdrk-over"),this},i.lastTouchedMenu=null,i.minOptionsNumberForSearchShowing=8,i.firstInitDone=!1,i}(o.SPDarkMenuNode);t.SPDarkMenu=i}),define("default_dark_ui/SPDarkBuilderModeSelector",["require","exports","default_dark_ui/SPDarkMenuItem","BuilderEvent","default_dark_ui/SPDarkMenu","PluginApi/PluginTranslation"],function(e,t,s,a,o,l){"use strict";t.__esModule=!0,t.SPDarkBuilderModeSelector=void 0;var n=function(r){function e(e){var o=r.call(this)||this;o.builder=e,o.autoLayoutButton=null,o.modeButtons={},o.blockModeSwitchers=null,o.defaultIconClass="ico-tb-auto-layout",o.modeDef="tv",o.setText((0,l.__)("Auto Layout")),o.setCaretVisible(!0);for(var t=0,n=__spreadArray([],e.getModes(),!0).sort(function(e,t){return t.width-e.width});t<n.length;t++){var i=n[t];o.modeButtons[i.id]=new s.SPDarkMenuItem("ico-tb-mode-"+i.id,i.name,null,e).onClick(o.onModeSelect.bind(o)).onSwitch(o.onModeEnable.bind(o)).setData(i.id).setSwitchVisible(!o.builder.isAutoLayoutEnabled()).setActive(o.modeDef==i.id&&!o.builder.isAutoLayoutEnabled()),o.addItem(o.modeButtons[i.id])}return o.builder.isComposerMode()||(o.addItem(o.autoLayoutButton=new s.SPDarkMenuItem("ico-tb-auto-layout",(0,l.__)("Auto Layout"),o.blockModeSwitchers,e).onSwitch(function(e){e.getActive()&&!o.builder.isAutoLayoutAvailable()||o.builder.setAutoLayoutEnabled(e.getActive())}).onClick(function(e){e.getActive()||(e.setActive(!0),o.builder.setAutoLayoutEnabled(e.getActive()))}).setEnabled(o.builder.isAutoLayoutEnabled()||o.builder.isAutoLayoutAvailable()).setSwitchVisible(!0).setActive(o.builder.isAutoLayoutEnabled())),a.GlobalEvents.on("modes.autolayout.changed",function(e){if(o.autoLayoutButton.setChecked(e.value).setActive(e.value),e.value)for(var t in o.setIcon(o.defaultIconClass),o.modeButtons)o.modeButtons[t].setActive(!1);if(!e.value)for(var t in o.modeButtons)o.modeDef==t&&o.modeButtons[t].setActive(!0);e.value||o.builder.isAutoLayoutAvailable()||o.autoLayoutButton.setEnabled(!1).setActive(!1)})),a.GlobalEvents.on("modes.enabled.change",function(e){o.modeButtons.hasOwnProperty(e.mode)&&o.modeButtons[e.mode].setChecked(e.value),o.getIcon()==o.modeButtons[e.mode].getIcon()&&o.setIconEnabled(o.modeButtons[e.mode].getChecked())}),a.GlobalEvents.on("modes.visible.changed",function(e){o.setVisible(e.visible)}),a.GlobalEvents.on("modes.usable.change",function(e){o.modeButtons.hasOwnProperty(e.mode)&&o.modeButtons[e.mode].setEnabled(e.value)}),a.GlobalEvents.on("modes.change",function(e){if(!o.builder.isAutoLayoutEnabled()&&e.mode in o.modeButtons){var t=o.modeButtons[e.mode];o.setIcon(t.getIcon()||o.defaultIconClass),o.setText(t.getTextElem().text()),o.setIconEnabled(t.getChecked())}}),o}return __extends(e,r),e.prototype.update=function(){for(var e in this.modeButtons)this.modeButtons[e].setEnabled(!this.builder.isAutoLayoutEnabled());return this},e.prototype.onModeSelect=function(e){var t=e.getData();for(var o in this.builder.setMode(t),this.modeButtons)t==o?this.modeButtons[o].setActive(!0):this.modeButtons[o].setActive(!1)},e.prototype.onModeEnable=function(e){if(!this.builder.isAutoLayoutEnabled()){var t=e.getData();this.builder.setModeEnabled(t,e.getChecked())}},e}(o.SPDarkMenu);t.SPDarkBuilderModeSelector=n}),define("default_dark_ui/SPDarkBuilderNotification",["require","exports","BuilderEvent","Service"],function(e,t,n,o){"use strict";t.__esModule=!0,t.SPDarkBuilderNotification=void 0,o=__importDefault(o);var i=function(){function e(e,t){var o=this;this.builderBannerOriginalBottom=null,this.builder=e,this.elem=t,this.content=$("<div/>"),this.closeButton=$('<button class="close">&times;</button>').on("click touchend",function(){return o.setVisible(!1)}),this.elem.append(this.content,this.closeButton),setTimeout(function(){var e=o.getBuilderImageBanner();e&&(o.builderBannerOriginalBottom=parseInt(e.css("bottom")),e.css("bottom",o.builderBannerOriginalBottom+t.outerHeight()+"px"))},500),n.GlobalEvents.on("notification.changed",function(e){o.setMessage(e.message,e.isHtml)})}return e.prototype.getBuilderImageBanner=function(){return o.default.RemoteLoginDialog.getImageBanner()},e.prototype.setMessage=function(e,t){return void 0===t&&(t=!1),e?(t||"string"!=typeof e?this.content.empty().append(e):this.content.text(e),this.setVisible(!0)):this.setVisible(!1),this},e.prototype.setVisible=function(e){var t=this.getBuilderImageBanner();return t&&t.css("bottom",this.builderBannerOriginalBottom+"px"),e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.getElem=function(){return this.elem},e}();t.SPDarkBuilderNotification=i}),define("default_dark_ui/SPDarkPageSelector",["require","exports","default_dark_ui/SPDarkMenu","BuilderEvent","default_dark_ui/SPDarkMenuItem","PluginApi/PluginTranslation","default_dark_ui/SPDarkMenuNode"],function(e,t,o,i,c,p,n){"use strict";t.__esModule=!0,t.SPDarkPageSelector=void 0;var r=function(n){function e(e,t){void 0===t&&(t=!1);var o=n.call(this,!0)||this;return o.builder=e,o.mobile=t,o.inPreview=!1,o.elem.addClass("spdrk-page-selector"),o.setCaretVisible(!0,!1,!0),i.GlobalEvents.on("preview.show",function(e){o.inPreview=e.visible,o.updateVisibility()}),i.GlobalEvents.on("preview.hide",function(e){o.inPreview=e.visible,o.updateVisibility()}),i.GlobalEvents.on("page.load pages.changed",function(){o.update(),o.updateVisibility()}),o.update(),o.updateVisibility(),o}return __extends(e,n),e.prototype.updateVisibility=function(){this.setVisible((!this.inPreview||this.mobile)&&0<this.getItems().length)},e.prototype.update=function(){this.clearItems();for(var e,t=null,o=!0,n=0,i=this.builder.getSiteMenus();n<i.length;n++){var r=i[n];if(r.items.length&&!r.hasOnlyLinks()){o?o=!1:this.addItem(null);for(var s=0,a=r.items;s<a.length;s++){var l=a[s],u="";for(e=l.lvl;0<e;e--)u+="&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;";u+=l.name,this.addItem(new c.SPDarkMenuItem(null,u).setTooltip(l.fullName).setData(l).setActive(l.isCurrent()).onClick(this.onPageSelect.bind(this))),l.isCurrent()&&(t=l)}(r.isEditable()||r.isRemovable())&&this.addItem(null),this.addItem(new h(r))}}var d=t?t.fullName:(0,p.__)("Home");return this.mobile||this.setText($("<span>").append($("<span>").addClass("spdrk-selected-page-name").text(d))),this},e.prototype.onPageSelect=function(e){var t=e.getData();this.inPreview?t.preview():t.navigate()},e}(o.SPDarkMenu);t.SPDarkPageSelector=r;var h=function(n){function e(e){var t=n.call(this)||this;t.menu=e;var o=[];return t.elem.addClass("spdrk-ps-menu-buttons no-hover"),e.isEditable()&&o.push($('<span class="spdrk-inner-btn"><i class="fa fa-pencil"></i>'+(0,p.__)("Edit")+"</span>").attr("title",(0,p.__)("Edit")).on("click",function(){t.menu.edit()})),e.isRemovable()&&o.push($('<span class="spdrk-inner-btn"><i class="fa fa-trash-o"></i>'+(0,p.__)("Remove")+"</span>").attr("title",(0,p.__)("Remove")).on("click",function(){t.menu.remove()})),t.setText(o),t.setTooltip(""),t}return __extends(e,n),e}(n.SPDarkMenuNode)}),define("default_dark_ui/SPDarkToolbarGroup",["require","exports"],function(e,t){"use strict";t.__esModule=!0,t.SPDarkToolbarGroup=void 0;var o=function(){function e(){var e=this;this.visible=!0,this.elem=$('<div class="spdrk-tb-group" />').on("toolbaritem.show toolbaritem.hide",function(){e.update()}),this.items=[]}return e.prototype.getElem=function(){return this.elem},e.prototype.setVisible=function(e){return this.visible=e,this.update(),this},e.prototype.update=function(){var e=this.visible;if(e){e=!1;for(var t=0,o=this.items;t<o.length;t++){if(o[t].getVisible()){e=!0;break}}}return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.addItem=function(e){return this.items.push(e),this.elem.append(e.getElem()),this.update(),this},e.prototype.getItems=function(){return this.items},e}();t.SPDarkToolbarGroup=o}),define("default_dark_ui/SPDarkPreviewModeSelector",["require","exports","default_dark_ui/SPDarkMenu","BuilderEvent","default_dark_ui/SPDarkMenuItem","PluginApi/PluginTranslation"],function(e,t,o,s,a,l){"use strict";t.__esModule=!0,t.SPDarkPreviewModeSelector=void 0;var n=function(r){function e(e){var i=r.call(this)||this;i.builder=e,i.modeButtons={},i.elem.addClass("spdrk-dd-inline");for(var t=0,o=__spreadArray([],e.getModes(),!0).sort(function(e,t){return t.width-e.width});t<o.length;t++){var n=o[t];i.addItem(i.modeButtons[n.id]=new a.SPDarkMenuItem("ico-tb-mode-"+n.id,n.name).setTooltip(n.name).onClick(i.onSelectMode.bind(i)).setData(n.width))}return i.autoLayoutButton=new a.SPDarkMenuItem("ico-tb-auto-layout",(0,l.__)("Auto layout")).setTooltip((0,l.__)("Auto layout")).setEnabled(i.builder.isAutoLayoutEnabled()),i.builder.getFeaturesetVersion()<4&&i.addItem(i.autoLayoutButton),s.GlobalEvents.on("preview.size.changed",function(e){var t=null,o=null;for(var n in i.modeButtons)i.modeButtons[n].getData()<=e.width&&!t&&(t=i.modeButtons[n]),o=i.modeButtons[n];for(var n in t||(t=o),i.modeButtons)i.modeButtons[n].setActive(i.modeButtons[n]===t)}),s.GlobalEvents.on("modes.autolayout.changed",function(e){i.autoLayoutButton.setActive(e.value).setChecked(e.value),i.update()}),s.GlobalEvents.on("modes.enabled.change",function(e){i.modeButtons.hasOwnProperty(e.mode)&&i.modeButtons[e.mode].setChecked(e.value)}),i}return __extends(e,r),e.prototype.onSelectMode=function(e){this.builder.setPreviewWidth(e.getData())},e.prototype.update=function(){for(var e in this.modeButtons)this.builder.isAutoLayoutEnabled()?this.modeButtons[e].getElem().addClass("disabled-s"):this.modeButtons[e].getElem().removeClass("disabled-s");return this},e}(o.SPDarkMenu);t.SPDarkPreviewModeSelector=n}),define("default_dark_ui/SPDarkTemplateMenu",["require","exports","default_dark_ui/SPDarkMenuItem","default_dark_ui/SPDarkMenu","PluginApi/PluginTranslation"],function(e,t,n,o,i){"use strict";t.__esModule=!0,t.SPDarkTemplateMenu=void 0;var r=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.functionButtonMap={},t.setIcon("ico-tb-reset"),t.setText((0,i.__)("New")+"/"+(0,i.__)("Reset")),t.setCaretVisible(!0),t.addItem(t.functionButtonMap.new=new n.SPDarkMenuItem(null,(0,i.__)("Change template")).onClick(function(){t.builder.showTemplateChooser()}).setVisible(t.builder.isTemplateSelectorVisible())),t.addItem(t.functionButtonMap.reset=new n.SPDarkMenuItem(null,(0,i.__)("Reset")).onClick(function(){t.builder.resetSite(!0)}).setVisible(t.builder.isResetTemplateButtonVisible())),t.addItem(t.functionButtonMap.import=new n.SPDarkMenuItem(null,(0,i.__)("Import")).onClick(function(){t.builder.showImportDialog()}).setEnabled(t.builder.isImportAvailable()).setVisible(t.builder.isImportVisible())),t}return __extends(e,o),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPDarkMenu);t.SPDarkTemplateMenu=r}),define("default_dark_ui/SPDarkSettingsMenu",["require","exports","default_dark_ui/SPDarkMenuItem","BuilderEvent","default_dark_ui/SPDarkMenu","PluginApi/PluginTranslation"],function(e,t,n,i,o,r){"use strict";t.__esModule=!0,t.SPDarkSettingsMenu=void 0;var s=function(e){function t(t){var o=e.call(this)||this;return o.builder=t,o.functionButtonMap={},o.setText((0,r.__)("Settings")),o.setCaretVisible(!0,!0),o.setIcon("icon-cog-big spdrk-mobile-visible"),o.text.addClass("spdrk-mobile-hidden"),o.addItem(new n.SPDarkMenuItem("ico-tb-seo",(0,r.__)("SEO")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteSEODialog()})),o.addItem(o.functionButtonMap.background=new n.SPDarkMenuItem("ico-tb-background",(0,r.__)("Background")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteBackgroundDialog()})),o.addItem(new n.SPDarkMenuItem("ico-tb-styles",(0,r.__)("Styles")).onClick(function(e){o.builder.showSiteStylesDialog()})),o.addItem(new n.SPDarkMenuItem("ico-tb-favicon",(0,r.__)("Favicon")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSiteFaviconDialog()})),o.addItem(new n.SPDarkMenuItem("icon-cog-big",(0,r.__)("Settings")).setVisible(!o.builder.isComposerMode()).onClick(function(e){o.builder.showSitePropertiesDialog()})),o.addItem(null),o.addItem(o.landingButton=new n.SPDarkMenuItem("ico-tb-landing",(0,r.__)("Landing")).setTooltip((0,r.__)("If checked then pages of main site menu will be published as one page with common header and footer of homepage")).setVisible(!o.builder.isComposerMode()).onSwitch(function(e){var t=e.getActive();o.builder.setSiteLanding(t),e.setActive(t)}).setSwitchVisible(!0)),t.getFeaturesetVersion()<4&&o.addItem(new n.SPDarkMenuItem("ico-tb-grid",(0,r.__)("Grid and guides")).onClick(function(e){o.builder.showGridAndGuidesDialog()})),o.addItem(null),o.builder.isFullScreenSupported()&&(o.addItem(null),o.addItem(new n.SPDarkMenuItem("ico-tb-fullscreen",(0,r.__)("Full Screen")).onClick(function(e){o.builder.toggleFullScreen()}))),o.addItem(null),o.addItem(new n.SPDarkMenuItem("ico-tb-logout",(0,r.__)("Log Out")).onClick(function(e){o.builder.logout()})),i.GlobalEvents.on("landing.changed",function(e){o.landingButton.setActive(e.value),o.landingButton.setChecked(e.value),4<=t.getFeaturesetVersion()&&(o.landingButton.setVisible(e.value),o.setSeparatorForItemVisible(e.value,o.landingButton))}),o}return __extends(t,e),t.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},t}(o.SPDarkMenu);t.SPDarkSettingsMenu=s}),define("default_dark_ui/SPDarkPublishMenu",["require","exports","PluginApi/PluginTranslation","default_dark_ui/SPDarkMenuItem","default_dark_ui/SPDarkMenu"],function(e,t,n,i,o){"use strict";t.__esModule=!0,t.SPDarkPublishMenu=void 0;var r=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.setCaretVisible(!0,!1,!0),t.setDropdownDirection("left"),t.setIcon("fa fa-floppy-o"),t.builder.isComposerMode()?(t.setText((0,n.__)("Save Composition")),t.addItem(new i.SPDarkMenuItem(null,(0,n.__)("Save Composition")).setEnabled(t.builder.isElementCompositionSavingEnabled()).setTooltip(t.builder.isElementCompositionSavingEnabled()?"":"Please switch builder to English language").onClick(function(e){t.builder.saveElementComposition()}))):(t.setText((0,n.__)("Publish")),t.addItem(new i.SPDarkMenuItem(null,(0,n.__)("Publish")).onClick(function(e){t.builder.publish()}).setTooltipMark((0,n.__)("Save site and Publish it to the internet"),"bottom").setEnabled(t.builder.isPublishAvailable())),t.addItem(new i.SPDarkMenuItem(null,(0,n.__)("Save")).onClick(function(e){t.builder.save(!0)}).setTooltipMark((0,n.__)("Save site without Publishing it"),"bottom")),t.addItem(new i.SPDarkMenuItem(null,(0,n.__)("Backup/Restore")).onClick(function(e){t.builder.showBackupRestoreDialog()})),t.builder.isTemplateSavingAvailable()&&t.addItem(null),t.addItem(new i.SPDarkMenuItem(null,(0,n.__)("Save As...")).setVisible(t.builder.isTemplateSavingAvailable()).setEnabled(t.builder.isTemplateSavingEnabled()).setTooltip(t.builder.isTemplateSavingEnabled()?"":"Please switch builder to English language").onClick(function(){t.builder.showSaveAsTemplateDialog()}))),t}return __extends(e,o),e}(o.SPDarkMenu);t.SPDarkPublishMenu=r}),define("default_dark_ui/SPDarkLanguagesMenu",["require","exports","default_dark_ui/SPDarkMenu","default_dark_ui/SPDarkMenuItem"],function(e,t,o,u){"use strict";t.__esModule=!0,t.SPDarkLanguagesMenu=void 0;var n=function(a){function l(e){var t=a.call(this)||this;t.builder=e,t.setCaretVisible(!0,!0);var o,n=t.builder.getLanguage();t.setIcon(l.getLanguageIcon(n));for(var i=0,r=t.builder.getLanguages();i<r.length;i++){var s=r[i];t.addItem(o=new u.SPDarkMenuItem(l.getLanguageIcon(s),s.name).setData(s).setActive(!!n&&s.locale===n.locale).setVisible(!s.hidden).onClick(t.onLanguageSelect.bind(t))),o.getElem().addClass("spdrk-limit-text")}return t}return __extends(l,a),l.getLanguageIcon=function(e){var t,o=e?e.countryCode:"";switch(o){case"cs":t="rs";break;case"ct":t="es-ct";break;case"gb":t="gb-wls";break;case"gl":t="gal";break;case"us":t="uk";break;default:t=o}return"flag-icon-def flag-icon-"+t},l.prototype.onLanguageSelect=function(e){this.builder.setLanguage(e.getData())},l}(o.SPDarkMenu);t.SPDarkLanguagesMenu=n}),define("default_dark_ui/SPDarkMobileMainMenu",["require","exports","default_dark_ui/SPDarkMenuItem","default_dark_ui/SPDarkMenu","PluginApi/PluginTranslation","default_dark_ui/SPDarkLanguagesMenu","default_dark_ui/SPDarkSettingsMenu","default_dark_ui/SPDarkTemplateMenu"],function(e,t,n,o,i,r,s,a){"use strict";t.__esModule=!0,t.SPDarkMobileMainMenu=void 0;var l=function(o){function e(e){var t=o.call(this)||this;return t.builder=e,t.functionButtonMap={},t.setText(null),t.setIcon("spdrk-icon-i-menu"),t.templateMenu=new a.SPDarkTemplateMenu(t.builder).addSpacer(),t.settingsMenu=new s.SPDarkSettingsMenu(t.builder).setText((0,i.__)("Settings")).setIcon("icon-cog-big").setCaretVisible(!0).addSpacer(),t.settingsMenu.getTextElem().removeClass("spdrk-mobile-hidden"),t.languageMenu=new r.SPDarkLanguagesMenu(t.builder).setText((0,i.__)("Languages")).setCaretVisible(!0).addSpacer(),t.helpButton=new n.SPDarkMenuItem("spdrk-icon-hint",null).setTooltip((0,i.__)("Help")).setText((0,i.__)("Help")).onClick(function(){t.builder.showHelp()}).addSpacer(),t.addItem(t.templateMenu),t.addItem(t.settingsMenu),t.addItem(t.languageMenu),t.addItem(t.helpButton),t}return __extends(e,o),e.prototype.getButtonByFunction=function(e){return this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}(o.SPDarkMenu);t.SPDarkMobileMainMenu=l}),define("default_dark_ui/SPDarkElementsToolbar",["require","exports","default_dark_ui/SPDarkToolbarGroup","default_dark_ui/SPDarkMenuItem","default_dark_ui/SPDarkMenu","BuilderEvent","PluginApi/PluginTranslation"],function(e,t,p,h,m,b,g){"use strict";t.__esModule=!0,t.SPDarkElementsToolbar=void 0;var o=function(){function e(e,t){var o=this;this.groupsSizes=[],this.UIButtonSize={width:80,height:80},this.totalCollapsedGroupsWidth=0,this.mobile=!1,this.builder=e,this.elem=t;var n=$('<div class="spdrk-tb-full-width spdrk-tb-part"/>');this.elem.append(n),this.elem.append(this.bottom=$('<div class="spdrk-tb-bottom spdrk-tb-part spdrk-mobile-visible"/>')),this.collapseButton=new h.SPDarkMenuItem("fa fa-plus",null).onClick(function(e){o.builder.hideContextMenus(),m.SPDarkMenu.closeAllDropDowns(),o.setCollapsed(!o.getCollapsed())}),this.redoButton=new h.SPDarkMenuItem("ico-tb-redo",null).setTooltip((0,g.__)("Redo")).onClick(function(){o.builder.historyRedo()}),this.undoButton=new h.SPDarkMenuItem("ico-tb-undo",null).setTooltip((0,g.__)("Undo")).onClick(function(){o.builder.historyUndo()}),this.bottom.append((new p.SPDarkToolbarGroup).addItem(this.undoButton).getElem().addClass("no-border"),(new p.SPDarkToolbarGroup).addItem(this.collapseButton).getElem().addClass("button-bottom-collapse no-border"),(new p.SPDarkToolbarGroup).addItem(this.redoButton).getElem().addClass("no-border")),this.pluginButtons=new p.SPDarkToolbarGroup,this.pluginButtons.setVisible(!0);var i=this;this.pluginButtons.getElem().append($("<div class='button-top-collapse spdrk-mobile-visible'><i class='fa fa-chevron-down'></i></div>").click(function(){i.builder.hideContextMenus(),m.SPDarkMenu.closeAllDropDowns(),i.setCollapsed(!0)})),n.append(this.pluginButtons.getElem().addClass("spdrk-et-plugins no-border")),this.setCollapsed(!1);var r=new m.SPDarkMenu;r.setInline(!0);for(var s=0,a=this.builder.getCompositionCollections();s<a.length;s++){var l=a[s],u=void 0;u="-"===l.name?null:new h.SPDarkMenuItem(l.icon,l.name||l.id).onClick(this.onElementButtonClick.bind(this)).setEnabled(!0).setData(l.id).setDragable(!0),l.inactive&&u&&u.markEnabled(!1),r.addItem(u),u&&(u.getElem().attr("id","wb__"+l.id),u.getElem().addClass("ui-draggable"),e.bindCompositionButton({id:l.id,name:l.name,icon:l.icon,elem:u.getElem()},function(){o.mobile&&o.setCollapsed(!0),m.SPDarkMenu.closeAllDropDowns()},function(){o.mobile&&o.setCollapsed(!0)}))}var d=r.getElem().find(".spdrk-dd-item-container").detach(),c=$('<div class="cont-c"></div>').append($("<span class='preel-title'>"+(0,g.__)("Add element")+"</span>")).append(d);r.getElem().find(".spdrk-dd-scroll").append(c),this.pluginButtons.addItem(r),r.setInline(!0),r.getElem().offset(),this.setCollapsed(!0),$(window).on("resize orientationchange",function(){o.update()}),this.update(),this.elem.on("touchstart touchmove touchend touchcancel",function(e){o.builder.hideContextMenus()}).on("mousedown mouseover",function(e){o.builder.hideContextMenus()}).on("click",function(e){e.ctrlKey||o.builder.unselectAll()}),this.onHistoryChange(),b.GlobalEvents.on("history.changed",function(){o.onHistoryChange()})}return e.prototype.getElem=function(){return this.elem},e.prototype.onElementButtonClick=function(e){var t=e.getData(),o=$(window);this.builder.addElementAt(t,o.width()/2,o.height()/2),this.mobile&&this.setCollapsed(!0)},e.prototype.onElementDrop=function(e,t){var o=e.getData(),n=$(window);this.builder.addElementAt(o,t.offset.left+45-n.scrollLeft(),t.offset.top+30-n.scrollTop()),this.mobile&&this.setCollapsed(!0)},e.prototype.update=function(){for(var e,t=$(window).width(),o=$(window).height(),n=($("#builder_toolbar").outerHeight(),this.pluginButtons.getItems()),i=this.pluginButtons.getElem().find(".spdrk-dropdown"),r=i?Math.floor(i.outerHeight(!0)/(this.UIButtonSize.height?this.UIButtonSize.height:80)):1,s=0,a=n.length;s<a;s++)(e=n[s]).setInline(!0),e.setOneRow(1==r);return this.mobile=t<1100?(this.pluginButtons.getElem().addClass("mobile"),!0):(this.pluginButtons.getElem().removeClass("mobile"),!1),this.pluginButtons.getElem().find(".spdrk-dropdown").outerHeight()>o?this.pluginButtons.getElem().addClass("scroll"):this.pluginButtons.getElem().removeClass("scroll"),this},e.prototype.setVisible=function(e){return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.setCollapsed=function(e){return e?(this.elem.addClass("spdrk-collapsed"),this.elem.parents("body").find(".spdrk-tb-bottom").addClass("spdrk-collapsed")):(this.elem.removeClass("spdrk-collapsed"),this.elem.parents("body").find(".spdrk-tb-bottom").removeClass("spdrk-collapsed")),e||this.update(),this},e.prototype.getCollapsed=function(){return this.elem.is(".spdrk-collapsed")},e.prototype.getPluginButtonAndGroup=function(e){for(var t=0,o=this.pluginButtons.getItems();t<o.length;t++){var n=o[t];if(n instanceof m.SPDarkMenu)for(var i=0,r=n.getItems();i<r.length;i++){var s=r[i];if(s instanceof h.SPDarkMenuItem)if(e===s.getData()||e===s.name||("Layout"===s.name||s.name===(0,g.__)("Layout"))&&"LayoutElement"===e||("Text"===s.name||s.name===(0,g.__)("Text"))&&"TextArea"===e||("Media"===s.name||s.name===(0,g.__)("Media"))&&"Youtube"===e||("Maps"===s.name||s.name===(0,g.__)("Maps"))&&"GoogleMaps"===e||s.name===(0,g.__)("Picture")&&"Picture"===e||s.name===(0,g.__)("Gallery")&&"Gallery"===e||s.name===(0,g.__)("Shape")&&"Shape"===e||s.name===(0,g.__)("Line")&&"Line"===e||s.name===(0,g.__)("Button")&&"Button"===e||s.name===(0,g.__)("Form")&&"Form"===e||s.name===(0,g.__)("Menu")&&"Menu"===e||s.name===(0,g.__)("Commerce")&&"StoreCart"===e||s.name===(0,g.__)("Commerce")&&"Store"===e||s.name===(0,g.__)("Languages")&&"Languages"===e)return{group:n,button:s}}}return null},e.prototype.onHistoryChange=function(){this.undoButton.setEnabled(this.builder.isHistoryUndoAvailable()),this.redoButton.setEnabled(this.builder.isHistoryRedoAvailable())},e}();t.SPDarkElementsToolbar=o}),define("default_dark_ui/SPDarkBuilderToolbar",["require","exports","default_dark_ui/SPDarkPageSelector","default_dark_ui/SPDarkToolbarGroup","default_dark_ui/SPDarkBuilderModeSelector","default_dark_ui/SPDarkPreviewModeSelector","default_dark_ui/SPDarkTemplateMenu","default_dark_ui/SPDarkSettingsMenu","default_dark_ui/SPDarkMenuItem","default_dark_ui/SPDarkPublishMenu","BuilderEvent","PluginApi/PluginTranslation","default_dark_ui/SPDarkLanguagesMenu","default_dark_ui/SPDarkMobileMainMenu","Dialog"],function(e,t,a,d,l,u,c,p,h,m,b,g,k,f,v){"use strict";t.__esModule=!0,t.SPDarkBuilderToolbar=void 0,v=__importDefault(v);var o=function(){function e(e,t){var o,n=this;(this.functionButtonMap={},this.builder=e,this.elem=t,this.elem.append(e.isAdminMode()?$('<div class="spdrk-logo spdrk-mobile-hidden"/>').append($('<span class="admin-mode-label"></span>').text("— ADMIN MODE —")):$('<div class="spdrk-logo spdrk-mobile-hidden"/>').append($('<div class="spdrk-logo-pad"/>').append($('<span class="logo-img"></span>').css("backgroundImage","url("+this.builder.getLogoUrl()+")")))),this.elem.append(this.left=$('<div class="spdrk-tb-left spdrk-tb-part"/>')),this.elem.append(this.right=$('<div class="spdrk-tb-right spdrk-tb-part"/>')),this.pageSelector=new a.SPDarkPageSelector(this.builder),this.pageSelectorMobile=new a.SPDarkPageSelector(this.builder,!0),this.builderModeSelector=e.getFeaturesetVersion()<4?new l.SPDarkBuilderModeSelector(this.builder):null,this.builderModeSelectorMobile=e.getFeaturesetVersion()<4?new l.SPDarkBuilderModeSelector(this.builder):null,this.previewModeSelector=new u.SPDarkPreviewModeSelector(this.builder),this.templateMenu=new c.SPDarkTemplateMenu(this.builder),this.templateMenuMobile=new c.SPDarkTemplateMenu(this.builder),this.templateMenuMobile.getElem().addClass("spdrk-template-menu"),this.templateMenuMobile.setAutoHideLabel(!0),this.settingsMenu=new p.SPDarkSettingsMenu(this.builder).setText((0,g.__)("Settings")).setIcon("icon-cog-big"),this.saveMenu=new m.SPDarkPublishMenu(this.builder),this.languagesMenu=new k.SPDarkLanguagesMenu(this.builder),this.helpButton=new h.SPDarkMenuItem("fa fa-question",null).setTooltip((0,g.__)("Help")).onClick(function(){n.builder.showHelp(),n.builder.forwardFlowStep(6,!0)}),!e.isTestMode()&&e.isB2C()&&/\.site\.pro$/.test(e.getSiteDomain()))&&(this.domainsButton=new h.SPDarkMenuItem("ico-tb-domains",null).setText((0,g.__)("Domains")).setTooltip((0,g.__)("Domains")).onClick(function(){if(!o){(o=new v.default).setTitleVisible(!1),o.addButton((0,g.__)("Close"));var t=$('<iframe src="'+e.getB2cDomainsUrl()+'" style="width: 100%; height: 130px; border: none;">');$(window).on("message",function(e){e.originalEvent.data&&"resize"===e.originalEvent.data.action&&e.originalEvent.data.value&&t.css("height",e.originalEvent.data.value+35+"px")}),o.setContent(t)}o.show()}));this.functionButtonMap.undo=this.undoButton=new h.SPDarkMenuItem("ico-tb-undo",null).setTooltip((0,g.__)("Undo")).onClick(function(){n.builder.historyUndo()}),this.functionButtonMap.redo=this.redoButton=new h.SPDarkMenuItem("ico-tb-redo",null).setTooltip((0,g.__)("Redo")).onClick(function(){n.builder.historyRedo()}),this.functionButtonMap.preview=this.showPreviewButton=new h.SPDarkMenuItem(null,(0,g.__)("Preview")).setIcon("ico-tb-preview").setTooltip((0,g.__)("Preview")).onClick(function(){n.showPreviewButton.setIcon("fa fa-spinner fa-pulse"),n.builder.preview().always(function(){return n.showPreviewButton.setIcon("ico-tb-preview")})}),this.showPreviewButton.setAutoHideLabel(!0),this.showPreviewButton.getTextElem(),this.hidePreviewButton=new h.SPDarkMenuItem(null,(0,g.__)("Close preview")).setIcon("fa fa-eye-slash").setTooltip((0,g.__)("Back to Editor")).onClick(function(){n.builder.hidePreview()}),this.mobileMenu=new f.SPDarkMobileMainMenu(this.builder);var i=e.getSignUpInfo();i&&(this.signUpButton=new h.SPDarkMenuItem("ico-tb-sign-in",null).setAutoHideLabel(!0).setText(i.title).onClick(function(){i&&window.open(i.url)}));var r=new d.SPDarkToolbarGroup;r.addItem(this.undoButton),r.addItem(this.redoButton),this.left.addClass("spdrk-mobile-hidden").append((new d.SPDarkToolbarGroup).addItem(this.pageSelector).getElem().addClass("spdrk-mobile-hidden no-hover no-border"),(new d.SPDarkToolbarGroup).addItem(this.templateMenu).getElem(),r.getElem().addClass("spdrk-mobile-hidden combined-group"),(new d.SPDarkToolbarGroup).addItem(this.previewModeSelector).getElem().addClass("no-hover preview-mode-selector spdrk-mobile-hidden")),this.builderModeSelector&&this.left.append((new d.SPDarkToolbarGroup).addItem(this.builderModeSelector).getElem().addClass("mode-selector spdrk-mobile-hidden"));var s=[];wb_builder.uiDef&&"object"==typeof wb_builder.uiDef&&wb_builder.uiDef.toolbars&&"object"==typeof wb_builder.uiDef.toolbars&&wb_builder.uiDef.toolbars["control-toolbar-cont"]&&"object"==typeof wb_builder.uiDef.toolbars["control-toolbar-cont"]&&wb_builder.uiDef.toolbars["control-toolbar-cont"].items&&(wb_builder.uiDef.toolbars["control-toolbar-cont"].items,1)&&(s=wb_builder.uiDef.toolbars["control-toolbar-cont"].items),this.buildUIItems(s,e),this.right.append((new d.SPDarkToolbarGroup).addItem(this.pageSelectorMobile.setIcon("ico-tb-landing").setText(null).setCaretVisible(!1)).getElem().addClass("spdrk-mobile-visible"),(new d.SPDarkToolbarGroup).addItem(this.templateMenuMobile).getElem().addClass("spdrk-mobile-visible mobile-no-border")),this.builderModeSelectorMobile&&this.right.append((new d.SPDarkToolbarGroup).addItem(this.builderModeSelectorMobile).getElem().addClass("mode-selector spdrk-mobile-visible mobile-no-border")),this.right.append($('<div class="spacer"></div>'),(new d.SPDarkToolbarGroup).addItem(this.helpButton).getElem().addClass("spdrk-mobile-hidden"),(new d.SPDarkToolbarGroup).addItem(this.languagesMenu).getElem().addClass("mobile-no-border"),(new d.SPDarkToolbarGroup).addItem(this.settingsMenu).getElem().addClass("mobile-no-border"),this.signUpButton?(new d.SPDarkToolbarGroup).addItem(this.signUpButton).getElem():null,(new d.SPDarkToolbarGroup).addItem(this.showPreviewButton).getElem().addClass("mobile-no-border"),(new d.SPDarkToolbarGroup).addItem(this.hidePreviewButton).getElem(),(new d.SPDarkToolbarGroup).addItem(this.saveMenu).getElem().addClass("no-hover no-border")),this.saveMenu.getElem().addClass("spdrk-publish-menu"),b.GlobalEvents.on("preview.show",function(){n.onPreviewVisibilityChange(!0)}),b.GlobalEvents.on("preview.hide",function(){n.onPreviewVisibilityChange(!1)}),b.GlobalEvents.on("history.changed",function(){n.onHistoryChange()}),this.elem.on("touchstart touchmove touchend touchcancel",function(e){e.stopImmediatePropagation(),n.builder.hideContextMenus()}).on("mousedown mouseover",function(){n.builder.hideContextMenus()}).on("click",function(e){e.ctrlKey||n.builder.unselectAll()}),this.onHistoryChange(),this.onPreviewVisibilityChange(!1),$(window).on("resize orientationchange",function(){n.update()}),this.update()}return e.prototype.buildUIItems=function(e,t){var n=[],o=0;this.left.children().each(function(){o+=20,n.push({order:o,elem:$(this)})});for(var i=function(e){var t=new d.SPDarkToolbarGroup,o=new h.SPDarkMenuItem(e.img?e.img:null,e.name?e.name:null);e.url&&o.onClick(function(){window.open(e.url)}),t.addItem(o),n.push({order:e.order,elem:t.getElem()})},r=0,s=e;r<s.length;r++){i(s[r])}n.sort(function(e,t){return e.order===t.order?0:e.order>t.order?1:-1});for(var a=0,l=n;a<l.length;a++){var u=l[a];this.left.append(u.elem)}},e.prototype.update=function(){var e=$("#builder_toolbar").outerWidth(!0);this.elem.removeClass("unfit"),e<$("#builder_toolbar .spdrk-logo").outerWidth(!0)+$("#builder_toolbar .spdrk-tb-left").outerWidth(!0)+$("#builder_toolbar .spdrk-tb-right").outerWidth()&&this.elem.addClass("unfit")},e.prototype.onHistoryChange=function(){this.undoButton.setEnabled(this.builder.isHistoryUndoAvailable()),this.redoButton.setEnabled(this.builder.isHistoryRedoAvailable())},e.prototype.onPreviewVisibilityChange=function(e){var t,o=this.builder.isComposerMode();this.builderModeSelector&&this.builderModeSelector.setVisible(!e),this.builderModeSelectorMobile&&this.builderModeSelectorMobile.setVisible(!e&&!o),this.previewModeSelector.setVisible(e),this.templateMenu.setVisible(!e&&!o),this.templateMenuMobile.setVisible(!e&&!o),this.settingsMenu.setVisible(!e),this.domainsButton&&this.domainsButton.setVisible(!e),this.helpButton.setVisible(!e&&this.builder.isHelpAvailable()&&!o),this.undoButton.setVisible(!e),this.redoButton.setVisible(!e),this.showPreviewButton.setVisible(!e&&!o),this.hidePreviewButton.setVisible(e),this.languagesMenu.setVisible(!e),this.saveMenu.setVisible(!e),null===(t=this.signUpButton)||void 0===t||t.setVisible(!e)},e.prototype.setVisible=function(e){return e?this.elem.removeClass("hidden"):this.elem.addClass("hidden"),this},e.prototype.getElem=function(){return this.elem},e.prototype.getHidePreviewButton=function(){return this.hidePreviewButton},e.prototype.getButtonByFunction=function(e){var t=e.split("-");return"config"===t[0]?1<t.length?this.settingsMenu.getButtonByFunction(t[1]):this.settingsMenu:"change"===t[0]?1<t.length?this.templateMenu.getButtonByFunction(t[1]):this.templateMenu:this.functionButtonMap.hasOwnProperty(e)?this.functionButtonMap[e]:null},e}();t.SPDarkBuilderToolbar=o}),define("default_dark_ui/SPDarkUI",["require","exports","PluginApi/UIManager","BuilderEvent","default_dark_ui/SPDarkBuilderToolbar","default_dark_ui/SPDarkElementsToolbar","PluginApi/PluginResourceLoader","PluginApi/PluginTranslation","default_dark_ui/SPDarkBuilderNotification","HelpSystem/Tooltip","default_dark_ui/SPDarkMenu"],function(e,t,o,u,d,c,p,h,m,a,n){"use strict";t.__esModule=!0;var i=function(l){function e(n){var i=l.call(this,n)||this;i.builder=n;var r=$(document.body),s=new p.PluginResourceLoader(pluginData),a="main.min.css?2020092001";return s.loadResources(["fonts.css",a,"main.html","translations.json"],function(e){var t=i.builder.getLanguage();if(t&&e["translations.json"].data&&"object"==typeof e["translations.json"].data&&e["translations.json"].data.hasOwnProperty(t.locale)&&(0,h.extendTranslations)(e["translations.json"].data[t.locale]),e["fonts.css"].data&&s.addRawStyleSheet(e["fonts.css"].data),e[a].data&&s.addRawStyleSheet(e[a].data),pluginData.customConfiguration){var o=[];pluginData.customConfiguration.hasOwnProperty("controlToolbarBackgroundColor")&&(o.push("#builder_toolbar { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+"; }"),o.push(".preview-mode-selector .spdrk-menu-node .spdrk-menu-node { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+" ! important; }"),o.push(".preview-mode-selector .spdrk-menu-node .spdrk-menu-node.active { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+" ! important; }"),o.push(".preview-mode-selector .spdrk-menu-node .spdrk-menu-node.disabled { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+" ! important; }"),o.push(".modal-dialog.wb-tpl-dialog .modal-header { background-color: "+pluginData.customConfiguration.controlToolbarBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("controlToolbarLineColor")&&(o.push(".spdrk-tb-part>.spdrk-tb-group:not(:last-child):not(.no-border):after { background-color: "+pluginData.customConfiguration.controlToolbarLineColor+"; }"),o.push(".preview-mode-selector .spdrk-menu-node .spdrk-menu-node:not(:last-of-type):after { background-color: "+pluginData.customConfiguration.controlToolbarLineColor+"; }"),o.push(".spdrk-page-selector { border-color: "+pluginData.customConfiguration.controlToolbarLineColor+"; }"),o.push(".spdrk-page-selector>.spdrk-mn-content .caret-box { border-left-color: "+pluginData.customConfiguration.controlToolbarLineColor+"; }"),o.push(".wb-tpl-dialog .lang-selector .btn { border-color: "+pluginData.customConfiguration.controlToolbarLineColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("elementToolbarBackgroundColor")&&(o.push("#elements_toolbar .spdrk-et-plugins:not(.mobile) { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push("#elements_toolbar .spdrk-menu-node.spdrk-dd-inline>.spdrk-dropdown>.spdrk-dd-scroll>.cont-c { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spdrk-menu-node.spdrk-dd-inline>.spdrk-dropdown>.spdrk-dd-scroll>.cont-c>.spdrk-dd-item-container { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spdrk-menu-node:not(.spdrk-dd-inline).spdrk-over { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+" ! important; }"),o.push(".spdrk-menu-node:not(.spdrk-dd-inline)>.spdrk-dropdown>.spdrk-dd-scroll { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spdrk-page-selector { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".spdrk-tb-part>.spdrk-tb-group:not(.no-hover):hover { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+"; }"),o.push(".preview-mode-selector .spdrk-menu-node .spdrk-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+" ! important; }"),o.push(".wb-tpl-dialog .lang-selector .btn { background-color: "+pluginData.customConfiguration.elementToolbarBackgroundColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("elementToolbarItemBackgroundColor")&&o.push("#elements_toolbar .spdrk-menu-node.ui-draggable { background-color: "+pluginData.customConfiguration.elementToolbarItemBackgroundColor+"; }"),pluginData.customConfiguration.hasOwnProperty("elementToolbarLineColor")&&(o.push("#elements_toolbar .spdrk-et-plugins .spdrk-menu-node.spdrk-dd-inline .spdrk-dropdown-separator { background-color: "+pluginData.customConfiguration.elementToolbarLineColor+"; }"),o.push("#elements_toolbar .spdrk-menu-node.ui-draggable { border-color: "+pluginData.customConfiguration.elementToolbarLineColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonTextColor")&&(o.push(".spdrk-menu-node.spdrk-publish-menu>.spdrk-mn-content { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push(".spdrk-menu-node.spdrk-publish-menu .spdrk-dropdown .spdrk-dd-scroll .spdrk-mn-content { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push("#builder_toolbar .spdrk-publish-menu .wb_badge_help { color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; border-color: "+pluginData.customConfiguration.publishButtonTextColor+" ! important; }"),o.push(".modal-dialog:not(.wb-tpl-dialog) .modal-header, .modal-dialog:not(.wb-tpl-dialog) .modal-header .close { color: "+pluginData.customConfiguration.publishButtonTextColor+"; }"),o.push(".spdrk-menu-node.spdrk-publish-menu>.spdrk-mn-content .caret-box { border-left-color: "+pluginData.customConfiguration.publishButtonTextColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonBackgroundColor")&&(o.push(".spdrk-menu-node.spdrk-publish-menu>.spdrk-mn-content { background-color: "+pluginData.customConfiguration.publishButtonBackgroundColor+" ! important; }"),o.push(".modal-dialog:not(.wb-tpl-dialog) .modal-header { background-color: "+pluginData.customConfiguration.publishButtonBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonDropdownBackgroundColor")&&(o.push(".spdrk-menu-node.spdrk-publish-menu .spdrk-dropdown .spdrk-dd-scroll { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }"),o.push(".spdrk-menu-node.spdrk-publish-menu:hover .caret-box { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundColor+"; }")),pluginData.customConfiguration.hasOwnProperty("publishButtonDropdownBackgroundHoverColor")&&o.push(".spdrk-menu-node.spdrk-publish-menu .spdrk-dropdown .spdrk-dd-scroll .spdrk-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.publishButtonDropdownBackgroundHoverColor+" ! important; }"),pluginData.customConfiguration.hasOwnProperty("normalItemColor")&&(o.push(".spdrk-selected-page-name { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push(".spdrk-menu-node>.spdrk-mn-content { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push("#elements_toolbar .spdrk-et-plugins .spdrk-menu-node.ui-draggable>.spdrk-mn-content { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push("#elements_toolbar .spdrk-menu-node>.spdrk-mn-content>.spdrk-mn-text { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push("#builder_toolbar .spdrk-menu-node .wb_badge_help { color: "+pluginData.customConfiguration.normalItemColor+"; border-color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push(".cont-c .preel-title { color: "+pluginData.customConfiguration.normalItemColor+"; }"),o.push(".modal-dialog.wb-tpl-dialog .modal-header, .modal-dialog.wb-tpl-dialog .modal-header .close { color: "+pluginData.customConfiguration.normalItemColor+" ! important; }"),o.push(".wb-tpl-dialog .lang-selector .btn .caret { border-top-color: "+pluginData.customConfiguration.normalItemColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("activeItemColor")&&(o.push(".spdrk-menu-node.active>.spdrk-mn-content { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push("#elements_toolbar .spdrk-et-plugins .spdrk-menu-node.active.ui-draggable>.spdrk-mn-content { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push("#elements_toolbar .spdrk-menu-node.active>.spdrk-mn-content>.spdrk-mn-text { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push(".spdrk-menu-node:not(.spdrk-dd-inline)>.spdrk-dropdown>.spdrk-dd-scroll>.spdrk-dd-item-container>.spdrk-menu-node.active .spdrk-mn-text, .spdrk-menu-node:not(.spdrk-dd-inline)>.spdrk-dropdown>.spdrk-dd-scroll>.spdrk-dd-item-container>.spdrk-menu-node.active .ico-tb-i { color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push("#builder_toolbar .spdrk-menu-node.active>.spdrk-mn-content .wb_badge_help { color: "+pluginData.customConfiguration.activeItemColor+"; border-color: "+pluginData.customConfiguration.activeItemColor+"; }"),o.push(".spdrk-switch-input:checked+.spdrk-switch-label:after { background-color: "+pluginData.customConfiguration.activeItemColor+" ! important; }")),pluginData.customConfiguration.hasOwnProperty("disabledItemOpacity")&&o.push(".spdrk-menu-node.disabled>.spdrk-mn-content { opacity: "+(pluginData.customConfiguration.disabledItemOpacity/100).toFixed(3)+"; }"),pluginData.customConfiguration.hasOwnProperty("hideTextUnderIcons")&&"1"===pluginData.customConfiguration.hideTextUnderIcons&&(o.push("#elements_toolbar .spdrk-menu-node>.spdrk-mn-content>.spdrk-mn-text { display: none; }"),o.push("#elements_toolbar .spdrk-et-plugins .spdrk-menu-node.ui-draggable>.spdrk-mn-content>.ico-tb-i { margin-bottom: 0; }")),pluginData.customConfiguration.hasOwnProperty("hoverItemColor")&&(o.push(".spdrk-menu-node:not(.disabled):hover>.spdrk-mn-content { color: "+pluginData.customConfiguration.hoverItemColor+"; }"),o.push("#elements_toolbar .spdrk-et-plugins .spdrk-menu-node:not(.disabled):hover.ui-draggable>.spdrk-mn-content { color: "+pluginData.customConfiguration.hoverItemColor+"; }"),o.push("#elements_toolbar .spdrk-menu-node:not(.disabled):hover>.spdrk-mn-content>.spdrk-mn-text { color: "+pluginData.customConfiguration.hoverItemColor+"; }"),o.push("#builder_toolbar .spdrk-menu-node:not(.disabled):hover>.spdrk-mn-content .wb_badge_help { color: "+pluginData.customConfiguration.hoverItemColor+"; border-color: "+pluginData.customConfiguration.hoverItemColor+"; }")),pluginData.customConfiguration.hasOwnProperty("hoverItemBackgroundColor")&&(o.push("#elements_toolbar .spdrk-et-plugins .spdrk-menu-node.ui-draggable:not(.disabled):hover, #elements_toolbar .spdrk-et-plugins .spdrk-menu-node.ui-draggable:not(.disabled):focus, #elements_toolbar .spdrk-et-plugins .spdrk-menu-node.ui-draggable:not(.disabled):active { background-color: "+pluginData.customConfiguration.hoverItemBackgroundColor+"; }"),o.push(".spdrk-menu-node:not(.spdrk-dd-inline)>.spdrk-dropdown>.spdrk-dd-scroll>.spdrk-dd-item-container>.spdrk-menu-node:not(.disabled):hover { background-color: "+pluginData.customConfiguration.hoverItemBackgroundColor+"; }")),s.addRawStyleSheet(o.join("\n"))}e["main.html"].data&&r.append(e["main.html"].data),i.builderToolbar=new d.SPDarkBuilderToolbar(n,$("#builder_toolbar")),i.elementsToolbar=new c.SPDarkElementsToolbar(n,$("#elements_toolbar")),i.builderNotification=new m.SPDarkBuilderNotification(n,$("#builder_notification")),i.builder.init($("#builder_canvas"))}),u.GlobalEvents.on("preview.show",function(){i.elementsToolbar&&i.elementsToolbar.setVisible(!1),r.addClass("preview-mode")}),u.GlobalEvents.on("preview.hide",function(){i.elementsToolbar&&i.elementsToolbar.setVisible(!0),r.removeClass("preview-mode")}),n.isAdminMode()&&$("body").addClass("admin-mode"),i}return __extends(e,l),e.prototype.lookupUIElement=function(e,t){var o=l.prototype.lookupUIElement.call(this,e,t);if(!o)switch(e){case"control":if(!this.builderToolbar)break;var n=this.builderToolbar.getButtonByFunction(t);n&&(o=new a.ScenarioStepSubject(n.getElem(),null,10));break;case"plugin":if(this.elementsToolbar){var i=this.elementsToolbar.getPluginButtonAndGroup(t);if(i){this.elementsToolbar.setCollapsed(!1);var r=i.group,s=i.button;r.setOpen(!0),o=new a.ScenarioStepSubject(s.getElem(),null,10)}else o=new a.ScenarioStepSubject(this.elementsToolbar.getElem(),null,10)}break;case"preview":if(!this.builderToolbar)break;"close"===t&&(o=new a.ScenarioStepSubject(this.builderToolbar.getHidePreviewButton().getElem(),null,10))}return o},e.prototype.getToolbarHeight=function(){return this.builderToolbar?this.builderToolbar.getElem().outerHeight():0},e.prototype.closeAll=function(){l.prototype.closeAll.call(this),n.SPDarkMenu.closeAllDropDowns(),this.elementsToolbar&&this.elementsToolbar.mobile&&this.elementsToolbar.setCollapsed(!0)},e}(o.UIManager);(0,o.registerUI)(pluginData.id,i)});require(["default_dark_ui\/SPDarkUI"], function(){});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"odnoklassniki_share","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/odnoklassniki_share","customConfiguration":null};
PluginWrapper._config.id = 'odnoklassniki_share';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/odnoklassniki_share\/main.png";
PluginWrapper._config.template = "{{#isPublished}}\n\t{{#firstOnPage}}\n<script type=\"text\/javascript\" src=\"https:\/\/connect.ok.ru\/connect.js\"><\/script>\n\t{{\/firstOnPage}}\n{{\/isPublished}}\n<div id=\"{{id}}_ok_shareWidget\" class=\"wb-prevent-layout-click\"><\/div>\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar onOKLoaded = function(callback) {\n\t\t\tif (!window.OK || !window.OK.CONNECT) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tonOKLoaded(callback);\n\t\t\t\t}, 200);\n\t\t\t} else if (typeof(callback) === 'function') {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t};\n\t\tvar render = function(w, h) {\n\t\t\ttry {\n\t\t\t\tvar timeoutId = '{{id}}_timeout';\n\t\t\t\tif ((timeoutId in window) && window[timeoutId]) {\n\t\t\t\t\tclearTimeout(window[timeoutId]);\n\t\t\t\t}\n\t\t\t\twindow[timeoutId] = setTimeout( function () {\n\t\t\t\t\t$('#{{id}}_ok_shareWidget').empty();\n\t\t\t\t\twindow.OK.CONNECT.insertShareWidget('{{id}}_ok_shareWidget', '{{content.finalUrl}}', \"{{{content.opts}}}\");\n\t\t\t\t}, 100);\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Odnoklassniki error: ' + error.message);\n\t\t\t}\n\t\t};\n\t\tonOKLoaded(render);\n{{#isPublished}}\n\t\tvar resizeTimeout;\n\t\tvar elem = $('#{{id}}'), inner = $('#{{id}}_ok_shareWidget');\n\t\tvar resizeHandler = function() {\n\t\t\tvar iw = inner.width(),\n\t\t\t\tih = inner.height();\n\t\t\tvar ew = elem.width(),\n\t\t\t\teh = elem.height();\n\t\t\tif (iw != ew || ih != eh) {\n\t\t\t\tclearTimeout(resizeTimeout);\n\t\t\t\t(function(w, h) {\n\t\t\t\t\tresizeTimeout = setTimeout(function() {\n\t\t\t\t\t\trender(w, h);\n\t\t\t\t\t}, 500);\n\t\t\t\t})(ew, eh);\n\t\t\t}\n\t\t};\n\t\t$(window).on('resize', resizeHandler);\n\t\tresizeHandler();\n{{\/isPublished}}\n\t})();\n<\/script>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

PluginWrapper.registerPlugin('odnoklassniki_share', {
	name: 'Klass',
	element: {
		minSize: {width: 25, height: 25},
		defaultSize: {width: 125, height: 25},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{name: 'General', children: [
				{type: 'VerticalLayout', children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('URL to Like (required)')},
							{type: 'TextField', id: 'url', placeholder: 'https://www.google.com'}
							// placeholder: (wb_builder.site.publishWithForcedHttps ? 'https' : 'http') + '://' + wb_builder.siteDomain + '/'
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Size')},
							{type: 'DropdownBox', id: 'size', options: [
								{id: '#12', name: '12', value: 12},
								{id: '#20', name: '20', value: 20},
								{id: '#30', name: '30', value: 30},
								{id: '#45', name: '45', value: 45},
								{id: '#70', name: '70', value: 70},
								{id: '#100', name: '100', value: 100},
								{id: '#150', name: '150', value: 150}
							]}
						]}
					]},
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Style')},
							{type: 'DropdownBox', id: 'style', options: [
								{id: 'oval', name: __('Oval')},
								{id: 'rounded', name: __('Rounded')},
								{id: 'straight', name: __('Straight')}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Counter position')},
							{type: 'DropdownBox', id: 'counter', options: [
								{id: 'none', name: __('None'), value: null},
								{id: 'right', name: __('Right'), value: 'right'},
								{id: 'top', name: __('Top'), value: 'top'}
							]}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Text')},
							{type: 'DropdownBox', id: 'text', options: [
								{id: '#0', name: __('None'), value: 0},
								{id: '#1', name: __('Klass'), value: 1},
								{id: '#2', name: __('Share'), value: 2},
								{id: '#3', name: __('Like'), value: 3}
							]}
						]}
					]}
				]}
			]}
		]
	},
	properties: [
		{id: 'url', type: 'OdnoklassnikiShareUrl',
			get: function(data) { return data.content.url; },
			validate: function (value, data, api) {
				this.updateFinalUrl(data, api);
			},
			set: function(value, data) {
				data.content.url = value;
				this.updateFinalUrl(data);
				this.updatePluginPreview(data);
			}
		},
		{id: 'size', type: 'OdnoklassnikiShareSize',
			get: function(data) { return data.content.size; },
			set: function(value, data) {
				data.content.size = value;
				this.updatePluginPreview(data);
			}
		},
		{id: 'style', type: 'OdnoklassnikiShareStyle',
			get: function(data) { return data.content.style; },
			set: function(value, data) {
				data.content.style = value;
				this.updatePluginPreview(data);
			}
		},
		{id: 'counterPosition', type: 'OdnoklassnikiShareCounterPosition',
			get: function(data) { return data.content.counter; },
			set: function(value, data) {
				data.content.counter = value;
				this.updatePluginPreview(data);
			}
		},
		{id: 'text', type: 'OdnoklassnikiShareText',
			get: function(data) { return data.content.text; },
			set: function(value, data) {
				data.content.text = value;
				this.updatePluginPreview(data);
			}
		},
	],
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://connect.ok.ru/connect.js', function(data, textStatus, jqxhr) {
						if (jqxhr.status === 200) {
							self.scriptReady = true;
							inst.setSize(125, 25);
							inst.displayErrorMessage(false);
							for (var i = 0; i < self.listeners.length; i++) {
								self.listeners[i].func.call(self.listeners[i].inst);
							}
						} else {
							inst.setSize(190, 150);
							inst.setErrorMessage(__('Failed to load script'))
							self.scriptReady = false;
						}
					});
			}
		}
	},
	updatePluginPreview: function(data) {
		var width, height, rwidth, rheight;
		if (data.content.size === 150) {
			width = 145;
			height = 145;
			data.content.counter = null;
			data.content.text = 0;
		} else if (data.content.size === 100) {
			width = 100;
			height = 100;
			data.content.counter = null;
			data.content.text = 0;
		} else if (data.content.size === 70) {
			width = 70;
			height = 70;
			data.content.counter = null;
			data.content.text = 0;
		} else if (data.content.size === 45) {
			width = (data.content.counter ? (data.content.counter === 'top' ? 115 : 160) : 45);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 55 : 125);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 80 : 150);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 10 : 80);
			}
			height = (data.content.counter === 'top' ? 100 : 50);
		} else if (data.content.size === 30) {
			width = (data.content.counter ? (data.content.counter === 'top' ? 85 : 115) : 30);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 25 : 80);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 40 : 95);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 0 : 50);
			}
			height = (data.content.counter === 'top' ? 70 : 35);
		} else if (data.content.size === 20) {
			width = (data.content.counter ? (data.content.counter === 'top' ? 75 : 100) : 25);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 20 : 70);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 40 : 90);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 0 : 45);
			}
			height = (data.content.counter === 'top' ? 65 : 30);
		} else { // 12
			width = (data.content.counter ? (data.content.counter === 'top' ? 70 : 85) : 20);
			if (data.content.text === 3) {
				width += (data.content.counter === 'top' ? 10 : 60);
			} else if (data.content.text === 2) {
				width += (data.content.counter === 'top' ? 25 : 75);
			} else if (data.content.text === 1) {
				width += (data.content.counter === 'top' ? 0 : 40);
			}
			height = (data.content.counter === 'top' ? 50 : 25);
		}
		data.content.opts = "{width:" + width
				+ ",height:" + height
				+ ",st:'" + data.content.style + "'"
				+ ",sz:" + data.content.size
				+ (data.content.counter ? ((data.content.counter === 'top') ? ",vt:'1'" : "") : ",nc:1")
				+ (data.content.text ? (",ck:" + data.content.text) : ",nt:1")
			+ "}";
		rwidth = width;
		rheight = height;
		if (data.content.counter === 'top' && data.content.size > 20) {
			rheight += data.content.size;
		} else if (data.content.size === 150) {
			rwidth += 8;
			rheight += 8;
		}

		this.setSize(rwidth, rheight);
	},
	updateFinalUrl: function(data, api) {
		if(/[(http(s)?):\/\/(www\.)?a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/im.test(data.content.url)
			|| data.content.url == '') {
			if (api) {
				this.setSize(125, 25);
				this.displayErrorMessage(false);
				api.setError(__(''));
			}
			data.content.finalUrl = data.content.url
		} else {
			if (api) {
				this.setSize(190, 150);
				this.setErrorMessage(__('Invalid URL'));
				api.setError(__('Invalid URL'));
			}
			data.content.finalUrl = 'https://www.google.com';
		}
	},
	openAction: function(fields, data, elem) {
		var itm;
		fields.url.setText(data.content.url);
		itm = fields.size.getItemById('#' + data.content.size);
		fields.size.selectItem(itm);
		itm = fields.style.getItemById(data.content.style);
		fields.style.selectItem(itm);
		itm = fields.counter.getItemById(data.content.counter ? data.content.counter : 'none');
		fields.counter.selectItem(itm);
		itm = fields.text.getItemById('#' + data.content.text);
		fields.text.selectItem(itm);
	},
	applyAction: function(fields, data, elem) {
		var itm, width, height, rwidth, rheight;
		data.content.url = fields.url.getText();
		itm = fields.size.getSelectedItem();
		data.content.size = itm.getOriginal().value;
		itm = fields.style.getSelectedItem();
		data.content.style = itm.getOriginal().id;
		itm = fields.counter.getSelectedItem();
		data.content.counter = itm.getOriginal().value;
		itm = fields.text.getSelectedItem();
		data.content.text = itm.getOriginal().value;
		this.updateFinalUrl(data);
		this.updatePluginPreview(data);
	},
	loadAction: function(data) {
		if (!data.content.url || data.content.url === 'http://dev.ok.ru')
			data.content.url = '';
		if (!data.content.size) data.content.size = 12;
		if (!data.content.style) data.content.style = 'oval';
		if (!data.content.counter) data.content.counter = 'right';
		if (!data.content.text) data.content.text = 1;
		if (!data.content.opts) data.content.opts = "{width:125,height:25,st:'oval',sz:12,ck:1}";
		this.updateFinalUrl(data);
	},
	loadedAction: function(data, elem) {
		this.pluginScoped.addListener(this, function() {
			window.OK.CONNECT.insertGroupWidget(data.id + '_ok_shareWidget', data.content.groupId, data.content.opts);
		});
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"hipay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/hipay","customConfiguration":null};
PluginWrapper._config.id = 'hipay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/hipay\/main.png";
PluginWrapper._config.template = "{{^isPreview}}\n{{^isPublished}}\n<script>\n    $.ajax({\n        url: \"{{{serviceUrl}}}\",\n        type: \"POST\",\n        data: {apiKey: \"{{content.apiKey}}\", apiSecretKey: \"{{content.apiSecretKey}}\", siteId: \"{{content.siteId}}\", productName: \"{{content.productName}}\", amount: \"{{content.amount}}\", currency: \"{{content.currency}}\"},\n        success: function (data)\n        {\n            $('#hipay_{{id}}').html(data);\n        }\n    });\n<\/script>\n{{\/isPublished}}\n{{\/isPreview}}\n{{#content.store}}\n<form data-gateway-id=\"Hipay\" method=\"POST\" accept-charset=\"utf-8\">\n\t<input type=\"hidden\" name=\"callbackurl\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"orderId\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"productName\" value=\"{{content.productName}}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"image\" src=\"http:\/\/i.imgur.com\/V545yLD.png\"\/>\n<\/form>\n{{\/content.store}}\n{{^content.store}}\n<div id=\"hipay_{{id}}\">{{{requireService}}}<\/div>\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
ElementRegister.registerPaymentGateway({
    name: __('HiPay'),
    id: 'hipay',
    keyField: __('API Key'),
    keyFieldId: 'apiKey',
    keyField2: __('API Secret Key'),
    keyField2Id: 'apiSecretKey',
    keyField3: __('Site Merchant ID'),
    keyField3Id: 'siteId',
    titleFieldId: 'label',
    nameFieldId: 'productName',
    priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['apiKey', 'apiSecretKey', 'siteId']
});
PluginWrapper.registerPlugin('hipay', {
    name: 'HiPay',
    element: {
        minSize: {width: 162, height: 56},
        defaultSize: {width: 162, height: 56},
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [
            {children: [{type: 'VerticalLayout', spacing: 15, children: [
                            {type: 'HorizontalLayout', columnWeights: [4, 4], css: {marginTop: 15}, children: [
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('API Key')},
                                            {type: 'TextField', id: 'apiKey'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('API Secret Key')},
                                            {type: 'TextField', id: 'apiSecretKey'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Site Merchant ID')},
                                            {type: 'TextField', id: 'siteId'}
                                        ]}
                                ]},
                            {type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Item Name'), helpText: __('Title of what you are paying for')},
                                            {type: 'TextField', id: 'productName'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Amount')},
                                            {type: 'TextField', id: 'amount'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Currency')},
                                            {type: 'DropdownBox', id: 'currency', options: [
                                                    {id: '#EUR', name: 'EUR', value: 'EUR'},
                                                    {id: '#USD', name: 'USD', value: 'USD'}
                                                ]}
                                        ]}
                                ]}
                        ]}
                ]}
        ]
    },
    resizeAction: function (data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function () {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function (fields, data, elem) {
        fields.apiKey.setText(data.content.apiKey);
        fields.apiSecretKey.setText(data.content.apiSecretKey);
        fields.productName.setText(data.content.productName);
        fields.amount.setText(data.content.amount);
        fields.siteId.setText(data.content.siteId);

        var itm;
        itm = fields.currency.getItemById('#' + data.content.currency);
        fields.currency.selectItem(itm);
    },
    applyAction: function (fields, data, elem) {
        data.content.apiKey = fields.apiKey.getText();
        data.content.apiSecretKey = fields.apiSecretKey.getText();
        data.content.productName = fields.productName.getText();
        data.content.amount = fields.amount.getText();
        data.content.siteId = fields.siteId.getText();

        var itm;
        itm = fields.currency.getSelectedItem();
        data.content.currency = itm.getOriginal().value;

    },
    loadAction: function (data) {
        if (!data.content.apiKey)
            data.content.apiKey = '5a93f0a8a8c2a9a953029a2e8719ab56';
        if (!data.content.apiSecretKey)
            data.content.apiSecretKey = 'c883cc5dd1d8c5ba793cb6733b5f8804';
        if (!data.content.siteId)
            data.content.siteId = '123456';
        if (!data.content.productName)
            data.content.productName = 'Title of what you are paying for';
        if (!data.content.amount)
            data.content.amount = '10.20';
        if (!data.content.currency)
            data.content.currency = 'EUR';
        data.serviceUrl = this.serviceUrl;

    }
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"qiwi","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/qiwi","customConfiguration":null};
PluginWrapper._config.id = 'qiwi';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/qiwi\/main.png";
PluginWrapper._config.template = "<form id=\"{{id}}_form\" data-gateway-id=\"Qiwi\" method=\"post\" style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"successUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"comment\" value=\"{{content.name}}\" \/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		return {
			button_label: __('Pay with %s').replace('%s', ''),
			button_color: '#fff',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#757575',
			button_border: {
				color: '#757575',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #757575' },
				cssRaw: 'border: 1px solid #757575'
			},
			logo: 'qiwi.svg',
			showlogo: true,
			logo_width: 90,
			button_padding: 1
		};
	},
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://qiwi.com/" target="_blank">https://qiwi.com/</a></p>'
				+ '<p><strong>Callback URL:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Qiwi' + '</pre></p>';
	}
};

ElementRegister.registerPaymentGateway({
	name: 'QIWI',
	id: 'qiwi',
	pageUrl: 'https://qiwi.com/',
	keyFieldId: 'public_key',
	keyField2Id: 'secret_key',
//	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Public Key'), id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'}/* ,
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}} */
	]},
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'amount',
	globalVars: ['public_key', 'secret_key'/* , 'demo' */],
	useStylesInStoreCart: true,
	defaultStyles: {
		logo: 'qiwi.svg'
	},
	settingsTabDef: Globals.getSettingsContent()
});

PluginWrapper.registerPlugin('qiwi', {
	name: 'QIWI',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 120, height: 70}
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Public Key')},
							{type: 'TextField', id: 'public_key'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Secret Key')},
							{type: 'TextField', id: 'secret_key'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'name'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'amount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: 'USD', name: 'USD'},
								{id: 'EUR', name: 'EUR'},
								{id: 'AED', name: 'AED'},
								{id: 'AFN', name: 'AFN'},
								{id: 'ALL', name: 'ALL'},
								{id: 'ARS', name: 'ARS'},
								{id: 'AUD', name: 'AUD'},
								{id: 'AZN', name: 'AZN'},
								{id: 'BBD', name: 'BBD'},
								{id: 'BDT', name: 'BDT'},
								{id: 'BGN', name: 'BGN'},
								{id: 'BMD', name: 'BMD'},
								{id: 'BND', name: 'BND'},
								{id: 'BOB', name: 'BOB'},
								{id: 'BRL', name: 'BRL'},
								{id: 'BSD', name: 'BSD'},
								{id: 'BWP', name: 'BWP'},
								{id: 'BZD', name: 'BZD'},
								{id: 'CAD', name: 'CAD'},
								{id: 'CHF', name: 'CHF'},
								{id: 'CLP', name: 'CLP'},
								{id: 'CNY', name: 'CNY'},
								{id: 'COP', name: 'COP'},
								{id: 'CRC', name: 'CRC'},
								{id: 'CZK', name: 'CZK'},
								{id: 'DKK', name: 'DKK'},
								{id: 'DOP', name: 'DOP'},
								{id: 'DZD', name: 'DZD'},
								{id: 'EGP', name: 'EGP'},
								{id: 'FJD', name: 'FJD'},
								{id: 'GBP', name: 'GBP'},
								{id: 'GTQ', name: 'GTQ'},
								{id: 'HKD', name: 'HKD'},
								{id: 'HNL', name: 'HNL'},
								{id: 'HRK', name: 'HRK'},
								{id: 'HUF', name: 'HUF'},
								{id: 'IDR', name: 'IDR'},
								{id: 'ILS', name: 'ILS'},
								{id: 'INR', name: 'INR'},
								{id: 'JMD', name: 'JMD'},
								{id: 'JPY', name: 'JPY'},
								{id: 'KES', name: 'KES'},
								{id: 'KRW', name: 'KRW'},
								{id: 'KZT', name: 'KZT'},
								{id: 'LAK', name: 'LAK'},
								{id: 'LBP', name: 'LBP'},
								{id: 'LKR', name: 'LKR'},
								{id: 'LRD', name: 'LRD'},
								{id: 'MAD', name: 'MAD'},
								{id: 'MMK', name: 'MMK'},
								{id: 'MOP', name: 'MOP'},
								{id: 'MRO', name: 'MRO'},
								{id: 'MUR', name: 'MUR'},
								{id: 'MVR', name: 'MVR'},
								{id: 'MXN', name: 'MXN'},
								{id: 'MYR', name: 'MYR'},
								{id: 'NIO', name: 'NIO'},
								{id: 'NOK', name: 'NOK'},
								{id: 'NPR', name: 'NPR'},
								{id: 'NZD', name: 'NZD'},
								{id: 'PEN', name: 'PEN'},
								{id: 'PGK', name: 'PGK'},
								{id: 'PHP', name: 'PHP'},
								{id: 'PKR', name: 'PKR'},
								{id: 'PLN', name: 'PLN'},
								{id: 'QAR', name: 'QAR'},
								{id: 'RON', name: 'RON'},
								{id: 'RUB', name: 'RUB'},
								{id: 'SAR', name: 'SAR'},
								{id: 'SBD', name: 'SBD'},
								{id: 'SCR', name: 'SCR'},
								{id: 'SEK', name: 'SEK'},
								{id: 'SGD', name: 'SGD'},
								{id: 'SYP', name: 'SYP'},
								{id: 'THB', name: 'THB'},
								{id: 'TOP', name: 'TOP'},
								{id: 'TRY', name: 'TRY'},
								{id: 'TTD', name: 'TTD'},
								{id: 'TWD', name: 'TWD'},
								{id: 'UAH', name: 'UAH'},
								{id: 'VND', name: 'VND'},
								{id: 'VUV', name: 'VUV'},
								{id: 'WST', name: 'WST'},
								{id: 'XCD', name: 'XCD'},
								{id: 'XOF', name: 'XOF'},
								{id: 'YER', name: 'YER'},
								{id: 'ZAR', name: 'ZAR'}
							]}
						]}
					]}
				]}/* ,
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]} */
			]},
			PluginWrapper.paymentGatewayStyleTabDef()
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		fields.public_key.setText(data.content.public_key);
		fields.secret_key.setText(data.content.secret_key);
		fields.amount.setText(data.content.amount);
		fields.name.setText(data.content.name);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.public_key = fields.public_key.getText();
		data.content.secret_key = fields.secret_key.getText();
		data.content.name = fields.name.getText();
		data.content.amount = fields.amount.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__globalVars = ['public_key', 'secret_key'/* , 'demo' */];
		if (!data.content.public_key) data.content.public_key = '';
		if (!data.content.secret_key) data.content.secret_key = '';
		if (!data.content.name) data.content.name = '';
		if (!data.content.amount) data.content.summ = '1';
		if (!data.content.currency) data.content.currency = 'USD';
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"ideal_payment","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/ideal_payment","customConfiguration":null};
PluginWrapper._config.id = 'ideal_payment';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/ideal_payment\/main.png";
PluginWrapper._config.template = "<form id=\"{{id}}_form\" method=\"post\" action=\"https:\/\/internetkassa.abnamro.nl\/ncol\/prod\/orderstandard.asp\" target=\"_blank\" class=\"ideal\" data-gateway-id=\"iDEAL\"{{#content.store}} data-amount-onchange=\"ideal_amount_onchange\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"PSPID\" value=\"{{content.pspid}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"orderID\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"orderID\" value=\"{{content.orderId}}\" \/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.pamount}}\"{{#content.store}}data-onchange=\"ideal_amount_onchange\"{{\/content.store}} \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"PM\" value=\"iDEAL\" \/>\n\t<input type=\"hidden\" name=\"COM\" value=\"{{content.description}}\" \/>\n\t<button class=\"btn btn-default btn-sm iDEALeasy\" type=\"submit\" name=\"submit1\" value=\"submit\" style=\"width: 100%; height: 100%; white-space: normal; overflow: hidden;\n\t\t\tbackground-color: {{#content.button_color}}{{content.button_color}}{{\/content.button_color}}{{^content.button_color}}#fff{{\/content.button_color}};\n\t\t\t{{#content.buttonBorderCss}}{{content.buttonBorderCss}}{{\/content.buttonBorderCss}}\">\n\t\t<strong style=\"color: {{#content.label_color}}{{content.label_color}}{{\/content.label_color}}{{^content.label_color}}#000{{\/content.label_color}};\n\t\t\t\t\t   font-family: {{#content.font_family}}{{content.font_family}}{{\/content.font_family}}{{^content.font_family}}Arial{{\/content.font_family}};\n\t\t\t\t\t   font-size: {{#content.font_size}}{{content.font_size}}px{{\/content.font_size}}{{^content.font_size}}12px{{\/content.font_size}};\">{{content.button_label}}<\/strong>\n\t\t{{#content.showlogo}}<img src=\"{{^isPublished}}plugins\/ideal_payment\/site\/{{\/isPublished}}gallery_gen\/ideal_payment\/ideal_payment.svg\" alt=\"Click\" style=\"width: {{content.logo_width}}px; max-width: 100%;\" \/>{{\/content.showlogo}}\n\t<\/button>\n<\/form>\n{{#content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar ideal_amount_onchange = function(field) {\n\t\t\tfield.value = Math.floor(parseFloat(field.value) * 100);\n\t\t};\n\t\twindow.ideal_amount_onchange = ideal_amount_onchange;\n\t})();\n<\/script>\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
ElementRegister.registerPaymentGateway({
	name: 'iDEAL',
	id: 'ideal_payment',
	pageUrl: 'https://www.ideal.nl/',
	keyField: __('PSPID'),
	keyFieldId: 'pspid',
	titleFieldId: 'button_label',
	nameFieldId: 'description',
	priceFieldId: 'pamount',
	currencyFieldId: 'currency'
});
PluginWrapper.registerPlugin('ideal_payment', {
	name: 'iDEAL',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 90, height: 90}
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('PSPID'), helpText:__("Your affiliation name in ABN-AMRO system")},
						{type: 'TextField', id: 'pspid'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText:__("The name of the goods. Cannot contain special symbols")},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText:__('Amount to be transferred')},
							{type: 'TextField', id: 'amount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#GBP', name: 'GBP', value: 'GBP'},
								{id: '#HKD', name: 'HKD', value: 'HKD'},
								{id: '#SGD', name: 'SGD', value: 'SGD'},
								{id: '#JPY', name: 'JPY', value: 'JPY'},
								{id: '#CAD', name: 'CAD', value: 'CAD'},
								{id: '#AUD', name: 'AUD', value: 'AUD'},
								{id: '#CHF', name: 'CHF', value: 'CHF'},
								{id: '#DKK', name: 'DKK', value: 'DKK'},
								{id: '#SEK', name: 'SEK', value: 'SEK'},
								{id: '#NOK', name: 'NOK', value: 'NOK'},
								{id: '#ILS', name: 'ILS', value: 'ILS'},
								{id: '#MYR', name: 'MYR', value: 'MYR'},
								{id: '#NZD', name: 'NZD', value: 'NZD'},
								{id: '#TRY', name: 'TRY', value: 'TRY'},
								{id: '#AED', name: 'AED', value: 'AED'},
								{id: '#MAD', name: 'MAD', value: 'MAD'},
								{id: '#QAR', name: 'QAR', value: 'QAR'},
								{id: '#SAR', name: 'SAR', value: 'SAR'},
								{id: '#TWD', name: 'TWD', value: 'TWD'},
								{id: '#THB', name: 'THB', value: 'THB'},
								{id: '#CZK', name: 'CZK', value: 'CZK'},
								{id: '#HUF', name: 'HUF', value: 'HUF'},
								{id: '#SKK', name: 'SKK', value: 'SKK'},
								{id: '#BGN', name: 'BGN', value: 'BGN'},
								{id: '#PLN', name: 'PLN', value: 'PLN'},
								{id: '#ISK', name: 'ISK', value: 'ISK'},
								{id: '#INR', name: 'INR', value: 'INR'},
								{id: '#KRW', name: 'KRW', value: 'KRW'},
								{id: '#ZAR', name: 'ZAR', value: 'ZAR'},
								{id: '#RON', name: 'RON', value: 'RON'},
								{id: '#HRK', name: 'HRK', value: 'HRK'},
								{id: '#JOD', name: 'JOD', value: 'JOD'},
								{id: '#OMR', name: 'OMR', value: 'OMR'},
								{id: '#RSD', name: 'RSD', value: 'RSD'},
								{id: '#TND', name: 'TND', value: 'TND'}
							]}
						]}
					]},
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Button Label')},
					{type: 'TextField', id: 'button_label'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Border')},
						{type: 'BorderSelector', id: 'button_border'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background')},
						{type: 'ColorSelector', id: 'button_color'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Size')},
						{type: 'SizeSelector', id: 'font_size'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Color')},
						{type: 'ColorSelector', id: 'label_color', noTransparent: true}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', css: {width: 120}, children: [
						{type: 'Label', text: __('Font')},
						{type: 'FontFamilySelector', id: 'font_family', noFixedWidth: true}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Max logo width')},
						{type: 'SizeSelector', id: 'logo_width', max: 180, min: 20}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Show logo')},
						{type: 'RadioBox', id: 'showlogo1', label: __('Yes'), group: 'showlogo'},
						{type: 'RadioBox', id: 'showlogo0', label: __('No'), group: 'showlogo'}
					]}
				]}
			]}
		]
	},
	openAction: function(fields, data, elem) {
		fields.description.setText(data.content.description);
		fields.pspid.setText(data.content.pspid);
		fields.amount.setText(data.content.amount);
		var itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		
		fields.button_label.setText(data.content.button_label);
		fields.button_color.setValue(data.content.button_color);
		fields.font_family.setValue(data.content.font_family);
		fields.font_size.setValue(data.content.font_size);
		fields.label_color.setValue(data.content.label_color);
		fields.button_border.setValue(data.content.button_border);
		fields.showlogo1.setValue(data.content.showlogo === true);
		fields.showlogo0.setValue(data.content.showlogo === false);
		fields.logo_width.setValue(data.content.logo_width);
	},
	applyAction: function(fields, data, elem) {
		data.content.description = fields.description.getText();
		data.content.pspid = fields.pspid.getText();
		data.content.amount = fields.amount.getText();
		data.content.pamount = Math.floor(parseFloat(data.content.amount) * 100);
		var itm = fields.currency.getSelectedItem();
		data.content.orderId = this.StringHash.generate(17);
		data.content.currency = itm.getOriginal().value;

		data.content.button_label = fields.button_label.getText();
		data.content.button_color = fields.button_color.getValue();
		data.content.font_family = fields.font_family.getValue();
		data.content.font_size = fields.font_size.getValue();
		data.content.label_color = fields.label_color.getValue();
		data.content.button_border = fields.button_border.getValue();
		if (fields.showlogo1.getValue()) data.content.showlogo = true;
		if (fields.showlogo0.getValue()) data.content.showlogo = false;
		data.content.logo_width = fields.logo_width.getValue();
		data.content.buttonBorderCss = this.updateBorderCss(data);
	},
	updateBorderCss: function(data) {
		var borderCss = '';
		var border = data.content.button_border;
		if (border.css !== undefined) {
			if (typeof border.css === 'string') {
				borderCss = border.css;
			} else {
				for (var i in border.css) {
					borderCss += i + ': ' + border.css[i] + ';';
				}
			}
		} else {
			borderCss = 'border: ' + border.weight + 'px ' + border.style + ' ' + border.color + ';';
		}
		return borderCss;
	},
	loadAction: function (data) {
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.pspid) data.content.pspid = '';
		if (!data.content.amount) data.content.amount = '1';
		data.content.pamount = Math.floor(parseFloat(data.content.amount) * 100);
		if (!data.content.currency) data.content.currency = 'EUR';
		
		if (data.content.button_label === undefined) data.content.button_label = __('Pay with %s').replace('%s', '');
		if (!data.content.button_color) data.content.button_color = '#fff';
		if (!data.content.font_family) data.content.font_family = "'Roboto Condensed',Arial,sans-serif";
		if (!data.content.font_size) data.content.font_size = '14';
		if (!data.content.label_color) data.content.label_color = '#333333';
		if (!data.content.button_border) data.content.button_border = {
			color: '#cccccc',
			style: 'solid',
			weight: 1,
			css: { border: '1px solid #cccccc' }
		};
		if (data.content.showlogo === undefined) data.content.showlogo = true;
		if (!data.content.logo_width) data.content.logo_width = 55;
		data.content.buttonBorderCss = this.updateBorderCss(data);
	},
	StringHash: {
		_chars: ['A','B','C','D','E','F','G','H','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Z','1','2','3','4','5','6','7','8','9','0'],
		_getRandChar: function() {
			return this._chars[Math.floor(Math.random() * this._chars.length)];
		},
		generate: function(len) {
			if (!len) len = 17;
			var str = '';
			for (var i=0; i < len; i++) {
				str += this._getRandChar();
			}
			return str;
		}
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"baokim","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/baokim","customConfiguration":null};
PluginWrapper._config.id = 'baokim';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/baokim\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Baokim\"{{^content.store}} target=\"_blank\"{{\/content.store}} action=\"https:\/\/www.baokim.vn\/payment\/product\/version11\" method=\"get\" style=\"width: 100%; height: 100%;\">\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"business\" value=\"{{content.business}}\">\n\t<input type=\"hidden\" name=\"product_name\" value=\"{{content.product_name}}\">\n\t<input type=\"hidden\" name=\"product_price\" value=\"{{content.product_price}}\">\n\t<input type=\"hidden\" name=\"total_amount\" value=\"{{content.product_price}}\">\n\t<input type=\"hidden\" name=\"product_quantity\" value=\"1\">\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"order_id\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"url_success\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"url_cancel\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/baokim/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: "#cccccc",
				style: 'solid',
				weight: 1,
				differ: false,
				css: "1px solid #cccccc",
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'baokim_color.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'baokim_color.svg', name: 'coloured'},
			{id: 'baokim_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'BaoKim',
	id: 'baokim',
	pageUrl: 'https://www.baokim.vn/',
	keyField: __('Email'),
	keyFieldId: 'business',
	titleFieldId: 'label',
	nameFieldId: 'product_name',
	priceFieldId: 'product_price',
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'baokim', true),
});

PluginWrapper.registerPlugin('baokim', {
	name: 'BaoKim',
	element: {
		minSize: {width: 95, height: 30},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'business', type: 'BaokimBusiness', helpText:__("Email of account payer submitted to BaoKim (%s)").replace('%s', '<a href="http://baokim.vn" target="_blank">baokim.vn</a>'),
			get: function(data) { return data.content.business; },
			set: function(value, data) {
				data.content.business = value;
			}
		},
		{id: 'product_name', type: 'BaokimProductName',
			get: function(data) { return data.content.product_name; },
			set: function(value, data) {
				data.content.product_name = value;
			}
		},
		{id: 'product_price', type: 'BaokimProductPrice', helpText: __("Amount to be transferred") + ', ' + __('VND'),
			get: function(data) { return data.content.product_price; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.product_price = value;
			}
		},
	], Globals.getLogosList(), 'baokim'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Email'), helpText:__("Email of account payer submitted to BaoKim (%s)").replace('%s', '<a href="http://baokim.vn" target="_blank">baokim.vn</a>')},
					{type: 'TextField', id: 'business'}
				]},
				{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'product_name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred") + ', ' + __('VND')},
						{type: 'TextField', id: 'product_price'}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'baokim')
		]
	},
	openAction: function(fields, data, elem) {
		fields.product_name.setText(data.content.product_name);
		fields.business.setText(data.content.business);
		fields.product_price.setText(data.content.product_price);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.product_name = fields.product_name.getText();
		data.content.business = fields.business.getText();
		data.content.product_price = fields.product_price.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.product_name) data.content.product_name = ''; // Products
		if (!data.content.business) data.content.business = ''; // 1@bk.vn
		if (!data.content.product_price) data.content.product_price = '10000'; // 1199
		if (['logo.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'baokim_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"webpay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/webpay","customConfiguration":null};
PluginWrapper._config.id = 'webpay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/webpay\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Webpay\" action=\"https:\/\/{{#content.demo}}sandbox{{\/content.demo}}{{^content.demo}}payment{{\/content.demo}}.webpay.by\" method=\"post\"{{^content.store}} target=\"_blank\"{{\/content.store}} class=\"webpay\" style=\"width: 100%; height: 100%;\">\n    {{^content.store}}\n\t<input type=\"hidden\" name=\"*scart\" \/>\n    <input type=\"hidden\" name=\"wsb_version\" value=\"2\" \/>\n    <input type=\"hidden\" name=\"wsb_storeid\" value=\"{{content.wsb_storeid}}\" \/>\n    <input type=\"hidden\" name=\"wsb_order_num\" value=\"{{content.wsb_order_num}}\" \/>\n    <input type=\"hidden\" name=\"wsb_test\" value=\"0\" \/>\n    <input type=\"hidden\" name=\"wsb_currency_id\" value=\"{{content.wsb_currency_id}}\" \/>\n    <input type=\"hidden\" name=\"wsb_seed\" value=\"{{content.wsb_seed}}\" \/>\n    <input type=\"hidden\" name=\"wsb_invoice_item_name[0]\" value=\"{{content.wsb_invoice_item_name}}\" \/>\n    <input type=\"hidden\" name=\"wsb_invoice_item_quantity[0]\" value=\"1\" \/>\n    <input type=\"hidden\" name=\"wsb_invoice_item_price[0]\" value=\"{{content.wsb_invoice_item_price}}\" \/>\n    <input type=\"hidden\" name=\"wsb_total\" value=\"{{content.wsb_total}}\" \/>\n    <input type=\"hidden\" name=\"wsb_tax\" value=\"{{content.wsb_tax}}\" \/>\n    <input type=\"hidden\" name=\"wsb_shipping_name\" value=\"{{content.wsb_shipping_name}}\" \/>\n    <input type=\"hidden\" name=\"wsb_shipping_price\" value=\"{{content.wsb_shipping_price}}\" \/>\n    <input type=\"hidden\" name=\"wsb_store\" value=\"{{content.wsb_store}}\" \/>\n    <input type=\"submit\" class=\"btn btn-info\" value=\"{{content.label}}\"\n           title=\"{{content.label}}\"\n           style=\"width: 100%; height: 100%;\n           {{#content.border}}border: {{content.border.style}} {{content.border.weight}}px {{content.border.color}};{{\/content.border}}\n           {{#content.background}}background: {{content.background}};{{\/content.background}}\n           padding: 6px 10px;\n           {{#content.fontColor}}color: {{content.fontColor}};{{\/content.fontColor}}\n           {{#content.fontSize}}font-size: {{content.fontSize}}px;{{\/content.fontSize}}\n           {{#content.fontFamily}}font-family: {{content.fontFamily}};{{\/content.fontFamily}}\"\n    \/>\n    {{\/content.store}}\n\t{{#content.demo}}\n\t<input type=\"hidden\" name=\"wsb_test\" value=\"1\" \/>\n\t{{\/content.demo}}\n    {{#content.store}}\n    <input type=\"hidden\" name=\"total\" value=\"{{content.wsb_invoice_item_price}}\" \/>\n    <input type=\"hidden\" name=\"currency_id\" value=\"{{content.wsb_currency_id}}\" \/>\n    <input type=\"hidden\" name=\"order_num\" value=\"{transactionId}\" \/>\n    <input type=\"hidden\" name=\"return_url\" value=\"{returnUrl}\" \/>\n    <input type=\"hidden\" name=\"cancel_return_url\" value=\"{cancelUrl}\" \/>\n    <input type=\"hidden\" name=\"notify_url\" value=\"{callbackUrl}\" \/>\n    <input type=\"hidden\" name=\"store\" value=\"Store\" \/>\n    <input type=\"submit\" class=\"btn btn-info\" value=\"{{content.label}}\" title=\"{{content.label}}\"\n\t\t   style=\"width: 160px;\n           height: 40px;\n           border: solid 2px #fbe116;\n           background: #fbe116;\n           padding: 6px 10px;\n           color: #000;\n           font-size: 15px;\n           font-family: Trebuchet MS,sans-serif;\" \/>\n    {{\/content.store}}\n<\/form>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
ElementRegister.registerPaymentGateway({
	name: 'Webpay',
	id: 'webpay',
	pageUrl: 'https://webpay.by/',
	keyField: __('Store identifier'),
	keyFieldId: 'wsb_storeid',
	keyField2: __('Secret Key'),
	keyField2Id: 'secret_key',
	keyField3: {type: 'CheckBox', label: __('Test mode'), css: {padding: 7}},
	keyField3Id: 'demo',
	titleFieldId: 'label',
	nameFieldId: 'wsb_invoice_item_name',
	priceFieldId: 'wsb_invoice_item_price',
	currencyFieldId: 'wsb_currency_id',
	globalVars: ['wsb_storeid', 'secret_key']
});
PluginWrapper.registerPlugin('webpay', {
	name: 'Webpay',
	element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 40},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [6, 6], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Store identifier'), helpText: __('This identifier is created during registration in WebPay and is sent via email')},
						{type: 'TextField', id: 'wsb_storeid'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key'), helpText: __('The value of the Secret Key field in your billing account settings')},
						{type: 'TextField', id: 'secret_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'wsb_invoice_item_name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'wsb_invoice_item_price'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'wsb_currency_id', options: [
							{id: '#BYN', name: 'BYN', value: 'BYN'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#RUB', name: 'RUB', value: 'RUB'}
						]}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [4, 4, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Delivery method')},
							{type: 'TextField', id: 'wsb_shipping_name'}
						]}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Shipping'), helpText: __('The value of this field is the amount of delivery added to the total order')},
							{type: 'TextField', id: 'wsb_shipping_price'}
						]}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Tax amount'), helpText: __('The value of this field is the tax amount added to the total order amount.')},
							{type: 'TextField', id: 'wsb_tax'}
						]}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Button Label'), helpText: __('Label name on submit button')},
							{type: 'TextField', id: 'label'}
						]}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Store name'), helpText: __('The store name which will be displayed on the payment form. Maximum field length is 64 characters.')},
							{type: 'TextField', id: 'wsb_store'}
						]}
					]}
				]},
				{type: 'FlowLayout', spacing: 15, css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Border')},
						{type: 'BorderSelector', id: 'border'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background')},
						{type: 'ColorSelector', id: 'background'}
					]},
					{type: 'VerticalLayout', css: {width: 150}, children: [
						{type: 'Label', text: __('Font')},
						{type: 'FontFamilySelector', id: 'fontFamily', noFixedWidth: true}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Size')},
						{type: 'SizeSelector', id: 'fontSize'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Color')},
						{type: 'ColorSelector', id: 'fontColor', noTransparent: true}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]}
		]
	},
	openAction: function (fields, data, elem) {
		fields.label.setText(data.content.label);
		fields.secret_key.setText(data.content.secret_key);
		fields.wsb_storeid.setText(data.content.wsb_storeid);
		fields.wsb_store.setText(data.content.wsb_store);
		fields.wsb_invoice_item_name.setText(data.content.wsb_invoice_item_name);
		fields.wsb_invoice_item_price.setText(data.content.wsb_invoice_item_price);
		fields.wsb_tax.setText(data.content.wsb_tax);
		fields.wsb_shipping_name.setText(data.content.wsb_shipping_name);
		fields.wsb_shipping_price.setText(data.content.wsb_shipping_price);
		var itm;
		itm = fields.wsb_currency_id.getItemById('#' + data.content.wsb_currency_id);
		fields.wsb_currency_id.selectItem(itm);
		fields.border.setValue(data.content.border);
		fields.background.setValue(data.content.background);
		fields.fontFamily.setValue(data.content.fontFamily);
		fields.fontSize.setValue(data.content.fontSize);
		fields.fontColor.setValue(data.content.fontColor);
		fields.demo.setValue(data.content.demo);
	},
	applyAction: function (fields, data, elem) {
		data.content.label = fields.label.getText();
		data.content.secret_key = fields.secret_key.getText();
		data.content.wsb_storeid = fields.wsb_storeid.getText();
		data.content.wsb_store = fields.wsb_store.getText();
		data.content.wsb_invoice_item_name = fields.wsb_invoice_item_name.getText();
		data.content.wsb_invoice_item_price = fields.wsb_invoice_item_price.getText();
		data.content.wsb_tax = fields.wsb_tax.getText();
		data.content.wsb_shipping_name = fields.wsb_shipping_name.getText();
		data.content.wsb_shipping_price = fields.wsb_shipping_price.getText();
		data.content.wsb_total = parseInt(data.content.wsb_invoice_item_price) + parseInt(data.content.wsb_tax) + parseInt(data.content.wsb_shipping_price);
		var itm = fields.wsb_currency_id.getSelectedItem();
		data.content.wsb_currency_id = itm.getOriginal().value;
		data.content.border = fields.border.getValue();
		data.content.background = fields.background.getValue();
		data.content.fontFamily = fields.fontFamily.getValue();
		data.content.fontSize = fields.fontSize.getValue();
		data.content.fontColor = fields.fontColor.getValue();
		data.content.demo = fields.demo.getValue();
		data.content.borderCss = this.updateBorderCss(data);
	},
	updateBorderCss: function(data) {
		var borderCss = '';
		var border = data.content.border;
		if (border.css !== undefined) {
			if (typeof border.css === 'string') {
				borderCss = border.css;
			} else {
				for (var i in border.css) {
					borderCss += i + ': ' + border.css[i] + ';';
				}
			}
		} else {
			borderCss = 'border: ' + border.weight + 'px ' + border.style + ' ' + border.color + ';';
		}
		return borderCss;
	},
	loadAction: function (data) {
		if (!data.content.label) data.content.label = 'Pay via WebPay';
		if (!data.content.border) data.content.border = {color: '#fbe116', style: 'solid', weight: 2};
		if (!data.content.background) data.content.background = '#fbe116';
		if (!data.content.fontFamily) data.content.fontFamily = 'Trebuchet MS,sans-serif';
		if (!data.content.fontSize) data.content.fontSize = '15';
		if (!data.content.fontColor) data.content.fontColor = '#000';
		if (!data.content.secret_key) data.content.secret_key = '123456789';
		if (!data.content.wsb_storeid) data.content.wsb_storeid = '123456789';
		if (!data.content.wsb_store) data.content.wsb_store = 'Store name';
		if (!data.content.wsb_currency_id) data.content.wsb_currency_id = 'BYN';
		if (!data.content.wsb_seed) data.content.wsb_seed = Date.now();
		if (!data.content.wsb_invoice_item_name) data.content.wsb_invoice_item_name = 'Product 1';
		if (!data.content.wsb_invoice_item_price) data.content.wsb_invoice_item_price = '10';
		if (!data.content.wsb_total) data.content.wsb_total = '10';
		if (!data.content.wsb_tax) data.content.wsb_tax = '0';
		if (!data.content.wsb_shipping_name) data.content.wsb_shipping_name = 'Courier delivery';
		if (!data.content.wsb_shipping_price) data.content.wsb_shipping_price = '0';
		if (data.content.demo === undefined) data.content.demo = false;
		data.content.borderCss = this.updateBorderCss(data);
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"webmoney_widget","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/webmoney_widget","customConfiguration":null};
PluginWrapper._config.id = 'webmoney_widget';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/webmoney_widget\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n<div class=\"alert alert-warning\">{{tr.preview_not_available}}<\/div>\n{{\/isPublished}}\n{{#isPublished}}\n<script id=\"wm-script\" type=\"text\/javascript\"\n\t\tsrc=\"\/\/merchant.webmoney.ru\/conf\/lib\/wm-simple-x20.min.js?lang=en&amp;wmid={{content.wmId}}&amp;purse={{content.purseId}}&amp;key={{content.key}}&amp;amount={{content.amount}}&amp;desc={{content.descriptionUrlEnc}}\"><\/script>\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;

PluginWrapper.registerPlugin('webmoney_widget', {
	name: __('WM Widget'),
	element: {
		minSize: {width: 25, height: 25},
		defaultSize: {width: 450, height: 224},
		resizable: false
	},
	properties: [
		{id: 'wmId', type: 'WebmoneyWidgetWmId',
			get: function(data) { return data.content.wmId; },
			set: function(value, data) {
				data.content.wmId = value;
			}
		},
		{id: 'purseId', type: 'WebmoneyWidgetPurseId',
			get: function(data) { return data.content.purseId; },
			set: function(value, data) {
				data.content.purseId = value;
			}
		},
		{id: 'key', type: 'WebmoneyWidgetKey', helpText: __('"Secret Key X20" field from your purse settings page'/* ctx: Option name in WM Widget plugin properties */),
			get: function(data) { return data.content.key; },
			set: function(value, data) {
				data.content.key = value;
			}
		},
		{id: 'description', type: 'WebmoneyWidgetDescription',
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'WebmoneyWidgetAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	],
	propertyDialog: {
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'HorizontalLayout', children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('WebMoney ID')},
							{type: 'TextField', id: 'wmId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Purse ID')},
							{type: 'TextField', id: 'purseId'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Key'), helpText: __('"Secret Key X20" field from your purse settings page'/* ctx: Option name in WM Widget plugin properties */)},
							{type: 'TextField', id: 'key'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [9, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Description')},
							{type: 'TextField', id: 'description'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText: __('In WM units defined by purse')},
							{type: 'TextField', id: 'amount'}
						]}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		urlEncode: function (str) {
			//       discuss at: http://phpjs.org/functions/urlencode/
			//      original by: Philip Peterson
			//      improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      improved by: Brett Zamir (http://brett-zamir.me)
			//      improved by: Lars Fischer
			//         input by: AJ
			//         input by: travc
			//         input by: Brett Zamir (http://brett-zamir.me)
			//         input by: Ratheous
			//      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)
			//      bugfixed by: Joris
			// reimplemented by: Brett Zamir (http://brett-zamir.me)
			// reimplemented by: Brett Zamir (http://brett-zamir.me)

			str = (str + '').toString();
			return window.encodeURIComponent(str)
					.replace(/!/g, '%21')
					.replace(/'/g, '%27')
					.replace(/\(/g, '%28')
					.replace(/\)/g, '%29')
					.replace(/\*/g, '%2A')
					.replace(/%20/g, '+');
		}
	},
	
	resizeAction: function(data, elem) {
		elem.find('.wmbtn').eq(0).css({width: data.width, height: data.height});
	},
	openAction: function(fields, data, elem) {
		fields.wmId.setText(data.content.wmId);
		fields.purseId.setText(data.content.purseId);
		fields.key.setText(data.content.key);
		fields.amount.setText(data.content.amount);
		fields.description.setText(data.content.description);
	},
	applyAction: function(fields, data, elem) {
		data.content.wmId = fields.wmId.getText();
		data.content.purseId = fields.purseId.getText();
		data.content.key = fields.key.getText();
		data.content.amount = parseFloat(fields.amount.getText().replace(',', '.'));
		if (isNaN(data.content.amount)) data.content.amount = 1.0;
		data.content.description = fields.description.getText();
		data.content.descriptionUrlEnc = this.pluginScoped.urlEncode(data.content.description);
	},
	loadAction: function(data) {
		if (!data.content.wmId) data.content.wmId = '';
		if (!data.content.purseId) data.content.purseId = '';
		if (!data.content.key) data.content.key = '';
		if (!data.content.amount) data.content.amount = 1.0;
		if (!data.content.description) data.content.description = __('Donation to charitable fund');
		if (!data.content.descriptionUrlEnc) data.content.descriptionUrlEnc = this.pluginScoped.urlEncode(data.content.description);
		data.tr = {preview_not_available: __('Preview not available')};
	}
	
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"skrill","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/skrill","customConfiguration":null};
PluginWrapper._config.id = 'skrill';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/skrill\/main.png";
PluginWrapper._config.template = "<form action=\"{{#content.demo}}https:\/\/www.skrill.com\/app\/test_payment.pl{{\/content.demo}}{{^content.demo}}https:\/\/pay.skrill.com{{\/content.demo}}\" method=\"post\" data-gateway-id=\"Skrill\" {{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"pay_to_email\" value=\"{{content.email}}\"\/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\"\/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\"\/>\n\t<input type=\"hidden\" name=\"detail1_description\" value=\"{{content.description}}\"\/>\n\t<input type=\"hidden\" name=\"detail1_text\" value=\"{{content.text}}\"\/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"status_url\" value=\"{callbackUrl}\"\/>\n\t<input type=\"hidden\" name=\"return_url\" value=\"{returnUrl}\"\/>\n\t<input type=\"hidden\" name=\"cancel_url\" value=\"{cancelUrl}\"\/>\n\t<input type=\"hidden\" name=\"transaction_id\" value=\"{transactionId}\"\/>\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/skrill/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#811E68',
			button_border: {
				color: '#fff',
				style: 'none',
				weight: 1,
				css: { border: '1px solid #fff' },
				cssRaw: 'border: 1px solid #fff'
			},
			logo: 'skrill_white.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#c781b8'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'skrill_color.svg', name: 'coloured'},
			{id: 'skrill_black.svg', name: 'black'},
			{id: 'skrill_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Skrill',
	id: 'skrill',
	pageUrl: 'https://www.skrill.com/',
	keyFieldId: 'email',
	keyField2Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [12,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Email'), id: 'key'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key2', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'ht_title',
	nameFieldId: 'text,description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['email', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'skrill', true)
});

PluginWrapper.registerPlugin('skrill', {
	name: 'Skrill',
	element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'email', type: 'SkrillEmail', helpText: __('The email address of your Skrill'),
			get: function(data) { return data.content.email; },
			set: function(value, data) {
				data.content.email = value;
			}
		},
		{id: 'description', type: 'SkrillDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'text', type: 'SkrillText',
			get: function(data) { return data.content.text; },
			set: function(value, data) {
				data.content.text = value;
			}
		},
		{id: 'amount', type: 'SkrillAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'SkrillCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'SkrillDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'skrill'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Email'), helpText: __('The email address of your Skrill')},
					{type: 'TextField', id: 'email'}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
					{type: 'TextField', id: 'description'}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Detailed text')},
						{type: 'TextField', id: 'text'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#GBP', name: 'GBP', value: 'GBP'},
							{id: '#AED', name: 'AED', value: 'AED'},
							{id: '#AUD', name: 'AUD', value: 'AUD'},
							{id: '#BGN', name: 'BGN', value: 'BGN'},
							{id: '#CAD', name: 'CAD', value: 'CAD'},
							{id: '#CHF', name: 'CHF', value: 'CHF'},
							{id: '#CZK', name: 'CZK', value: 'CZK'},
							{id: '#DKK', name: 'DKK', value: 'DKK'},
							{id: '#HKD', name: 'HKD', value: 'HKD'},
							{id: '#HRK', name: 'HRK', value: 'HRK'},
							{id: '#HUF', name: 'HUF', value: 'HUF'},
							{id: '#ILS', name: 'ILS', value: 'ILS'},
							{id: '#INR', name: 'INR', value: 'INR'},
							{id: '#ISK', name: 'ISK', value: 'ISK'},
							{id: '#JOD', name: 'JOD', value: 'JOD'},
							{id: '#JPY', name: 'JPY', value: 'JPY'},
							{id: '#KRW', name: 'KRW', value: 'KRW'},
							{id: '#MAD', name: 'MAD', value: 'MAD'},
							{id: '#MYR', name: 'MYR', value: 'MYR'},
							{id: '#NOK', name: 'NOK', value: 'NOK'},
							{id: '#NZD', name: 'NZD', value: 'NZD'},
							{id: '#OMR', name: 'OMR', value: 'OMR'},
							{id: '#PLN', name: 'PLN', value: 'PLN'},
							{id: '#QAR', name: 'QAR', value: 'QAR'},
							{id: '#RON', name: 'RON', value: 'RON'},
							{id: '#RSD', name: 'RSD', value: 'RSD'},
							{id: '#SAR', name: 'SAR', value: 'SAR'},
							{id: '#SEK', name: 'SEK', value: 'SEK'},
							{id: '#SGD', name: 'SGD', value: 'SGD'},
							{id: '#SKK', name: 'SKK', value: 'SKK'},
							{id: '#THB', name: 'THB', value: 'THB'},
							{id: '#TND', name: 'TND', value: 'TND'},
							{id: '#TRY', name: 'TRY', value: 'TRY'},
							{id: '#TWD', name: 'TWD', value: 'TWD'},
							{id: '#ZAR', name: 'ZAR', value: 'ZAR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'skrill')
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.amount.setText(data.content.amount);
		fields.description.setText(data.content.description);
		fields.text.setText(data.content.text);
		fields.email.setText(data.content.email);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.amount = fields.amount.getText();
		data.content.description = fields.description.getText();
		data.content.text = fields.text.getText();
		data.content.email = fields.email.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function(data) {
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			'ht_title': 'button_label',
			'border': 'button_border',
			'background': 'button_color',
			'fontFamily': 'font_family',
			'fontSize': 'font_size',
			'fontColor': 'label_color'
		});
		if (!data.content.amount) data.content.amount = '9.99';
		if (!data.content.currency) data.content.currency = 'EUR';
		if (!data.content.text) data.content.text = __('Skrill payment text');
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.email) data.content.email = '';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['logo.svg'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'skrill_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"robokassa","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/robokassa","customConfiguration":null};
PluginWrapper._config.id = 'robokassa';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/robokassa\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Robokassa\" method=\"post\" action=\"https:\/\/auth.robokassa.ru\/Merchant\/Index.aspx\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"MerchantLogin\" value=\"{{content.merch_id}}\" \/>\n\t<input type=\"hidden\" name=\"OutSum\" value=\"{{content.amount}}\" data-fixed-decimal=\"2\" \/>\n\t<input type=\"hidden\" name=\"InvDesc\" value=\"{{content.description}}\" \/>\n\t{{#content.demo}}\n\t<input type=\"hidden\" name=\"IsTest\" value=\"1\" \/>\n\t{{\/content.demo}}\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"InvId\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/robokassa/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://www.robokassa.ru/" target="_blank">https://www.robokassa.ru/</a></p>'
				+ '<p><strong>Result URL:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Robokassa' + '</pre></p>'
				+ '<p><strong>Success URL:</strong><br />'
				+ '<pre>' + base_url + 'store-return/Robokassa' + '</pre></p>'
				+ '<p><strong>Fail URL:</strong><br />'
				+ '<pre>' + base_url + 'store-cancel/Robokassa' + '</pre></p>';
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#e8edf1',
			button_border: {
				color: '#beccd5',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #beccd5' },
				cssRaw: 'border: 1px solid #beccd5'
			},
			logo: 'robokassa_color_3.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#7995b8'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'robokassa_color.svg', name: 'coloured'},
			{id: 'robokassa_color_2.svg', name: 'coloured 2'},
			{id: 'robokassa_color_3.svg', name: 'coloured 3'},
			{id: 'robokassa_black.svg', name: 'black'},
			{id: 'robokassa_black_2.svg', name: 'black 2'},
			{id: 'robokassa_black_3.svg', name: 'black 3'},
			{id: 'robokassa_white.svg', name: 'white', backgroundColor: '#000000'},
			{id: 'robokassa_white_2.svg', name: 'white 2', backgroundColor: '#000000'},
			{id: 'robokassa_white_3.svg', name: 'white 3', backgroundColor: '#000000'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Robokassa',
	id: 'robokassa',
	keyFieldId: 'merch_id',
	keyField2Id: 'merch_pass1',
	keyField3Id: 'merch_pass2',
	keyField4Id: 'hash_type',
	keyField5Id: 'demo',
	keyFieldDef: {type: 'VerticalLayout', children: [
		{type: 'HorizontalLayout', noPadding: true, columnWeights: [12,6,6,4], children: [
			{type: 'TextField', placeholder: __('Store identifier'), id: 'key'},
			{type: 'TextField', placeholder: __('Password') + ' 1', id: 'key2', css: {marginTop: 5}},
			{type: 'TextField', placeholder: __('Password') + ' 2', id: 'key3', css: {marginTop: 5}},
			{type: 'DropdownBox', id: 'key4', css: {marginTop: 5}, options: [
				{id: 'MD5', name: 'MD5'},
				{id: 'RIPEMD160', name: 'RIPEMD160'},
				{id: 'SHA1', name: 'SHA1'},
				{id: 'SHA256', name: 'SHA256'},
				{id: 'SHA384', name: 'SHA384'},
				{id: 'SHA512', name: 'SHA512'}
			]}
		]},
		{type: 'CheckBox', label: __('Test mode'), id: 'key5', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['merch_id', 'merch_pass1', 'merch_pass2', 'hash_type', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'robokassa', true),
	settingsTabDef: Globals.getSettingsContent()
});

PluginWrapper.registerPlugin('robokassa', {
	name: 'Robokassa',
	element: {
		minSize: {width: 60, height: 20},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merch_id', type: 'RobokassaMerchId', helpText: __('Shop identifer from Technical preferences'),
			get: function(data) { return data.content.merch_id; },
			set: function(value, data) {
				data.content.merch_id = value;
			}
		},
		{id: 'merch_pass1', type: 'RobokassaMerchPass1', helpText: __('Password from Technical preferences'),
			get: function(data) { return data.content.merch_pass1; },
			set: function(value, data) {
				data.content.merch_pass1 = value;
			}
		},
		{id: 'merch_pass2', type: 'RobokassaMerchPass2', helpText: __('Password from Technical preferences'),
			get: function(data) { return data.content.merch_pass2; },
			set: function(value, data) {
				data.content.merch_pass2 = value;
			}
		},
		{id: 'description', type: 'RobokassaDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'RobokassaAmount', helpText: __('Amount to be transferred') + ', RUB',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'RobokassaCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'hashtype', type: 'RobokassaHashtype',
			get: function(data) { return data.content.hashtype; },
			set: function(value, data) {
				data.content.hashtype = value;
			}
		},
		{id: 'demo', type: 'RobokassaDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'robokassa'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Store identifier'), helpText: __('Shop identifer from Technical preferences')},
						{type: 'TextField', id: 'merch_id'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Password') + ' 1', helpText: __('Password from Technical preferences')},
						{type: 'TextField', id: 'merch_pass1'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Password') + ' 2', helpText: __('Password from Technical preferences')},
						{type: 'TextField', id: 'merch_pass2'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + ', RUB'},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Hash type'), helpText: __('Hash calculation algorithm from Technical preferences')},
						{type: 'DropdownBox', id: 'hashtype', options: [
							{id: 'MD5', name: 'MD5'},
							{id: 'RIPEMD160', name: 'RIPEMD160'},
							{id: 'SHA1', name: 'SHA1'},
							{id: 'SHA256', name: 'SHA256'},
							{id: 'SHA384', name: 'SHA384'},
							{id: 'SHA512', name: 'SHA512'}
						]}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [4], columnWeightsSmall: [8, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: 'RUB', name: 'RUB'},
							{id: 'KZT', name: 'KZT'},
							{id: 'EUR', name: 'EUR'},
							{id: 'USD', name: 'USD'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'robokassa'),
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		fields.merch_id.setText(data.content.merch_id);
		fields.merch_pass1.setText(data.content.merch_pass1);
		fields.merch_pass2.setText(data.content.merch_pass2);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		itm = fields.hashtype.getItemById(data.content.hashtype);
		fields.hashtype.selectItem(itm);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		data.content.merch_id = fields.merch_id.getText();
		data.content.merch_pass1 = fields.merch_pass1.getText();
		data.content.merch_pass2 = fields.merch_pass2.getText();
		data.content.description = fields.description.getText();
		data.content.amount = (itm = fields.amount.getText()) ? parseFloat(itm.replace(',', '.')).toFixed(2) : '0.00';
		itm = fields.hashtype.getSelectedItem();
		data.content.hashtype = itm.getOriginal().id;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function(data) {
		if (!data.content.merch_id) data.content.merch_id = '';
		if (!data.content.merch_pass1) data.content.merch_pass1 = '';
		if (!data.content.merch_pass2) data.content.merch_pass2 = '';
		if (!data.content.description) data.content.description = '';
		if (!data.content.amount) data.content.amount = '1.00';
		if (!data.content.hashtype) data.content.hashtype = 'MD5';
		if (!data.content.currency) data.content.currency = 'RUB';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['robokassa.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'robokassa_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"cash_on_delivery","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/cash_on_delivery","customConfiguration":null};
PluginWrapper._config.id = 'cash_on_delivery';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/cash_on_delivery\/main.png";
PluginWrapper._config.template = "{{%FILTERS}}\n<form data-gateway-id=\"CashOnDelivery\" action=\"\" method=\"post\" style=\"width: 100%; height: 100%;\" id=\"{{id}}_cash_on_delivery_form\" onsubmit=\"return false;\">\n\t<input type=\"hidden\" name=\"invoiceUrl\" value=\"\" \/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{#content.store}}\n\t<button class=\"btn btn-default btn-raised\" style=\"vertical-align: middle; height: 47px; font-weight: bold;\"><i class=\"fa fa-money\"><\/i> {{content.__t.label}}<\/button>\n\t{{\/content.store}}\n<\/form>\n\n{{#content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\t$('#{{id}}_cash_on_delivery_form').on('beforesend', function(e, checkoutData) {\n\t\t\te.preventDefault();\n\t\t\t$('#{{id}}_cash_on_delivery_invoice_link').attr(\"href\", checkoutData.orderData.invoiceUrl);\n\t\t\t$('#{{id}}_cash_on_delivery_modal')\n\t\t\t\t.appendTo(\"body\")\n\t\t\t\t.modal({\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tkeyboard: false\n\t\t\t\t})\n\t\t\t\t.on('hide.bs.modal', function() {\n\t\t\t\t\twindow.location.href = checkoutData.backUrl;\n\t\t\t\t})\n\t\t\t;\n\t\t\treturn false;\n\t\t});\n\t})();\n<\/script>\n<div class=\"modal fade\" id=\"{{id}}_cash_on_delivery_modal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n                <h4 class=\"modal-title\">{{content.__t.label}}<\/h4>\n            <\/div>\n            <div class=\"modal-body\">\n\t\t\t\t{{{content.info | i18n}}}\n\t\t\t\t<div>\n\t\t\t\t\t<a id=\"{{id}}_cash_on_delivery_invoice_link\" href=\"javascript:void(0)\" target=\"_blank\" class=\"btn btn-success\"><i class=\"fa fa-file-pdf-o\"><\/i> {{{content.btnDownloadLabel | i18n}}}<\/a>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\n            <\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/cash_on_delivery/main.php';
PluginWrapper._config.active = false;
(function() {
	if (typeof window.cash_on_delivery_translations === 'undefined') {
		window.cash_on_delivery_translations = {
			'download_invoice': __c('Download invoice'),
			'label': __c('Cash on Delivery'),
			'close': __c('Close')
		};
	}
})();

var updateCashOnDeliveryWarning = function(list, store) {
	var _this = this;
	setTimeout(function() {
		var text = '';
		if( _this.enabler.getValue() ) {
			var cartPropertiesFields = list.getUiFields();
			if( !cartPropertiesFields.billingShippingRequired.getValue() )
				text += '<li>' + __('"%s" checkbox must also be checked to enable this gateway.').replace("%s", __('Require Billing/Shipping Information')) + '</li>';
			if( !cartPropertiesFields.companyInfo.getValue() || cartPropertiesFields.companyInfo.getValue() === "" )
				text += '<li>' + __('Seller details are required to create invoices.') + '</li>';
			if( !cartPropertiesFields.invoiceDocumentNumberFormat.getValue() || cartPropertiesFields.invoiceDocumentNumberFormat.getValue() === "" )
				text += '<li>' + __('Invoice document number format is required to create invoices.') + '</li>';
			if( !store.contactForm.content.email || !store.contactForm.content.emailFrom  || store.contactForm.content.emailFrom === "" || store.contactForm.content.email === "" )
				text += '<li>' + __('To send order confirmations recipient and sender emails must be entered in store contact form email settings.') + '</li>';
		}
		if( text === '' )
			_this.cashOnDeliveryWarnings.setContent('');
		else
			_this.cashOnDeliveryWarnings.setContent('<div class="alert alert-warning" style="margin: 5px 0 0;"><ul style="padding: 0 0 0 15px;">' + text + '</ul></div>');
	}, 0);
};

var isV4 = window.wb_builder && wb_builder.builderMajorVersion && wb_builder.builderMajorVersion > 3;

ElementRegister.registerPaymentGateway({
	name: __('Cash on Delivery'),
	id: 'cash_on_delivery',
	priority: 2,
	forceActive: true, // PluginWrapper._config.active,
	pageUrl: null,
	keyFieldId: 'info',
	keyField2Id: 'btnDownloadLabel',
	keyFieldDefaultValue: '<p><span style="color:rgb(0,0,0);">' + __("Your order was successfully placed.") + '<br />' + __("You will be contacted shortly about your order confirmation.") + '</span></p>',
	keyField2DefaultValue: __('Download invoice'),
	keyFieldDef: {type: 'VerticalLayout', children: [
		{type: 'HorizontalLayout', columnWeights: [12, 12, 12], noPadding: true, children: [
			{type: 'Label', text: __('Information to display when order is placed')},
			{type: 'WYSIWYGControl', id: 'key', css: {height: 100}, forcePasteAsPlainText: true},
			{type: 'MultilangTextField', id: 'key2', css: {width: 180, marginTop: 5}, visible: isV4, init: function() {
				this.getInputs().css('text-align', 'center');
			}}
		]},
		{type: 'CustomContainer', id: 'cashOnDeliveryWarnings'}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['info', 'btnDownloadLabel'],
	__t: window.cash_on_delivery_translations,
	onInit: function(list, store) {
		var _this = this;
		var cartPropertiesFields = list.getUiFields();
		cartPropertiesFields.billingShippingRequired.on("change", function() {
			updateCashOnDeliveryWarning.call(_this, list, store);
		});
		cartPropertiesFields.companyInfo.on("change", function() {
			updateCashOnDeliveryWarning.call(_this, list, store);
		});
		cartPropertiesFields.invoiceDocumentNumberFormat.on("change", function() {
			updateCashOnDeliveryWarning.call(_this, list, store);
		});
		cartPropertiesFields.invoiceDocumentNumberSeries.on("change", function() {
			updateCashOnDeliveryWarning.call(_this, list, store);
		});
		cartPropertiesFields.invoiceDocumentNumberLength.on("change", function() {
			updateCashOnDeliveryWarning.call(_this, list, store);
		});
	},
	onEnable: updateCashOnDeliveryWarning,
	onDisable: updateCashOnDeliveryWarning
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"getbutton","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/getbutton","customConfiguration":null};
PluginWrapper._config.id = 'getbutton';
PluginWrapper._config.icon = null;
PluginWrapper._config.template = "{{^isPublished}}\n<div class=\"wb_caption smaller\">\n\t<div>\n\t\t<i class=\"ico-pl-getbutton\"><\/i> GetButton\n\t<\/div>\n<\/div>\n{{\/isPublished}}\n{{#firstOnPage}}\n{{{requireService}}}\n{{\/firstOnPage}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/getbutton/main.php';
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('getbutton', {
    name: 'GetButton',
    element: {
        minSize: {width: 190, height: 70},
        defaultSize: {width: 190, height: 70},
        resizable: false,
		supportsFullWidth: false,
        renderOnce: true
    },
    properties: [
        {id: 'messenger', type: 'GetbuttonMessenger', helpText: 'How to find your page id: <a target="_blank" href="https://www.facebook.com/help/1503421039731588">Facebook Help</a>',
            get: function(data) { return data.content.messenger; },
            set: function(value, data) {
                data.content.messenger = this.platformCheck('messenger', value, data);
            }
        },
        {id: 'messenger_textfield', type: 'GetbuttonMessengerTextfield',
            get: function(data) { return data.content.messenger_textfield; },
            dependencies: ['messenger'],
            enabled: function(data){return data.content.messenger === true;},
            set: function(value, data) {
                data.content.messenger_textfield = value;
            }
        },
        {id: 'whatsapp', type: 'GetbuttonWhatsapp',
            get: function(data) { return data.content.whatsapp; },
            set: function(value, data) {
                data.content.whatsapp = this.platformCheck('whatsapp', value, data);;
            }
        },
        {id: 'whatsapp_textfield', type: 'GetbuttonWhatsappTextfield',
            get: function(data) { return data.content.whatsapp_textfield; },
            dependencies: ['whatsapp'],
            enabled: function(data){return data.content.whatsapp === true;},
            set: function(value, data) {
                data.content.whatsapp_textfield = value;
            }
        },
        {id: 'viber', type: 'GetbuttonViber',
            get: function(data) { return data.content.viber; },
            set: function(value, data) {
                data.content.viber = this.platformCheck('viber', value, data);
            }
        },
        {id: 'viber_textfield', type: 'GetbuttonViberTextfield',
            get: function(data) { return data.content.viber_textfield; },
            dependencies: ['viber'],
            enabled: function(data){return data.content.viber === true;},
            set: function(value, data) {
                data.content.viber_textfield = value;
            }
        },
        {id: 'snapchat', type: 'GetbuttonSnapchat',
            get: function(data) { return data.content.snapchat; },
            set: function(value, data) {
                data.content.snapchat = this.platformCheck('snapchat', value, data);
            }
        },
        {id: 'snapchat_textfield', type: 'GetbuttonSnapchatTextfield',
            get: function(data) { return data.content.snapchat_textfield; },
            dependencies: ['snapchat'],
            enabled: function(data){return data.content.snapchat === true;},
            set: function(value, data) {
                data.content.snapchat_textfield = value;
            }
        },
        {id: 'line', type: 'GetbuttonLine',
            get: function(data) { return data.content.line; },
            set: function(value, data) {
                data.content.line = this.platformCheck('line', value, data);
            }
        },
        {id: 'line_textfield', type: 'GetbuttonLineTextfield',
            get: function(data) { return data.content.line_textfield; },
            dependencies: ['line'],
            enabled: function(data){return data.content.line === true;},
            set: function(value, data) {
                data.content.line_textfield = value;
            }
        },
        {id: 'telegram', type: 'GetbuttonTelegram',
            get: function(data) { return data.content.telegram; },
            set: function(value, data) {
                data.content.telegram = this.platformCheck('telegram', value, data);
            }
        },
        {id: 'telegram_textfield', type: 'GetbuttonTelegramTextfield',
            get: function(data) { return data.content.telegram_textfield; },
            dependencies: ['telegram'],
            enabled: function(data){return data.content.telegram === true;},
            set: function(value, data) {
                data.content.telegram_textfield = value;
            }
        },
        {id: 'vkontakte', type: 'GetbuttonVkontakte',
            get: function(data) { return data.content.vkontakte; },
            set: function(value, data) {
                data.content.vkontakte = this.platformCheck('vkontakte', value, data);
            }
        },
        {id: 'vkontakte_textfield', type: 'GetbuttonVkontakteTextfield',
            get: function(data) { return data.content.vkontakte_textfield; },
            dependencies: ['vkontakte'],
            enabled: function(data){return data.content.vkontakte === true;},
            set: function(value, data) {
                data.content.vkontakte_textfield = value;
            }
        },
        {id: 'sms', type: 'GetbuttonSms',
            get: function(data) { return data.content.sms; },
            set: function(value, data) {
                data.content.sms = this.platformCheck('sms', value, data);
            }
        },
        {id: 'sms_textfield', type: 'GetbuttonSmsTextfield',
            get: function(data) { return data.content.sms_textfield; },
            dependencies: ['sms'],
            enabled: function(data){return data.content.sms === true;},
            set: function(value, data) {
                data.content.sms_textfield = value;
            }
        },
        {id: 'call', type: 'GetbuttonCall',
            get: function(data) { return data.content.call; },
            set: function(value, data) {
                data.content.call = this.platformCheck('call', value, data);
            }
        },
        {id: 'call_textfield', type: 'GetbuttonCallTextfield',
            get: function(data) { return data.content.call_textfield; },
            dependencies: ['call'],
            enabled: function(data){return data.content.call === true;},
            set: function(value, data) {
                data.content.call_textfield = value;
            }
        },
        {id: 'email', type: 'GetbuttonEmail',
            get: function(data) { return data.content.email; },
            set: function(value, data) {
                data.content.email = this.platformCheck('email', value, data);
            }
        },
        {id: 'email_textfield', type: 'GetbuttonEmailTextfield',
            get: function(data) { return data.content.email_textfield; },
            dependencies: ['email'],
            enabled: function(data){return data.content.email === true;},
            set: function(value, data) {
                data.content.email_textfield = value;
            }
        },
        {id: 'instagram', type: 'GetbuttonInstagram',
            get: function(data) { return data.content.instagram; },
            set: function(value, data) {
                data.content.instagram = this.platformCheck('instagram', value, data);
            }
        },
        {id: 'instagram_textfield', type: 'GetbuttonInstagramTextfield',
            get: function(data) { return data.content.instagram_textfield; },
            dependencies: ['instagram'],
            enabled: function(data){return data.content.instagram === true;},
            set: function(value, data) {
                data.content.instagram_textfield = value;
            }
        },
        //PRO SECTION
        {id: 'activatePro', type: 'GetbuttonActivatePro', helpText: 'Purchase Pro Version Key: <a target="_blank" href="https://getbutton.io/">https://getbutton.io/</a>',
            get: function(data) {return { pro:data.content.isPro,code: data.content.pro_textfield };},
            validate: function(value, data, api) {if (data.content.isPro) return ''; else return __('This key is incorrect');},
            set: function(value, data) {
                data.content.isPro = value.pro;
                data.content.pro_textfield = value.code;
                data.content.finalKey = value.code;
            }
        },
        {id: 'greeting', type: 'GetbuttonProGreeting', helpText: __('It appears in 5 seconds after the page load once in 24 hours for every unique visitor.'),
            get: function(data) { return data.content.greeting; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.greeting = value;
            }
        },
        {id: 'companyUrl', type: 'GetbuttonProCompanyUrl', helpText: __('Adds company logo to the greeting message'),
            get: function(data) { return data.content.companyUrl; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.companyUrl = value;
            }
        },
        {id: 'disableBranding', type: 'GetbuttonProDisableBranding', helpText: __('Disables GetButton.io branding on the button'),
            get: function(data) { return data.content.disableBranding; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.disableBranding = value;
            }
        },
        {id: 'googleAnalytics', type: 'GetbuttonProGoogleAnalytics', helpText: __('Learn more about this feature') + '<br /><a target="_blank" href="https://getbutton.io/help/tracking-chatbutton-events-in-google-analytics">https://getbutton.io/help/tracking-chatbutton-events-in-google-analytics</a>',
            get: function(data) { return data.content.googleAnalytics; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.googleAnalytics = value;
            }
        },
        {id: 'customColor', type: 'GetbuttonProCustomColor', helpText: __('Changes plugin button colour'),
            get: function(data) { return data.content.customColor; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.customColor = value;
            }
        },
        {id: 'vPosition', type: 'GetbuttonProVPosition', helpText: __('Shift vertical position of the plugin button'),
            get: function(data) { return data.content.vPosition; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.vPosition = value;
            }
        },
        {id: 'hPosition', type: 'GetbuttonProHPosition', helpText: __('Shift horizontal position of the plugin button'),
            get: function(data) { return data.content.hPosition; },
            dependencies: ['activatePro'],
            enabled: function(data) {return data.content.isPro === true;},
            set: function(value, data) {
                data.content.hPosition = value;
            }
        },
        {id: 'callToAction', type: 'GetbuttonCallToAction', helpText: __('Appears only on desktop'),
            get: function(data) { return data.content.callToAction; },
            set: function(value, data) {
                data.content.callToAction = value;
            }
        },
        {id: 'position', type: 'GetbuttonPosition',
            get: function(data) { return data.content.position0; },
            set: function(value, data) {
                data.content.position0 = value;
            }
        },
        {id: 'color', type: 'GetbuttonColor',
            get: function(data) { return data.content.color; },
            dependencies: ['activatePro'],
            visible: function(data) {
                return (data.content.isPro === false);
            },
            set: function(value, data) {
                data.content.color = value;
            }
        },
    ],
    propertyDialog: {
        noScroll: true,
        tabs: [
            {
                children: [
                    {
                        type: 'VerticalLayout', id: 'container', css: {marginTop: 10, textAlign: 'center'}, children: [
                            {type: 'HorizontalLayout', css: {marginTop: 2, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'messenger', label: __('Facebook Messenger'), helpText: 'How to find your page id: <a target="_blank" href="https://www.facebook.com/help/1503421039731588">Facebook Help</a>', change: function(fields) { fields.aaa('messenger', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},
                            {type: 'HorizontalLayout', id: 'messenger_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'messenger_textfield', placeholder: 'Facebook Page ID', css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'whatsapp', label: __('WhatsApp'), helpText: '', change: function(fields) { fields.aaa('whatsapp', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'whatsapp_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'whatsapp_textfield', placeholder: '+1 (800) 123-45-67', css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},
                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'viber', label: __('Viber'), helpText: '', change: function(fields) { fields.aaa('viber', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},
                            {type: 'HorizontalLayout', id: 'viber_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'viber_textfield', placeholder: __('Phone Number or ID'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'snapchat', label: __('Snapchat'), helpText: '', change: function(fields) { fields.aaa('snapchat', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'snapchat_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'snapchat_textfield', placeholder: __('Username'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'line', label: __('Line'), helpText: '', change: function(fields) { fields.aaa('line', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'line_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'line_textfield', placeholder: __('QR code URL'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'telegram', label: __('Telegram'), helpText: '', change: function(fields) { fields.aaa('telegram', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'telegram_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'telegram_textfield', placeholder: __('Bot username'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'vkontakte', label: __('Vkontakte'), helpText: '', change: function(fields) { fields.aaa('vkontakte', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'vkontakte_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'vkontakte_textfield', placeholder: __('Page name'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'sms', label: __('SMS (mobile)'), helpText: '', change: function(fields) { fields.aaa('sms', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'sms_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'sms_textfield', placeholder: __('Phone number'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'call', label: __('Call'), helpText: '', change: function(fields) { fields.aaa('call', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'call_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'call_textfield', placeholder: __('Phone number'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'email', label: __('Email'), helpText: '', change: function(fields) { fields.aaa('email', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'email_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'email_textfield', placeholder: __('Email'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},

                            {type: 'HorizontalLayout', css: {marginTop: 10, textAlign: 'left'}, children: [
                                    {type: 'CheckBox', id: 'instagram', label: __('Instagram'), helpText: '', change: function(fields) { fields.aaa('instagram', this._input[0].checked); }, css: {marginTop: 5}},
                                ]},

                            {type: 'HorizontalLayout', id: 'instagram_container', css: {marginTop: 2, textAlign: 'center'}, children: [
                                {type: 'TextField', id: 'instagram_textfield', placeholder: __('Username'), css: {marginTop: 2, marginLeft: 'auto', marginRight: 'auto'}},
                            ]},
                        ]
                    }

                ]
            },

            {
                name: __("Pro Version"), children: [
                    {type: 'VerticalLayout', children: [
                            {type: 'Label', text: __('Pro Version Key'), init: function()
                                {
                                    var $a = $('<span style="color: red; margin-left: 1px;">*</span>').attr('title', __('Required'));
                                    $a.insertBefore(this.getElem().children('.badge'));
                                },
                                helpText: 'Purchase Pro Version Key: <a target="_blank" href="https://getbutton.io/">https://getbutton.io/</a>', css: {marginTop: 15},},
                        ]},
                    {type: 'VerticalLayout', children: [
                            {type: 'TextField', id: 'pro_textfield', placeholder: __('Pro Version Key'), change: function(fields) {fields.enableButton();}, css: {marginLeft: 'auto', marginRight: 'auto'}},
                        ]},
                    {type: 'Button', text: __('Activate'), id: 'activatePro', enabled: false, visible: true,  css: {marginTop: 10, marginLeft: '0', marginRight: 'auto'}},
                    {
                        type: 'Label',
                        id: 'errorState',
                        visible: false,
                        css: {marginTop: 10, marginLeft: 'auto', marginRight: 'auto', color: 'red'}
                    },
                    {
                        type: 'VerticalLayout', children: [
                            {type: 'Label', text: __('Greeting message'), helpText: __('It appears in 5 seconds after the page load once in 24 hours for every unique visitor.'), css: {marginTop: 15},},
                            {type: 'TextField', id: 'greeting', placeholder: __("Hello, how may we help you? Just send us a message now to get assistance."), enabled: false}
                        ]
                    },
                    {
                        type: 'VerticalLayout', children: [
                            {type: 'Label', text: __('Company Logo URL'), helpText: __('Adds company logo to the greeting message'), css: {marginTop: 15}},
                            {type: 'TextField', id: 'companyUrl', placeholder: __("URL"), enabled: false}
                        ]
                    },
                    {
                        type: 'HorizontalLayout', css: {marginTop: 5}, columnWeights: [6, 6, 4, 4, 4], children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {
                                        type: 'CheckBox',
                                        id: 'disableBranding',
                                        label: __('Disable branding'),
                                        helpText: __('Disables GetButton.io branding on the button'),
                                        css: {marginTop: 15},
                                        enabled: false
                                    },
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {
                                        type: 'CheckBox',
                                        id: 'googleAnalytics',
                                        label: __('Track clicks in Google Analytics'),
                                        helpText: __('Learn more about this feature') + '<br /><a target="_blank" href="https://getbutton.io/help/tracking-chatbutton-events-in-google-analytics">https://getbutton.io/help/tracking-chatbutton-events-in-google-analytics</a>',
                                        css: {marginTop: 15},
                                        enabled: false
                                    },
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Vertical position, px'), helpText: __('Shift vertical position of the plugin button'), css: {marginTop: 15}},
                                    {type: 'SizeSelector', id: 'vPosition', min: 0, max: 300, enabled: false}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Horizontal position, px'), helpText: __('Shift horizontal position of the plugin button'), css: {marginTop: 15}},
                                    {type: 'SizeSelector', id: 'hPosition', min: 0, max: 300, enabled: false}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Colour'), helpText: __('Changes plugin button colour'), css: {marginTop: 15}},
                                    {type: 'ColorSelector', id: 'customColor', noTransparent: true, enabled: false}
                                ]
                            },
                        ]
                    }
                ]
            },

            {
                name: __('Settings'), children: [
                    {
                        type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [4,4,4], children: [
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Position')},
                                    {type: 'RadioBox', id: 'position0', label: __('Left'), group: 'position'},
                                    {type: 'RadioBox', id: 'position1', label: __('Right'), group: 'position'}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', text: __('Call to action'), helpText: __('Appears only on desktop'),},
                                    {type: 'TextField', id: 'callToAction', placeholder: __("Message us")}
                                ]
                            },
                            {
                                type: 'VerticalLayout', children: [
                                    {type: 'Label', id: 'color_label', text: __('Colour')},
                                    {type: 'DropdownBox', id: 'color', useHtmlInput: true, options: [
                                            {id: '#666666', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #666666;"></div>' },
                                            {id: '#E74339', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #E74339;"></div>' },
                                            {id: '#ffa500', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #ffa500;"></div>' },
                                            {id: '#008000', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #008000;"></div>' },
                                            {id: '#0000ff', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #0000ff;"></div>' },
                                            {id: '#800080', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #800080;"></div>' },
                                            {id: '#ffc0cb', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #ffc0cb;"></div>' },
                                            {id: '#000000', html: '<div style="width: 50px; height: 16px; margin: 2px 0; background: #000000;"></div>' },
                                        ]}
                                ]
                            }
                        ]
                    }
                ]
            }
        ]
    },

    pluginScoped: {
        checkedPlatforms: []
    },

    platformCheck: function(platform, isChecked, data) {
        if(isChecked) {
            this.pluginScoped.checkedPlatforms.push(platform);
            if(this.pluginScoped.checkedPlatforms.length > 2 && !data.content.isPro) {
                this.pluginScoped.checkedPlatforms.splice(this.pluginScoped.checkedPlatforms.indexOf(platform), 1);
                alert(__("To select more than two platforms, you need to get Pro Version."));
                // data.content[platform]= false;
                return false;
            } else {
                return true;
            }
        } else {
            this.pluginScoped.checkedPlatforms.splice(this.pluginScoped.checkedPlatforms.indexOf(platform), 1);
            // data.content[platform] = false;
            return false;
        }

    },
    openAction: function (fields, data, elem) {
        //General tab
        fields.messenger.setValue(data.content.messenger);
        fields.messenger_textfield.setValue(data.content.messenger_textfield);
        fields.whatsapp.setValue(data.content.whatsapp);
        fields.whatsapp_textfield.setValue(data.content.whatsapp_textfield);
        fields.viber.setValue(data.content.viber);
        fields.viber_textfield.setValue(data.content.viber_textfield);
        fields.snapchat.setValue(data.content.snapchat);
        fields.snapchat_textfield.setValue(data.content.snapchat_textfield);
        fields.line.setValue(data.content.line);
        fields.line_textfield.setValue(data.content.line_textfield);
        fields.telegram.setValue(data.content.telegram);
        fields.telegram_textfield.setValue(data.content.telegram_textfield);
        fields.vkontakte.setValue(data.content.vkontakte);
        fields.vkontakte_textfield.setValue(data.content.vkontakte_textfield);
        fields.sms.setValue(data.content.sms);
        fields.sms_textfield.setValue(data.content.sms_textfield);
        fields.call.setValue(data.content.call);
        fields.call_textfield.setValue(data.content.call_textfield);
        fields.email.setValue(data.content.email);
        fields.email_textfield.setValue(data.content.email_textfield);
        fields.instagram.setValue(data.content.instagram);
        fields.instagram_textfield.setValue(data.content.instagram_textfield);
        //////////
        //Pro tab
        fields.validity = data.content.validity;
        fields.finalKey = data.content.finalKey;
        fields.platformSize = data.content.platformSize;
        fields.pro_textfield.setValue(data.content.pro_textfield);
        fields.greeting.setValue(data.content.greeting);
        fields.disableBranding.setValue(data.content.disableBranding);
        fields.googleAnalytics.setValue(data.content.googleAnalytics);
        fields.companyUrl.setValue(data.content.companyUrl);
        fields.hPosition.setValue(data.content.hPosition);
        fields.vPosition.setValue(data.content.vPosition);
        fields.customColor.setValue(data.content.customColor);

        /////////
        //Settings tab
        fields.callToAction.setValue(data.content.callToAction);
        fields.position0.setValue(data.content.position0);
        fields.position1.setValue(data.content.position1);
        fields.color.setValue(data.content.color);
        /////////

        fields.isPro = data.content.isPro;

        if(fields.isPro) {
            fields.color.setVisible(false);
            fields.color_label.setVisible(false);
        }

        if (fields.pro_textfield.getValue().length)
            fields.activatePro.setEnabled(true);

        var tempArray = [];
        if (!fields.aaa) {
            fields.aaa = function (platform, isChecked) {
                var platform_textfield = platform + '_textfield';
                if (isChecked) {
                    tempArray.push(platform);
                    if (tempArray.length > 2 && !fields.isPro) {
                        fields[platform]._input[0].checked = false;
                        tempArray.splice(tempArray.indexOf(platform), 1);
                        alert(__("To select more than two platforms, you need to get Pro Version."));
                    } else {
                        fields[platform_textfield].setEnabled(true);
                    }
                } else {
                    fields[platform_textfield].setEnabled(false);
                    tempArray.splice(tempArray.indexOf(platform), 1);
                }
                fields.platformSize = tempArray.length;
            };
        }
        if (!fields.messenger._input[0].checked) {
            fields.messenger_textfield.setEnabled(false);
        } else {
            tempArray.push('messenger');
        }
        if (!fields.whatsapp._input[0].checked) {
            fields.whatsapp_textfield.setEnabled(false);
        } else {
            tempArray.push('whatsapp');
        }
        if (!fields.viber._input[0].checked) {
            fields.viber_textfield.setEnabled(false);
        } else {
            tempArray.push('viber');
        }
        if (!fields.snapchat._input[0].checked) {
            fields.snapchat_textfield.setEnabled(false);
        } else {
            tempArray.push('snapchat');
        }
        if (!fields.line._input[0].checked) {
            fields.line_textfield.setEnabled(false);
        } else {
            tempArray.push('line');
        }
        if (!fields.telegram._input[0].checked) {
            fields.telegram_textfield.setEnabled(false);
        } else {
            tempArray.push('telegram');
        }
        if (!fields.vkontakte._input[0].checked) {
            fields.vkontakte_textfield.setEnabled(false);
        } else {
            tempArray.push('vkontakte');
        }
        if (!fields.sms._input[0].checked) {
            fields.sms_textfield.setEnabled(false);
        } else {
            tempArray.push('sms');
        }
        if (!fields.call._input[0].checked) {
            fields.call_textfield.setEnabled(false);
        } else {
            tempArray.push('call');
        }
        if (!fields.email._input[0].checked) {
            fields.email_textfield.setEnabled(false);
        } else {
            tempArray.push('email');
        }
        if (!fields.instagram._input[0].checked) {
            fields.instagram_textfield.setEnabled(false);
        } else {
            tempArray.push('instagram');
        }

        if (!fields.enableButton)
            fields.enableButton = function enableProButton() {
                if (fields.pro_textfield.getValue().length)
                    fields.activatePro.setEnabled(true);
            };

        function unlockPro(data) {
            fields.greeting.setEnabled(true);
            fields.disableBranding.setEnabled(true);
            fields.googleAnalytics.setEnabled(true);
            fields.companyUrl.setEnabled(true);
            fields.vPosition.setEnabled(true);
            fields.hPosition.setEnabled(true);
            fields.customColor.setEnabled(true);
            fields.color.setVisible(false);
            fields.color_label.setVisible(false);
        }

        function encodeKey(key) {
            return key.split("").reverse().join("");
        }

        if (!fields.updateDomainAction) {
            fields.updateDomainAction = function updateDomain() {
                var encodedKey = encodeKey(fields.pro_textfield.getValue());
                var domain = wb_builder.siteDomain;
                var url = wb_builder.baseUrl + 'getbutton/update';
                $.ajax({
                    type: 'GET',
                    url: url,
                    data: {'domain': domain, 'key': encodedKey},
                    contentType: 'application/json',

                    success: function (response, status, xhr) {
                    },
                    error: function (response, status, xhr) {
                    }
                });
            };
        }

        function validateKey(key) {
            fields.activatePro.setLoading(true);
                var encodedKey = encodeKey(key);
                var url = wb_builder.baseUrl + 'getbutton/validate/?key=';
                $.ajax({
                    type: "POST",
                    url: url + encodedKey,
                    success: function (response, status, xhr) {
                        fields.activatePro.setLoading(false);
                        if (xhr.status === 200 && response.valid === true) {
                            fields.errorState.setVisible(false);
                            unlockPro(response);
                            fields.isPro = true;
                            fields.validity = response.expiredAt;
                            fields.finalKey = response.key;
                        } else {
                            fields.errorState.setHtml(__('This key is invalid.'));
                            fields.errorState.setVisible(true);
                            setTimeout(function () {
                                fields.errorState.setVisible(false);
                            }, 8000);
                        }
                    },
                    error: function (xhr) {
                        if (xhr.status === 404) {
                            fields.activatePro.setLoading(false);
                            fields.errorState.setHtml(__('getbutton.io server is unreachable, try again later.'));
                            fields.errorState.setVisible(true);
                            setTimeout(function () {
                                fields.errorState.setVisible(false);
                            }, 8000);
                        }
                    }
                });
            }

        fields.activatePro.on('click', function() {
            fields.activatePro.setLoading(true);
            var prokey = fields.pro_textfield.getValue();
            if (prokey) {
                validateKey(prokey);
            } else {
                fields.activatePro.setLoading(false);
                fields.errorState.setHtml(__('Key cannot be empty.'));
                fields.errorState.setVisible(true);
                setTimeout(function () {
                    fields.errorState.setVisible(false);
                }, 8000);
            }
        });

    },
    applyAction: function (fields, data, elem) {
        //General tab
        data.content.messenger = fields.messenger.getValue();
        data.content.messenger_textfield = fields.messenger_textfield.getValue();
        data.content.whatsapp = fields.whatsapp.getValue();
        data.content.whatsapp_textfield = fields.whatsapp_textfield.getValue();
        data.content.viber = fields.viber.getValue();
        data.content.viber_textfield = fields.viber_textfield.getValue();
        data.content.snapchat = fields.snapchat.getValue();
        data.content.snapchat_textfield = fields.snapchat_textfield.getValue();
        data.content.line = fields.line.getValue();
        data.content.line_textfield = fields.line_textfield.getValue();
        data.content.telegram = fields.telegram.getValue();
        data.content.telegram_textfield = fields.telegram_textfield.getValue();
        data.content.vkontakte = fields.vkontakte.getValue();
        data.content.vkontakte_textfield = fields.vkontakte_textfield.getValue();
        data.content.sms = fields.sms.getValue();
        data.content.sms_textfield = fields.sms_textfield.getValue();
        data.content.call = fields.call.getValue();
        data.content.call_textfield = fields.call_textfield.getValue();
        data.content.email = fields.email.getValue();
        data.content.email_textfield = fields.email_textfield.getValue();
        data.content.instagram = fields.instagram.getValue();
        data.content.instagram_textfield = fields.instagram_textfield.getValue();
        //////////
        //Pro tab
        data.content.isPro = fields.isPro;
        data.content.validity = fields.validity;
        data.content.finalKey = fields.finalKey;
        data.content.platformSize = fields.platformSize;
        data.content.pro_textfield = fields.pro_textfield.getValue();
        data.content.greeting = fields.greeting.getValue();
        data.content.disableBranding = fields.disableBranding.getValue();
        data.content.googleAnalytics = fields.googleAnalytics.getValue();
        data.content.companyUrl = fields.companyUrl.getValue();
        data.content.hPosition = fields.hPosition.getValue();
        data.content.vPosition = fields.vPosition.getValue();
        data.content.customColor = fields.customColor.getValue();
        //////////
        //Settings tab
        data.content.callToAction = fields.callToAction.getValue();
        data.content.position0 = fields.position0.getValue();
        data.content.position1 = fields.position1.getValue();
        data.content.color = fields.color.getValue();

        if(fields.isPro)
            fields.updateDomainAction();

    },
    loadAction: function (data) {
        //General tab
        if(!data.content.messenger) data.content.messenger = false;
        if(!data.content.messenger_textfield) data.content.messenger_textfield = '';
        if(!data.content.whatsapp) data.content.whatsapp = false;
        if(!data.content.whatsapp_textfield) data.content.whatsapp_textfield = '';
        if(!data.content.viber) data.content.viber = false;
        if(!data.content.viber_textfield) data.content.viber_textfield = '';
        if(!data.content.snapchat) data.content.snapchat = false;
        if(!data.content.snapchat_textfield) data.content.snapchat_textfield = '';
        if(!data.content.line) data.content.line = false;
        if(!data.content.line_textfield) data.content.line_textfield = '';
        if(!data.content.telegram) data.content.telegram = false;
        if(!data.content.telegram_textfield) data.content.telegram_textfield = '';
        if(!data.content.vkontakte) data.content.vkontakte = false;
        if(!data.content.vkontakte_textfield) data.content.vkontakte_textfield = '';
        if(!data.content.sms) data.content.sms = false;
        if(!data.content.sms_textfield) data.content.sms_textfield = '';
        if(!data.content.call) data.content.call = false;
        if(!data.content.call_textfield) data.content.call_textfield = '';
        if(!data.content.email) data.content.email = false;
        if(!data.content.email_textfield) data.content.email_textfield = '';
        if(!data.content.instagram) data.content.instagram = false;
        if(!data.content.instagram_textfield) data.content.instagram_textfield = '';
        /////////
        //Pro tab
        if(!data.content.validity) data.content.validity = '';
        if(!data.content.finalKey) data.content.finalKey = '';
        if(!data.content.platformSize) data.content.platformSize = '';
        if(data.content.isPro === undefined) data.content.isPro = false;
        if(!data.content.pro_textfield) data.content.pro_textfield = '';
        if(!data.content.greeting) data.content.greeting = '';
        if(!data.content.disableBranding) data.content.disableBranding = false;
        if(!data.content.googleAnalytics) data.content.googleAnalytics = false;
        if(!data.content.companyUrl) data.content.companyUrl = '';
        if(!data.content.hPosition) data.content.hPosition = '';
        if(!data.content.vPosition) data.content.vPosition = '';
        if(!data.content.customColor) data.content.customColor = '#000000';
        /////////
        //Settings tab
        if(!data.content.callToAction) data.content.callToAction = '';
        if(!data.content.position0) data.content.position0 = false;
        if(!data.content.position1) data.content.position1 = false;
        if(!data.content.color) data.content.color = '';
    },
    loadedAction: function(data, elem) {
        var thisClass = this;
        elem.parent().children('.wb_controls').on('dblclick', function() { thisClass.openProperties(); });
    },
    supportsAutoWidth: function() {
        return true;
    },
    supportsAutoHeight: function() {
        return true;
    }
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"stripe","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/stripe","customConfiguration":null};
PluginWrapper._config.id = 'stripe';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/stripe\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n{{{content.paymentGatewayButton}}}\n{{\/isPublished}}\n{{#isPublished}}\n<form action=\"\" method=\"post\" data-gateway-id=\"Stripe\" id=\"{{id}}_form\" style=\"width: 100%; height: 100%;\">\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"successUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"description2\" value=\"{{content.description2}}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n{{{requireService}}}\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/stripe/main.php';
PluginWrapper._config.active = true;
var Globals = {
	_settingsContent: null,
	_settingsDialog: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			var base_url = 'http://' + wb_builder.siteDomain + '/';
			var content = $('<div>').append('<p><strong>Page URL:</strong> <a href="https://stripe.com/" target="_blank">https://stripe.com/</a></p>'
					+ '<p><strong>Webhook endpoint URL:</strong><br />'
					+ '<pre>' + base_url + '0/store-callback/Stripe' + '</pre></p>'
					+ '<p>Add event type "checkout.session.completed" for webhook endpoint.</p>');
			Globals._settingsContent = content.html();
		}
		return Globals._settingsContent;
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#32325d',
			button_border: {
				color: '#337fbd',
				style: 'none',
				weight: 1,
				css: { border: '1px none #337fbd' },
				cssRaw: 'border: 1px none #337fbd'
			},
			logo: 'stripe_white.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#9d9dbd'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'stripe_color.svg', name: 'coloured'},
			{id: 'stripe_black.svg', name: 'black'},
			{id: 'stripe_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Stripe',
	id: 'stripe',
	pageUrl: 'https://stripe.com/',
	keyField: __('Publishable Key'),
	keyFieldId: 'publishable_key',
	keyField2: __('Secret Key'),
	keyField2Id: 'secret_key',
	keyField3: __('Webhook Secret'),
	keyField3Id: 'webhook_secret',
	titleFieldId: 'label',
	nameFieldId: 'description,description2',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['publishable_key', 'secret_key', 'webhook_secret'],
	useStylesInStoreCart: true,
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'stripe', true),
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true)
});
PluginWrapper.registerPlugin('stripe', {
	name: 'Stripe',
	element: {
		minSize: {width: 68, height: 34},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'publishable_key', type: 'StripePublishableKey', helpText: __('Your publishable key'),
			get: function(data) { return data.content.publishable_key; },
			set: function(value, data) {
				data.content.publishable_key = value;
			}
		},
		{id: 'secret_key', type: 'StripeSecretKey', helpText: __('Your secret key'),
			get: function(data) { return data.content.secret_key; },
			set: function(value, data) {
				data.content.secret_key = value;
			}
		},
		{id: 'description', type: 'StripeDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'StripeAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'StripeCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'description2', type: 'StripeDescription2',
			get: function(data) { return data.content.description2; },
			set: function(value, data) {
				data.content.description2 = value;
			}
		},
	],Globals.getLogosList(), 'stripe'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Publishable Key'), helpText: __('Your publishable key')},
							{type: 'TextField', id: 'publishable_key'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Secret Key'), helpText: __('Your secret key')},
							{type: 'TextField', id: 'secret_key'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'description'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount')},
							{type: 'TextField', id: 'amount'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Currency')},
							{type: 'DropdownBox', id: 'currency', options: [
								{id: '#USD', name: 'USD', value: 'USD'},
								{id: '#EUR', name: 'EUR', value: 'EUR'},
								{id: '#AED', name: 'AED', value: 'AED'},
								{id: '#AFN', name: 'AFN', value: 'AFN'},
								{id: '#ALL', name: 'ALL', value: 'ALL'},
								{id: '#AMD', name: 'AMD', value: 'AMD'},
								{id: '#ANG', name: 'ANG', value: 'ANG'},
								{id: '#AOA', name: 'AOA', value: 'AOA'},
								{id: '#AUD', name: 'AUD', value: 'AUD'},
								{id: '#AWG', name: 'AWG', value: 'AWG'},
								{id: '#AZN', name: 'AZN', value: 'AZN'},
								{id: '#BAM', name: 'BAM', value: 'BAM'},
								{id: '#BBD', name: 'BBD', value: 'BBD'},
								{id: '#BDT', name: 'BDT', value: 'BDT'},
								{id: '#BGN', name: 'BGN', value: 'BGN'},
								{id: '#BIF', name: 'BIF', value: 'BIF'},
								{id: '#BMD', name: 'BMD', value: 'BMD'},
								{id: '#BND', name: 'BND', value: 'BND'},
								{id: '#BOB', name: 'BOB', value: 'BOB'},
								{id: '#BRL', name: 'BRL', value: 'BRL'},
								{id: '#BSD', name: 'BSD', value: 'BSD'},
								{id: '#BWP', name: 'BWP', value: 'BWP'},
								{id: '#BZD', name: 'BZD', value: 'BZD'},
								{id: '#CAD', name: 'CAD', value: 'CAD'},
								{id: '#CDF', name: 'CDF', value: 'CDF'},
								{id: '#CHF', name: 'CHF', value: 'CHF'},
								{id: '#CLP', name: 'CLP', value: 'CLP'},
								{id: '#CNY', name: 'CNY', value: 'CNY'},
								{id: '#COP', name: 'COP', value: 'COP'},
								{id: '#CRC', name: 'CRC', value: 'CRC'},
								{id: '#CVE', name: 'CVE', value: 'CVE'},
								{id: '#CZK', name: 'CZK', value: 'CZK'},
								{id: '#DJF', name: 'DJF', value: 'DJF'},
								{id: '#DKK', name: 'DKK', value: 'DKK'},
								{id: '#DOP', name: 'DOP', value: 'DOP'},
								{id: '#DZD', name: 'DZD', value: 'DZD'},
								{id: '#EGP', name: 'EGP', value: 'EGP'},
								{id: '#ETB', name: 'ETB', value: 'ETB'},
								{id: '#FJD', name: 'FJD', value: 'FJD'},
								{id: '#FKP', name: 'FKP', value: 'FKP'},
								{id: '#GBP', name: 'GBP', value: 'GBP'},
								{id: '#GEL', name: 'GEL', value: 'GEL'},
								{id: '#GIP', name: 'GIP', value: 'GIP'},
								{id: '#GMD', name: 'GMD', value: 'GMD'},
								{id: '#GNF', name: 'GNF', value: 'GNF'},
								{id: '#GTQ', name: 'GTQ', value: 'GTQ'},
								{id: '#GYD', name: 'GYD', value: 'GYD'},
								{id: '#HKD', name: 'HKD', value: 'HKD'},
								{id: '#HNL', name: 'HNL', value: 'HNL'},
								{id: '#HRK', name: 'HRK', value: 'HRK'},
								{id: '#HTG', name: 'HTG', value: 'HTG'},
								{id: '#HUF', name: 'HUF', value: 'HUF'},
								{id: '#IDR', name: 'IDR', value: 'IDR'},
								{id: '#ILS', name: 'ILS', value: 'ILS'},
								{id: '#INR', name: 'INR', value: 'INR'},
								{id: '#ISK', name: 'ISK', value: 'ISK'},
								{id: '#JMD', name: 'JMD', value: 'JMD'},
								{id: '#JPY', name: 'JPY', value: 'JPY'},
								{id: '#KES', name: 'KES', value: 'KES'},
								{id: '#KGS', name: 'KGS', value: 'KGS'},
								{id: '#KHR', name: 'KHR', value: 'KHR'},
								{id: '#KMF', name: 'KMF', value: 'KMF'},
								{id: '#KRW', name: 'KRW', value: 'KRW'},
								{id: '#KYD', name: 'KYD', value: 'KYD'},
								{id: '#KZT', name: 'KZT', value: 'KZT'},
								{id: '#LAK', name: 'LAK', value: 'LAK'},
								{id: '#LBP', name: 'LBP', value: 'LBP'},
								{id: '#LKR', name: 'LKR', value: 'LKR'},
								{id: '#LRD', name: 'LRD', value: 'LRD'},
								{id: '#LSL', name: 'LSL', value: 'LSL'},
								{id: '#MAD', name: 'MAD', value: 'MAD'},
								{id: '#MDL', name: 'MDL', value: 'MDL'},
								{id: '#MGA', name: 'MGA', value: 'MGA'},
								{id: '#MKD', name: 'MKD', value: 'MKD'},
								{id: '#MMK', name: 'MMK', value: 'MMK'},
								{id: '#MNT', name: 'MNT', value: 'MNT'},
								{id: '#MOP', name: 'MOP', value: 'MOP'},
								{id: '#MRO', name: 'MRO', value: 'MRO'},
								{id: '#MUR', name: 'MUR', value: 'MUR'},
								{id: '#MVR', name: 'MVR', value: 'MVR'},
								{id: '#MWK', name: 'MWK', value: 'MWK'},
								{id: '#MXN', name: 'MXN', value: 'MXN'},
								{id: '#MYR', name: 'MYR', value: 'MYR'},
								{id: '#MZN', name: 'MZN', value: 'MZN'},
								{id: '#NAD', name: 'NAD', value: 'NAD'},
								{id: '#NGN', name: 'NGN', value: 'NGN'},
								{id: '#NIO', name: 'NIO', value: 'NIO'},
								{id: '#NOK', name: 'NOK', value: 'NOK'},
								{id: '#NPR', name: 'NPR', value: 'NPR'},
								{id: '#NZD', name: 'NZD', value: 'NZD'},
								{id: '#PAB', name: 'PAB', value: 'PAB'},
								{id: '#PEN', name: 'PEN', value: 'PEN'},
								{id: '#PGK', name: 'PGK', value: 'PGK'},
								{id: '#PHP', name: 'PHP', value: 'PHP'},
								{id: '#PKR', name: 'PKR', value: 'PKR'},
								{id: '#PLN', name: 'PLN', value: 'PLN'},
								{id: '#PYG', name: 'PYG', value: 'PYG'},
								{id: '#QAR', name: 'QAR', value: 'QAR'},
								{id: '#RON', name: 'RON', value: 'RON'},
								{id: '#RSD', name: 'RSD', value: 'RSD'},
								{id: '#RUB', name: 'RUB', value: 'RUB'},
								{id: '#RWF', name: 'RWF', value: 'RWF'},
								{id: '#SAR', name: 'SAR', value: 'SAR'},
								{id: '#SBD', name: 'SBD', value: 'SBD'},
								{id: '#SCR', name: 'SCR', value: 'SCR'},
								{id: '#SEK', name: 'SEK', value: 'SEK'},
								{id: '#SGD', name: 'SGD', value: 'SGD'},
								{id: '#SHP', name: 'SHP', value: 'SHP'},
								{id: '#SLL', name: 'SLL', value: 'SLL'},
								{id: '#SOS', name: 'SOS', value: 'SOS'},
								{id: '#SRD', name: 'SRD', value: 'SRD'},
								{id: '#STD', name: 'STD', value: 'STD'},
								{id: '#SVC', name: 'SVC', value: 'SVC'},
								{id: '#SZL', name: 'SZL', value: 'SZL'},
								{id: '#THB', name: 'THB', value: 'THB'},
								{id: '#TJS', name: 'TJS', value: 'TJS'},
								{id: '#TOP', name: 'TOP', value: 'TOP'},
								{id: '#TRY', name: 'TRY', value: 'TRY'},
								{id: '#TTD', name: 'TTD', value: 'TTD'},
								{id: '#TWD', name: 'TWD', value: 'TWD'},
								{id: '#TZS', name: 'TZS', value: 'TZS'},
								{id: '#UAH', name: 'UAH', value: 'UAH'},
								{id: '#UGX', name: 'UGX', value: 'UGX'},
								{id: '#UYU', name: 'UYU', value: 'UYU'},
								{id: '#UZS', name: 'UZS', value: 'UZS'},
								{id: '#VND', name: 'VND', value: 'VND'},
								{id: '#VUV', name: 'VUV', value: 'VUV'},
								{id: '#WST', name: 'WST', value: 'WST'},
								{id: '#XAF', name: 'XAF', value: 'XAF'},
								{id: '#XCD', name: 'XCD', value: 'XCD'},
								{id: '#XOF', name: 'XOF', value: 'XOF'},
								{id: '#XPF', name: 'XPF', value: 'XPF'},
								{id: '#YER', name: 'YER', value: 'YER'},
								{id: '#ZAR', name: 'ZAR', value: 'ZAR'},
								{id: '#ZMW', name: 'ZMW', value: 'ZMW'}
							]}
						]}
					]},
					{type: 'VerticalLayout', css: {marginTop: 15}, children: [
						{type: 'Label', text: __('Description')},
						{type: 'TextField', id: 'description2'}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'stripe'),
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.description.setText(data.content.description);
		fields.description2.setText(data.content.description2);
		fields.amount.setText(data.content.amount);
		fields.publishable_key.setText(data.content.publishable_key);
		fields.secret_key.setText(data.content.secret_key);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.description = fields.description.getText();
		data.content.description2 = fields.description2.getText();
		data.content.amount = fields.amount.getText();
		data.content.publishable_key = fields.publishable_key.getText();
		data.content.secret_key = fields.secret_key.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__globalVars = ['publishable_key', 'secret_key', 'webhook_secret'];
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			label: 'button_label'
		});
		if (!data.content.description)
			data.content.description = ''; // Items description
		if (!data.content.description2)
			data.content.description2 = '';
		if (!data.content.amount)
			data.content.amount = '1'; // 999
		if (!data.content.currency)
			data.content.currency = 'EUR';
		if (!data.content.publishable_key)
			data.content.publishable_key = '';
		if (!data.content.secret_key)
			data.content.secret_key = ''; // pk_test_6pRNASCoBOKtIshFeQd4XMUh
		if (['logo_black.svg', 'logo_white.svg'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'stripe_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"BuyNow","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/BuyNow","customConfiguration":null};
PluginWrapper._config.id = 'BuyNow';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/BuyNow\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n{{{content.paymentGatewayButton}}}\n{{\/isPublished}}\n{{#isPublished}}\n<form action=\"{{#content.demo}}https:\/\/www.sandbox.paypal.com\/cgi-bin\/webscr{{\/content.demo}}{{^content.demo}}https:\/\/www.paypal.com\/cgi-bin\/webscr{{\/content.demo}}\" method=\"post\" data-gateway-id=\"Paypal\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"cmd\" value=\"_xclick\" \/>\n\t<input type=\"hidden\" name=\"business\" value=\"{{content.business}}\" \/>\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"currency_code\" value=\"{{content.currencyCode}}\" \/>\n\t<input type=\"hidden\" name=\"button_subtype\" value=\"services\" \/>\n\t<input type=\"hidden\" name=\"no_note\" value=\"0\" \/>\n\t<input type=\"hidden\" name=\"shipping\" value=\"{{content.shipping}}\" \/>\n\t<input type=\"hidden\" name=\"bn\" value=\"JSCProfis_SP\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"custom\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"notify_url\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"return\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancel_return\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t{{{requireService}}}\n<\/form>\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/BuyNow/main.php';
PluginWrapper._config.active = true;

var pluginId = 'BuyNow';
var Globals = {
	_settingsContent: null,
	_settingsDialog: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			Globals._settingsContent = '<p><strong>' + __('Page URL') + ':</strong> <a href="https://paypal.com/" target="_blank">https://paypal.com/</a></p>' +
					'<p><strong>Important:</strong> Make sure that IPN setting is enabled in your Paypal account. To enable it:<br />' +
					'1. log in to your Paypal account;<br />' +
					'2. go to Settings -> Seller tools -> Instant payment notifications -> Choose IPN Settings -> enable option "Receive IPN messages";<br />' +
					'3. save settings.</p>';
		}
		return Globals._settingsContent;
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: "#cccccc",
				style: 'solid',
				weight: 1,
				differ: false,
				css: "1px solid #cccccc",
				cssRaw: 'border: 1px solid #cccccc;'
			},
			logo: 'paypal_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'paypal_color.svg', name: 'coloured'},
			{id: 'paypal_black.svg', name: 'black'},
			{id: 'paypal_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	},
	supportedLocales: [
		'en_US', 'en_AU', 'en_GB', 'fr_CA', 'es_ES',
		'it_IT', 'fr_FR', 'de_DE', 'pt_BR', 'zh_CN',
		'da_DK', 'zh_HK', 'he_IL', 'no_NO', 'pl_PL',
		'pt_PT', 'ru_RU', 'sv_SE', 'th_TH', 'zh_TW',
		'nl_NL'
	],
	filterLocale: function(locale) {
		for (var i in this.supportedLocales) {
			if (this.supportedLocales[i] === locale) {
				if (locale === 'nl_NL') return 'nl_NL/NL';
				return locale;
			}
		}
		return 'en_US';
	},
	genLogoSrc: function(data, locale) {
		if (data.content.logo === 'buy-now') {
			var lang;
			locale = locale || ((lang = wb_builder.getLanguageByCode(wb_builder.site.currSelLang)) ? lang.locale : null);
			locale = locale || ((lang = wb_builder.getLanguageByCode(wb_builder.site.getLastDefLang())) ? lang.locale : null);
			locale = locale || wb_builder.locale;
			locale = locale || 'en_US';
			return 'https://www.paypalobjects.com/' + this.filterLocale(locale) + '/i/btn/btn_buynow_LG.gif';
		}
		return (wb_builder.pluginRepoPath ? wb_builder.pluginRepoPath : 'plugins') + '/' + pluginId + '/site/gallery_gen/' + pluginId + '/' + data.content.logo;
	},
	updateLogoSrc: function(data, locale) {
		data.content.logo_src = Globals.genLogoSrc(data);
		data.content.paymentGatewayButton = PluginWrapper.paymentGatewayGenButton(data);
	},
	preOpenCallback: function(fields) {
		if (!fields.__paymentGatewayBuyNowEventsSet__) {
			fields.__oriPreviewUpdateFunc__ = fields.preview.update;
			fields.preview.update = function() {};
		}
	},
	postOpenCallback: function(fields) {
		if (!fields.__paymentGatewayBuyNowEventsSet__) {
			fields.__paymentGatewayBuyNowEventsSet__ = true;
			fields.preview.update = fields.__oriPreviewUpdateFunc__;
			fields.__oriPreviewUpdateFunc__ = null;
			delete fields.__oriPreviewUpdateFunc__;
			fields.__paymentGatewayGenLogoSrc__ = function(data) {
				return Globals.genLogoSrc(data);
			};
			fields.preview.update();
		}
	},
	postApplyCallback: function(fields, data, elem) {
		Globals.updateLogoSrc(data);
	},
	postLoadCallback: function(data) {
		Globals.updateLogoSrc(data);
	}
};

ElementRegister.registerPaymentGateway({
	name: 'PayPal',
	id: 'paypal',
	pluginId: pluginId,
	priority: 1,
	pageUrl: 'https://paypal.com/',
	className: pluginId,
	keyFieldId: 'business',
	keyField2Id: 'demo',
	keyFieldDef: {type: 'VerticalLayout', noPadding: true, children: [
		{type: 'TextField', placeholder: __('Email'), id: 'key'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key2', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: null,
	nameFieldId: 'itemName',
	priceFieldId: 'amount',
	currencyFieldId: 'currencyCode',
	globalVars: ['demo'],
	useStylesInStoreCart: true,
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), pluginId, true),
	preOpenStylesCallback: Globals.preOpenCallback,
	postOpenStylesCallback: Globals.postOpenCallback,
	postApplyStylesCallback: Globals.postApplyCallback,
	postLoadStylesCallback: Globals.postLoadCallback
});

PluginWrapper.registerPlugin(pluginId, {
	name: 'Buy Now (PayPal)',
	element: {
		minSize: {width: 24, height: 24},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'itemName', type: 'BuynowItemName',
			get: function(data) { return data.content.itemName; },
			set: function(value, data) {
				data.content.itemName = value;
			}
		},
		{id: 'shipping', type: 'BuynowShipping',
			get: function(data) { return data.content.shipping; },
			set: function(value, data) {
				data.content.shipping = value;
			}
		},
		{id: 'amount', type: 'BuynowAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value.replace(/,/, '.');
			}
		},
		{id: 'currencyCode', type: 'BuynowCurrency',
			get: function(data) { return data.content.currencyCode; },
			set: function(value, data) {
				data.content.currencyCode = value;
			}
		},
		{id: 'business', type: 'BuynowBusiness',
			get: function(data) { return data.content.business; },
			set: function(value, data) {
				data.content.business = value;
			}
		},
		{id: 'demo', type: 'BuynowDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), pluginId),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'Label', text: __('Item Name'),
					helpText: __('Item name to be shown in paypal checkout window.')
				},
				{type: 'MultilangTextField', id: 'itemName'},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Price')},
						{type: 'TextField', id: 'amount', change: function() { this.setValue(this.getValue().replace(/,/, '.')); }}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Shipping')},
						{type: 'TextField', id: 'shipping'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currencyCode', options: [
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#AUD', name: 'AUD', value: 'AUD'},
							{id: '#BRL', name: 'BRL', value: 'BRL'},
							{id: '#GBP', name: 'GBP', value: 'GBP'},
							{id: '#CAD', name: 'CAD', value: 'CAD'},
							{id: '#CZK', name: 'CZK', value: 'CZK'},
							{id: '#DKK', name: 'DKK', value: 'DKK'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#HKD', name: 'HKD', value: 'HKD'},
							{id: '#HUF', name: 'HUF', value: 'HUF'},
							{id: '#ILS', name: 'ILS', value: 'ILS'},
							{id: '#JPY', name: 'JPY', value: 'JPY'},
							{id: '#MYR', name: 'MYR', value: 'MYR'},
							{id: '#MXN', name: 'MXN', value: 'MXN'},
							{id: '#TWD', name: 'TWD', value: 'TWD'},
							{id: '#NZD', name: 'NZD', value: 'NZD'},
							{id: '#NOK', name: 'NOK', value: 'NOK'},
							{id: '#PHP', name: 'PHP', value: 'PHP'},
							{id: '#PLN', name: 'PLN', value: 'PLN'},
							{id: '#RUB', name: 'RUB', value: 'RUB'},
							{id: '#SGD', name: 'SGD', value: 'SGD'},
							{id: '#SEK', name: 'SEK', value: 'SEK'},
							{id: '#CHF', name: 'CHF', value: 'CHF'},
							{id: '#THB', name: 'THB', value: 'THB'}
						]}
					]}
				]},
				{type: 'Label', text: __('Email address to receive payments'),
					css: {marginTop: 15},
					helpText: __('Email registered to your PayPal account.')
				},
				{type: 'TextField', id: 'business'},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), pluginId)
		]
	},
	pluginScoped: {
	},
	
	openAction: function (fields, data, elem) {
		var itm;
		fields.business.setText(data.content.business);
		fields.itemName.setText(data.content.itemName);
		itm = fields.currencyCode.getItemById('#' + data.content.currencyCode);
		fields.currencyCode.selectItem(itm);
		fields.amount.setText(data.content.amount);
		fields.shipping.setText(data.content.shipping);
		fields.demo.setValue(data.content.demo);
		Globals.preOpenCallback(fields);
		PluginWrapper.paymentGatewayOpenAction(fields, data, elem);
		Globals.postOpenCallback(fields);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.business = fields.business.getText();
		data.content.itemName = fields.itemName.getText();
		itm = fields.currencyCode.getSelectedItem();
		data.content.currencyCode = itm.getOriginal().value;
		data.content.amount = fields.amount.getText();
		data.content.shipping  = fields.shipping.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data, elem);
		Globals.postApplyCallback(fields, data, elem);
	},
	loadAction: function(data) {
		data.content.__globalVars = ['demo'];
		if (!data.content.business) data.content.business = '';
		if (!data.content.itemName) data.content.itemName = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.currencyCode) data.content.currencyCode = 'USD';
		if (!data.content.shipping) data.content.shipping = '';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['buy-now', 'paypal-logo-1.png', 'paypal-logo-full-1.png', 'paypal-logo-full-2.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'paypal_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
		Globals.postLoadCallback(data);
	},
	switchLanguageAction: function(data, elem, langCode) {
		var language = wb_builder.getLanguageByCode(langCode);
		var locale = language ? language.locale : null;
		Globals.updateLogoSrc(data, locale);
		this.updateElement();
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"gplus_like","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/gplus_like","customConfiguration":null};
PluginWrapper._config.id = 'gplus_like';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/gplus_like\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_gp_plus_one\"><\/div>\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\twindow.___gcfg = {parsetags: 'explicit'};\n<\/script>\n<script src=\"https:\/\/apis.google.com\/js\/platform.js\" type=\"text\/javascript\"><\/script>\n{{\/isPublished}}\n<script type=\"text\/javascript\">\n\tif (window.gapi) {\n\t\twindow.gapi.plusone.render('{{id}}_gp_plus_one', {\n\t\t\tsize: '{{content.size}}',\n\t\t\tannotation: '{{content.annotation}}',\n\t\t\twidth: '{{width}}'\n\t\t});\n\t}\n<\/script>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
PluginWrapper.registerPlugin('gplus_like', {
	name: 'G+',
	noButton: true,
	element: {
		minSize: {width: 24, height: 20},
		defaultSize: {width: 300, height: 24},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Size')},								
						{type: 'RadioBox', id: 'sizeSmall', label: __('Small'), group: 'size'},
						{type: 'RadioBox', id: 'sizeMedium', label: __('Medium'), group: 'size'},
						{type: 'RadioBox', id: 'sizeStandard', label: __('Standard'), group: 'size'},
						{type: 'RadioBox', id: 'sizeTall', label: __('Tall'), group: 'size'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Annotation')},								
						{type: 'RadioBox', id: 'annInline', label: __('Inline'), group: 'ann'},
						{type: 'RadioBox', id: 'annBubble', label: __('Buble'), group: 'ann'},
						{type: 'RadioBox', id: 'annNone', label: __('None'), group: 'ann'}
					]}
				]}
			]}
		]
	},
	
	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://apis.google.com/js/platform.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	resizeTimeout: null,

	resizeAction: function(data, elem) {
		if (data.content.annotation !== 'inline') return;
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 2000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.sizeSmall.setValue(data.content.size === 'small');
		fields.sizeMedium.setValue(data.content.size === 'medium');
		fields.sizeStandard.setValue(data.content.size === 'standard');
		fields.sizeTall.setValue(data.content.size === 'tall');
		
		fields.annInline.setValue(data.content.annotation === 'inline');
		fields.annBubble.setValue(data.content.annotation === 'bubble');
		fields.annNone.setValue(data.content.annotation === 'none');
	},
	applyAction: function(fields, data, elem) {
		if (fields.sizeSmall.getValue()) data.content.size = 'small';
		if (fields.sizeMedium.getValue()) data.content.size = 'medium';
		if (fields.sizeStandard.getValue()) data.content.size = 'standard';
		if (fields.sizeTall.getValue()) data.content.size = 'tall';
		
		if (fields.annInline.getValue()) data.content.annotation = 'inline';
		if (fields.annBubble.getValue()) data.content.annotation = 'bubble';
		if (fields.annNone.getValue()) data.content.annotation = 'none';
		var w = null, h = 24;
		if (data.content.size === 'small') {
			if (data.content.annotation === 'none') w = 24;
			if (data.content.annotation === 'bubble') w = 70;
			h = 15;
		} else if (data.content.size === 'medium') {
			if (data.content.annotation === 'none') w = 32;
			if (data.content.annotation === 'bubble') w = 90;
			h = 20;
		} else if (data.content.size === 'standard') {
			if (data.content.annotation === 'none') w = 38;
			if (data.content.annotation === 'bubble') w = 106;
			h = 24;
		} else if (data.content.size === 'tall') {	
			if (data.content.annotation === 'inline') {
				w = null; h = 20;
			} else {
				w = 50;
			}
			if (data.content.annotation === 'none') h = 20;
			if (data.content.annotation === 'bubble') h = 60;
		}
		this.setSize(w, h);
	},
	loadAction: function(data) {
		if (!data.content.size) data.content.size = 'standard';
		if (!data.content.annotation) data.content.annotation = 'inline';
	},
	loadedAction: function(data, elem) {
		window.___gcfg = {parsetags: 'explicit'};
		this.pluginScoped.addListener(this, function() {
			window.gapi.plusone.render(data.id + '_gp_plus_one', {
				size: data.content.size,
				annotation: data.content.annotation,
				width: data.width
			});
		});		
	}
	
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"paytr","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/paytr","customConfiguration":null};
PluginWrapper._config.id = 'paytr';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/paytr\/main.png";
PluginWrapper._config.template = "<script src=\"https:\/\/www.paytr.com\/js\/iframeResizer.min.js\"><\/script>\n<iframe src=\"https:\/\/www.paytr.com\/odeme\/guvenli\/{{content.token}}\" id=\"paytriframe\" frameborder=\"0\" scrolling=\"no\" style=\"width: 100%;\"><\/iframe>\n<!--<script>iFrameResize({},'#paytriframe');<\/script>-->";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
ElementRegister.registerPaymentGateway({
    name: __('PayTR'),
    id: 'paytr',
    keyField: __('Merchant ID'),
    keyFieldId: 'merchant_id',
    keyField2: __('Merchant Key'),
    keyField2Id: 'merchant_key',
    keyField3: __('Merchant Salt'),
    keyField3Id: 'merchant_salt',
    titleFieldId: 'label',
    nameFieldId: 'user_basket',
    priceFieldId: 'payment_amount'
});
PluginWrapper.registerPlugin('paytr', {
    name: 'PayTR',
    element: {
        minSize: {width: 208, height: 50},
        defaultSize: {width: 208, height: 50},
        resizable: true
    },
    propertyDialog: {
        noScroll: true,
        tabs: [
            {children: [{type: 'VerticalLayout', spacing: 15, children: [
                            {type: 'HorizontalLayout', columnWeights: [4, 4, 4], css: {marginTop: 15}, children: [
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Merchant ID'), helpText: __('Your Merchant ID provided by PayTR')},
                                            {type: 'TextField', id: 'merchant_id'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Merchant Key'), helpText: __('Your Merchant Key provided by PayTR')},
                                            {type: 'TextField', id: 'merchant_key'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Merchant Salt'), helpText: __('Your Merchant Salt provided by PayTR')},
                                            {type: 'TextField', id: 'merchant_salt'}
                                        ]}
                                ]},
                            {type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Item Name')},
                                            {type: 'TextField', id: 'user_basket'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Amount')},
                                            {type: 'TextField', id: 'payment_amount'}
                                        ]},
                                    {type: 'VerticalLayout', children: [
                                            {type: 'Label', text: __('Currency')},
                                            {type: 'DropdownBox', id: 'currency', options: [
                                                    {id: '#TL', name: 'TL', value: 'TL'},
                                                    {id: '#EUR', name: 'EUR', value: 'EUR'},
                                                    {id: '#USD', name: 'USD', value: 'USD'}
                                                ]}
                                        ]}
                                ]}
                        ]}
            ]}
        ]
    },
    resizeAction: function (data, elem) {
        if (!this.resizeTimeout) {
            var self = this;
            this.resizeTimeout = setTimeout(function () {
                self.resizeTimeout = null;
                self.updateElement();
            }, 1000);
        }
    },
    openAction: function (fields, data, elem) {
        var itm;
        itm = fields.currency.getItemById('#' + data.content.currency);
        fields.currency.selectItem(itm);
        fields.user_basket.setText(data.content.user_basket);
        fields.payment_amount.setText(data.content.payment_amount);
        fields.merchant_id.setText(data.content.merchant_id);
        fields.merchant_key.setText(data.content.merchant_key);
        fields.merchant_salt.setText(data.content.merchant_salt);
    },
    applyAction: function (fields, data, elem) {
        var itm;
        itm = fields.currency.getSelectedItem();
        data.content.currency = itm.getOriginal().value;
        data.content.user_basket = fields.user_basket.getText();
        data.content.paymemt_amount = fields.payment_amount.getText();
        data.content.merchant_id = fields.merchant_id.getText();
        data.content.merchant_key = fields.merchant_key.getText();
        data.content.merchant_salt = fields.merchant_salt.getText();
    },
    loadAction: function (data) {
        if (!data.content.user_basket)
            data.content.user_basket = 'Items description';
        if (!data.content.payment_amount)
            data.content.payment_amount = '129.99';
        if (!data.content.currency)
            data.content.currency = 'TL';
        if (!data.content.merchant_id)
            data.content.merchant_id = 'XXXXXX';
        if (!data.content.merchant_key)
            data.content.merchant_key = 'YYYYYYYYYYYYYY';
        if (!data.content.merchant_salt)
            data.content.merchant_salt = 'ZZZZZZZZZZZZZZ';

    }
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"google_calendar","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/google_calendar","customConfiguration":null};
PluginWrapper._config.id = 'google_calendar';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/google_calendar\/main.png";
PluginWrapper._config.template = "<iframe src=\"https:\/\/calendar.google.com\/calendar\/embed?src={{content.finalGroupId}}&title={{content.finalCalendarName}}&mode={{content.mode}}&ctz={{content.timezone}}&bgcolor=%23{{content.color}}&wkst={{content.weekday}}&hl={{content.language}}{{content.check1}}{{content.check2}}{{content.check3}}{{content.check4}}{{content.check5}}{{content.check6}}{{content.check7}}\" style=\"{{content.border_style}} \" width=\"100%\" height=\"100%\" frameborder=\"0\" scrolling=\"no\"><\/iframe>\n\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('google_calendar', {
    name: __('Calendar'),
    element: {
        minSize: {width: 100, height: 100},
        defaultSize: {width: 800, height: 600},
        resizable: true
    },
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [7, 5], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Google calendar ID'),
							helpText: __('To find calendar ID, go to calendar settings')
						},
						{type: 'TextField', id: 'groupId', placeholder: 'uk__en_gb@holiday.calendar.google.com'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Calendar name')},
						{type: 'TextField', id: 'calendar_name', placeholder: 'Calendar name'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Language')},
						{type: 'DropdownBox', id: 'language', options: [
							{id: '', name: 'Default'},
							{id: 'id', name: 'Bahasa Indonesia'},
							{id: 'ca', name: 'Català'},
							{id: 'cs', name: 'Čeština'},
							{id: 'da', name: 'Dansk'},
							{id: 'de', name: 'Deutsch'},
							{id: 'en_GB', name: 'English (UK)'},
							{id: 'en', name: 'English (US)'},
							{id: 'es', name: 'Español'},
							{id: 'es_419', name: 'Español (Latinoamérica)'},
							{id: 'fil', name: 'Filipino'},
							{id: 'fr', name: 'Français'},
							{id: 'hr', name: 'Hrvatski'},
							{id: 'it', name: 'Italiano'},
							{id: 'lv', name: 'Latviešu'},
							{id: 'lt', name: 'Lietuvių'},
							{id: 'hu', name: 'Magyar'},
							{id: 'nl', name: 'Nederlands'},
							{id: 'no', name: 'Norsk (bokmål)'},
							{id: 'pl', name: 'Polski'},
							{id: 'pt_BR', name: 'Português (Brasil)'},
							{id: 'pt_PT', name: 'Português (Portugal)'},
							{id: 'ro', name: 'Română'},
							{id: 'sk', name: 'Slovenčina'},
							{id: 'sl', name: 'Slovenščina'},
							{id: 'fi', name: 'Suomi'},
							{id: 'sv', name: 'Svenska'},
							{id: 'tr', name: 'Türkçe'},
							{id: 'vi', name: 'Tiếng Việt'},
							{id: 'el', name: 'Ελληνικά'},
							{id: 'ru', name: 'Русский'},
							{id: 'sr', name: 'Српски'},
							{id: 'uk', name: 'Українська'},
							{id: 'bg', name: 'Български'},
							{id: 'iw', name: 'עברית'},
							{id: 'ar', name: 'العربية'},
							{id: 'fa', name: 'فارسی'},
							{id: 'hi', name: 'हिन्दी'},
							{id: 'th', name: 'ภาษาไทย'},
							{id: 'zh_TW', name: '中文（繁體）'},
							{id: 'zh_CN', name: '中文（简体）'},
							{id: 'ja', name: '日本語'},
							{id: 'ko', name: '한국어'}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Time zone')},
						{type: 'DropdownBox', id: 'timezone', options: [
							{id: '', name: 'Default'},
							{id: 'Pacific/Niue', name: '(GMT-11:00) Niue'},
							{id: 'Pacific/Pago_Pago', name: '(GMT-11:00) Pago Pago'},
							{id: 'Pacific/Honolulu', name: '(GMT-10:00) Honolulu'},
							{id: 'Pacific/Rarotonga', name: '(GMT-10:00) Rarotonga'},
							{id: 'Pacific/Tahiti', name: '(GMT-10:00) Tahiti'},
							{id: 'Pacific/Marquesas', name: '(GMT-09:30) Marquesas'},
							{id: 'America/Anchorage', name: '(GMT-09:00) Anchorage'},
							{id: 'Pacific/Gambier', name: '(GMT-09:00) Gambier'},
							{id: 'America/Los_Angeles', name: '(GMT-08:00) Los Angeles'},
							{id: 'America/Tijuana', name: '(GMT-08:00) Tijuana'},
							{id: 'America/Vancouver', name: '(GMT-08:00) Vancouver'},
							{id: 'America/Whitehorse', name: '(GMT-08:00) Whitehorse'},
							{id: 'Pacific/Pitcairn', name: '(GMT-08:00) Pitcairn'},
							{id: 'America/Dawson_Creek', name: '(GMT-07:00) Dawson Creek'},
							{id: 'America/Denver', name: '(GMT-07:00) Denver'},
							{id: 'America/Edmonton', name: '(GMT-07:00) Edmonton'},
							{id: 'America/Hermosillo', name: '(GMT-07:00) Hermosillo'},
							{id: 'America/Mazatlan', name: '(GMT-07:00) Mazatlan'},
							{id: 'America/Phoenix', name: '(GMT-07:00) Phoenix'},
							{id: 'America/Yellowknife', name: '(GMT-07:00) Yellowknife'},
							{id: 'America/Belize', name: '(GMT-06:00) Belize'},
							{id: 'America/Chicago', name: '(GMT-06:00) Chicago'},
							{id: 'America/Costa_Rica', name: '(GMT-06:00) Costa Rica'},
							{id: 'America/El_Salvador', name: '(GMT-06:00) El Salvador'},
							{id: 'America/Guatemala', name: '(GMT-06:00) Guatemala'},
							{id: 'America/Managua', name: '(GMT-06:00) Managua'},
							{id: 'America/Mexico_City', name: '(GMT-06:00) Mexico City'},
							{id: 'America/Regina', name: '(GMT-06:00) Regina'},
							{id: 'America/Tegucigalpa', name: '(GMT-06:00)Tegucigalpa'},
							{id: 'America/Winnipeg', name: '(GMT-06:00) Winnipeg'},
							{id: 'Pacific/Galapagos', name: '(GMT-06:00) Galapagos'},
							{id: 'America/Bogota', name: '(GMT-05:00) Bogota'},
							{id: 'America/Cancun', name: '(GMT-05:00) Cancun'},
							{id: 'America/Cayman', name: '(GMT-05:00) Cayman'},
							{id: 'America/Guayaquil', name: '(GMT-05:00) Guayaquil'},
							{id: 'America/Havana', name: '(GMT-05:00) Havana'},
							{id: 'America/Iqaluit', name: '(GMT-05:00) Iqaluit'},
							{id: 'America/Jamaica', name: '(GMT-05:00) Jamaica'},
							{id: 'America/Lima', name: '(GMT-05:00) Lima'},
							{id: 'America/Nassau', name: '(GMT-05:00) Nassau'},
							{id: 'America/New_York', name: '(GMT-05:00) New York'},
							{id: 'America/Panama', name: '(GMT-05:00) Panama'},
							{id: 'America/Port-au-Prince', name: '(GMT-05:00) Port au Prince'},
							{id: 'America/Rio_Branco', name: '(GMT-05:00) Rio Branco'},
							{id: 'America/Toronto', name: '(GMT-05:00) Toronto'},
							{id: 'Pacific/Easter', name: '(GMT-05:00) Easter'},
							{id: 'America/Caracas', name: '(GMT-04:30) Caracas'},
							{id: 'America/Asuncion', name: '(GMT-04:00) Asuncion'},
							{id: 'America/Barbados', name: '(GMT-04:00) Barbados'},
							{id: 'America/Boa_Vista', name: '(GMT-04:00) Boa Vista'},
							{id: 'America/Campo_Grande', name: '(GMT-04:00) Campo Grande'},
							{id: 'America/Cuiaba', name: '(GMT-04:00) Cuiaba'},
							{id: 'America/Curacao', name: '(GMT-04:00) Curacao'},
							{id: 'America/Grand_Turk', name: '(GMT-04:00) Grand Turk'},
							{id: 'America/Guyana', name: '(GMT-04:00) Guyana'},
							{id: 'America/Halifax', name: '(GMT-04:00) Halifax'},
							{id: 'America/La_Paz', name: '(GMT-04:00) La Paz'},
							{id: 'America/Manaus', name: '(GMT-04:00) Manaus'},
							{id: 'America/Martinique', name: '(GMT-04:00) Martinique'},
							{id: 'America/Port_of_Spain', name: '(GMT-04:00) Port of Spain'},
							{id: 'America/Porto_Velho', name: '(GMT-04:00) Porto Velho'},
							{id: 'America/Puerto_Rico', name: '(GMT-04:00) Puerto Rico'},
							{id: 'America/Santo_Domingo', name: '(GMT-04:00) Santo Domingo'},
							{id: 'America/Thule', name: '(GMT-04:00) Thule'},
							{id: 'Atlantic/Bermuda', name: '(GMT-04:00) Bermuda'},
							{id: 'America/St_Johns', name: '(GMT-03:30) St Johns'},
							{id: 'America/Araguaina', name: '(GMT-03:00) Araguaina'},
							{id: 'America/Argentina/Buenos_Aires', name: '(GMT-03:00) Buenos Aires'},
							{id: 'America/Bahia', name: '(GMT-03:00) Bahia'},
							{id: 'America/Belem', name: '(GMT-03:00) Belem'},
							{id: 'America/Cayenne', name: '(GMT-03:00) Cayenne'},
							{id: 'America/Fortaleza', name: '(GMT-03:00) Fortaleza'},
							{id: 'America/Godthab', name: '(GMT-03:00) Godthab'},
							{id: 'America/Maceio', name: '(GMT-03:00) Maceio'},
							{id: 'America/Miquelon', name: '(GMT-03:00) Miquelon'},
							{id: 'America/Montevideo', name: '(GMT-03:00) Montevideo'},
							{id: 'America/Paramaribo', name: '(GMT-03:00) Paramaribo'},
							{id: 'America/Recife', name: '(GMT-03:00) Recife'},
							{id: 'America/Santiago', name: '(GMT-03:00) Santiago'},
							{id: 'America/Sao_Paulo', name: '(GMT-03:00) Sao Paulo'},
							{id: 'Antarctica/Palmer', name: '(GMT-03:00) Palmer'},
							{id: 'Antarctica/Rothera', name: '(GMT-03:00) Rothera'},
							{id: 'Atlantic/Stanley', name: '(GMT-03:00) Stanley'},
							{id: 'America/Noronha', name: '(GMT-02:00) Noronha'},
							{id: 'Atlantic/South_Georgia', name: '(GMT-02:00) South Georgia'},
							{id: 'America/Scoresbysund', name: '(GMT-01:00) Scoresbysund'},
							{id: 'Atlantic/Azores', name: '(GMT-01:00) Azores'},
							{id: 'Atlantic/Cape_Verde', name: '(GMT-01:00) Cape Verde'},
							{id: 'Africa/Abidjan', name: '(GMT+00:00) Abidjan'},
							{id: 'Africa/Accra', name: '(GMT+00:00) Accra'},
							{id: 'Africa/Bissau', name: '(GMT+00:00) Bissau'},
							{id: 'Africa/Casablanca', name: '(GMT+00:00) Casablanca'},
							{id: 'Africa/El_Aaiun', name: '(GMT+00:00) El Aaiun'},
							{id: 'Africa/Monrovia', name: '(GMT+00:00) Monrovia'},
							{id: 'America/Danmarkshavn', name: '(GMT+00:00) Danmarkshavn'},
							{id: 'Atlantic/Canary', name: '(GMT+00:00) Canary'},
							{id: 'Atlantic/Faroe', name: '(GMT+00:00) Faroe'},
							{id: 'Atlantic/Reykjavik', name: '(GMT+00:00) Reykjavik'},
							{id: 'Etc/GMT', name: '(GMT+00:00) GMT'},
							{id: 'Europe/Dublin', name: '(GMT+00:00) Dublin'},
							{id: 'Europe/Lisbon', name: '(GMT+00:00) Lisbon'},
							{id: 'Europe/London', name: '(GMT+00:00) London'},
							{id: 'Africa/Algiers', name: '(GMT+01:00) Algiers'},
							{id: 'Africa/Ceuta', name: '(GMT+01:00) Ceuta'},
							{id: 'Africa/Lagos', name: '(GMT+01:00) Lagos'},
							{id: 'Africa/Ndjamena', name: '(GMT+01:00) Ndjamena'},
							{id: 'Africa/Tunis', name: '(GMT+01:00) Tunis'},
							{id: 'Africa/Windhoek', name: '(GMT+01:00) Windhoek'},
							{id: 'Europe/Amsterdam', name: '(GMT+01:00) Amsterdam'},
							{id: 'Europe/Andorra', name: '(GMT+01:00) Andorra'},
							{id: 'Europe/Belgrade', name: '(GMT+01:00) Belgrade'},
							{id: 'Europe/Berlin', name: '(GMT+01:00) Berlin'},
							{id: 'Europe/Brussels', name: '(GMT+01:00) Brussels'},
							{id: 'Europe/Budapest', name: '(GMT+01:00) Budapest'},
							{id: 'Europe/Copenhagen', name: '(GMT+01:00) Copenhagen'},
							{id: 'Europe/Gibraltar', name: '(GMT+01:00) Gibraltar'},
							{id: 'Europe/Luxembourg', name: '(GMT+01:00) Luxembourg'},
							{id: 'Europe/Madrid', name: '(GMT+01:00) Madrid'},
							{id: 'Europe/Malta', name: '(GMT+01:00) Malta'},
							{id: 'Europe/Monaco', name: '(GMT+01:00) Monaco'},
							{id: 'Europe/Oslo', name: '(GMT+01:00) Oslo'},
							{id: 'Europe/Paris', name: '(GMT+01:00) Paris'},
							{id: 'Europe/Prague', name: '(GMT+01:00) Prague'},
							{id: 'Europe/Rome', name: '(GMT+01:00) Rome'},
							{id: 'Europe/Stockholm', name: '(GMT+01:00) Stockholm'},
							{id: 'Europe/Tirane', name: '(GMT+01:00) Tirane'},
							{id: 'Europe/Vienna', name: '(GMT+01:00) Vienna'},
							{id: 'Europe/Warsaw', name: '(GMT+01:00) Warsaw'},
							{id: 'Europe/Zurich', name: '(GMT+01:00) Zurich'},
							{id: 'Africa/Cairo', name: '(GMT+02:00) Cairo'},
							{id: 'Africa/Johannesburg', name: '(GMT+02:00) Johannesburg'},
							{id: 'Africa/Maputo', name: '(GMT+02:00) Maputo'},
							{id: 'Africa/Tripoli', name: '(GMT+02:00) Tripoli'},
							{id: 'Asia/Amman', name: '(GMT+02:00) Amman'},
							{id: 'Asia/Beirut', name: '(GMT+02:00) Beirut'},
							{id: 'Asia/Damascus', name: '(GMT+02:00) Damascus'},
							{id: 'Asia/Gaza', name: '(GMT+02:00) Gaza'},
							{id: 'Asia/Jerusalem', name: '(GMT+02:00) Jerusalem'},
							{id: 'Asia/Nicosia', name: '(GMT+02:00) Nicosia'},
							{id: 'Europe/Athens', name: '(GMT+02:00) Athens'},
							{id: 'Europe/Bucharest', name: '(GMT+02:00) Bucharest'},
							{id: 'Europe/Chisinau', name: '(GMT+02:00) Chisinau'},
							{id: 'Europe/Helsinki', name: '(GMT+02:00) Helsinki'},
							{id: 'Europe/Istanbul', name: '(GMT+02:00) Istanbul'},
							{id: 'Europe/Kaliningrad', name: '(GMT+02:00) Kaliningrad'},
							{id: 'Europe/Kiev', name: '(GMT+02:00) Kiev'},
							{id: 'Europe/Riga', name: '(GMT+02:00) Riga'},
							{id: 'Europe/Sofia', name: '(GMT+02:00) Sofia'},
							{id: 'Europe/Tallinn', name: '(GMT+02:00) Tallinn'},
							{id: 'Europe/Vilnius', name: '(GMT+02:00) Vilnius'},
							{id: 'Africa/Khartoum', name: '(GMT+03:00) Khartoum'},
							{id: 'Africa/Nairobi', name: '(GMT+03:00) Nairobi'},
							{id: 'Antarctica/Syowa', name: '(GMT+03:00) Syowa'},
							{id: 'Asia/Baghdad', name: '(GMT+03:00) Baghdad'},
							{id: 'Asia/Qatar', name: '(GMT+03:00) Qatar'},
							{id: 'Asia/Riyadh', name: '(GMT+03:00) Riyadh'},
							{id: 'Europe/Minsk', name: '(GMT+03:00) Minsk'},
							{id: 'Europe/Moscow', name: '(GMT+03:00) Moscow'},
							{id: 'Asia/Tehran', name: '(GMT+03:30) Tehran'},
							{id: 'Asia/Baku', name: '(GMT+04:00) Baku'},
							{id: 'Asia/Dubai', name: '(GMT+04:00) Dubai'},
							{id: 'Asia/Tbilisi', name: '(GMT+04:00) Tbilisi'},
							{id: 'Asia/Yerevan', name: '(GMT+04:00) Yerevan'},
							{id: 'Europe/Samara', name: '(GMT+04:00) Samara'},
							{id: 'Indian/Mahe', name: '(GMT+04:00) Mahe'},
							{id: 'Indian/Mauritius', name: '(GMT+04:00) Mauritius'},
							{id: 'Indian/Reunion', name: '(GMT+04:00) Reunion'},
							{id: 'Asia/Kabul', name: '(GMT+04:30) Kabul'},
							{id: 'Antarctica/Mawson', name: '(GMT+05:00) Mawson'},
							{id: 'Asia/Aqtau', name: '(GMT+05:00) Aqtau'},
							{id: 'Asia/Aqtobe', name: '(GMT+05:00) Aqtobe'},
							{id: 'Asia/Ashgabat', name: '(GMT+05:00) Ashgabat'},
							{id: 'Asia/Dushanbe', name: '(GMT+05:00) Dushanbe'},
							{id: 'Asia/Karachi', name: '(GMT+05:00) Karachi'},
							{id: 'Asia/Tashkent', name: '(GMT+05:00) Tashkent'},
							{id: 'Asia/Yekaterinburg', name: '(GMT+05:00) Yekaterinburg'},
							{id: 'Indian/Kerguelen', name: '(GMT+05:00) Kerguelen'},
							{id: 'Indian/Maldives', name: '(GMT+05:00) Maldives'},
							{id: 'Asia/Calcutta', name: '(GMT+05:30) Calcutta'},
							{id: 'Asia/Colombo', name: '(GMT+05:30) Colombo'},
							{id: 'Asia/Katmandu', name: '(GMT+05:45) Katmandu'},
							{id: 'Antarctica/Vostok', name: '(GMT+06:00) Vostok'},
							{id: 'Asia/Almaty', name: '(GMT+06:00) Almaty'},
							{id: 'Asia/Bishkek', name: '(GMT+06:00) Bishkek'},
							{id: 'Asia/Dhaka', name: '(GMT+06:00) Dhaka'},
							{id: 'Asia/Omsk', name: '(GMT+06:00) Omsk'},
							{id: 'Asia/Thimphu', name: '(GMT+06:00) Thimphu'},
							{id: 'Indian/Chagos', name: '(GMT+06:00) Chagos'},
							{id: 'Asia/Rangoon', name: '(GMT+06:30) Rangoon'},
							{id: 'Indian/Cocos', name: '(GMT+06:30) Cocos'},
							{id: 'Antarctica/Davis', name: '(GMT+07:00) Davis'},
							{id: 'Asia/Bangkok', name: '(GMT+07:00) Bangkok'},
							{id: 'Asia/Hovd', name: '(GMT+07:00) Hovd'},
							{id: 'Asia/Jakarta', name: '(GMT+07:00) Jakarta'},
							{id: 'Asia/Krasnoyarsk', name: '(GMT+07:00) Krasnoyarsk'},
							{id: 'Asia/Saigon', name: '(GMT+07:00) Saigon'},
							{id: 'Indian/Christmas', name: '(GMT+07:00) Christmas'},
							{id: 'Antarctica/Casey', name: '(GMT+08:00) Casey'},
							{id: 'Asia/Brunei', name: '(GMT+08:00) Brunei'},
							{id: 'Asia/Choibalsan', name: '(GMT+08:00) Choibalsan'},
							{id: 'Asia/Hong_Kong', name: '(GMT+08:00) Hong Kong'},
							{id: 'Asia/Irkutsk', name: '(GMT+08:00) Irkutsk'},
							{id: 'Asia/Kuala_Lumpur', name: '(GMT+08:00) Kuala Lumpur'},
							{id: 'Asia/Macau', name: '(GMT+08:00) Macau'},
							{id: 'Asia/Makassar', name: '(GMT+08:00) Makassar'},
							{id: 'Asia/Manila', name: '(GMT+08:00) Manila'},
							{id: 'Asia/Shanghai', name: '(GMT+08:00) Shanghai'},
							{id: 'Asia/Singapore', name: '(GMT+08:00) Singapore'},
							{id: 'Asia/Taipei', name: '(GMT+08:00) Taipei'},
							{id: 'Asia/Ulaanbaatar', name: '(GMT+08:00) Ulaanbaatar'},
							{id: 'Australia/Perth', name: '(GMT+08:00) Perth'},
							{id: 'Asia/Pyongyang', name: '(GMT+08:30) Pyongyang'},
							{id: 'Asia/Dili', name: '(GMT+09:00) Dili'},
							{id: 'Asia/Jayapura', name: '(GMT+09:00) Jayapura'},
							{id: 'Asia/Seoul', name: '(GMT+09:00) Seoul'},
							{id: 'Asia/Tokyo', name: '(GMT+09:00) Tokyo'},
							{id: 'Asia/Yakutsk', name: '(GMT+09:00) Yakutsk'},
							{id: 'Pacific/Palau', name: '(GMT+09:00) Palau'},
							{id: 'Australia/Adelaide', name: '(GMT+09:30) Adelaide'},
							{id: 'Australia/Darwin', name: '(GMT+09:30) Darwin'},
							{id: 'Antarctica/DumontDUrville', name: '(GMT+10:00) DumontDUrville'},
							{id: 'Asia/Magadan', name: '(GMT+10:00) Magadan'},
							{id: 'Asia/Vladivostok', name: '(GMT+10:00) Vladivostok'},
							{id: 'Australia/Brisbane', name: '(GMT+10:00) Brisbane'},
							{id: 'Australia/Hobart', name: '(GMT+10:00) Hobart'},
							{id: 'Australia/Sydney', name: '(GMT+10:00) Sydney'},
							{id: 'Pacific/Chuuk', name: '(GMT+10:00) Chuuk'},
							{id: 'Pacific/Guam', name: '(GMT+10:00) Guam'},
							{id: 'Pacific/Port_Moresby', name: '(GMT+10:00) Port Moresby'},
							{id: 'Pacific/Efate', name: '(GMT+11:00) Efate'},
							{id: 'Pacific/Guadalcanal', name: '(GMT+11:00) Guadalcanal'},
							{id: 'Pacific/Kosrae', name: '(GMT+11:00) Kosrae'},
							{id: 'Pacific/Norfolk', name: '(GMT+11:00) Norfolk'},
							{id: 'Pacific/Noumea', name: '(GMT+11:00) Noumea'},
							{id: 'Pacific/Pohnpei', name: '(GMT+11:00) Pohnpei'},
							{id: 'Asia/Kamchatka', name: '(GMT+12:00) Kamchatka'},
							{id: 'Pacific/Auckland', name: '(GMT+12:00) Auckland'},
							{id: 'Pacific/Fiji', name: '(GMT+12:00) Fiji'},
							{id: 'Pacific/Funafuti', name: '(GMT+12:00) Funafuti'},
							{id: 'Pacific/Kwajalein', name: '(GMT+12:00) Kwajalein'},
							{id: 'Pacific/Majuro', name: '(GMT+12:00) Majuro'},
							{id: 'Pacific/Nauru', name: '(GMT+12:00) Nauru'},
							{id: 'Pacific/Tarawa', name: '(GMT+12:00) Tarawa'},
							{id: 'Pacific/Wake', name: '(GMT+12:00) Wake'},
							{id: 'Pacific/Wallis', name: '(GMT+12:00) Wallis'},
							{id: 'Pacific/Apia', name: '(GMT+13:00) Apia'},
							{id: 'Pacific/Enderbury', name: '(GMT+13:00) Enderbury'},
							{id: 'Pacific/Fakaofo', name: '(GMT+13:00) Fakaofo'},
							{id: 'Pacific/Tongatapu', name: '(GMT+13:00) Tongatapu'},
							{id: 'Pacific/Kiritimati', name: '(GMT+14:00) Kiritimati'}
						]}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('First day')},
						{type: 'DropdownBox', id: 'weekday', options: [
							{id: '1', name: 'Sunday'},
							{id: '2', name: 'Monday'},
							{id: '7', name: 'Saturday'}
						]}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('View mode')},
						{type: 'RadioBox', id: 'mode0', label: __('Week'), group: 'mode'},
						{type: 'RadioBox', id: 'mode1', label: __('Month'), group: 'mode'},
						{type: 'RadioBox', id: 'mode2', label: __('Agenda'), group: 'mode'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Border'), helpText: __('Show border on calendar')},
						{type: 'RadioBox', id: 'border0', label: __('Yes'), group: 'border'},
						{type: 'RadioBox', id: 'border1', label: __('No'), group: 'border'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Background color')},
						{type: 'ColorSelector', id: 'color'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'check1', label: __('Title')},
						{type: 'CheckBox', id: 'check2', label: __('Navigation')},
						{type: 'CheckBox', id: 'check3', label: __('Date')}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'check4', label: __('Print icon')},
						{type: 'CheckBox', id: 'check5', label: __('Tabs')}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'check6', label: __('Calendars list')},
						{type: 'CheckBox', id: 'check7', label: __('Time zone')}
					]}
				]}
			]}
		]
	},
	pluginScoped: {
		placeholderGroupId: 'uk__en_gb@holiday.calendar.google.com',
		placeholderCalendarName: 'Calendar name',
	},
	properties: [
		{id: 'calendarId', type: 'GoogleCalendarId', helpText: __('To find calendar ID, go to calendar settings.'),
			get: function(data) { return data.content.groupId; },
			validate: function(value) {
				if (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(value))
					{
						return '';
					}
				return (__("'%s' field value is incorrect.").replace('%s', 'Email'));
			},
			set: function(value, data) {
				data.content.groupId = value;
				this.updateFinalGroupId(data, value);
			}

		},
		{id: 'calendarName', type: 'GoogleCalendarName',
			get: function(data) { return data.content.calendar_name; },
			set: function(value, data) {
				data.content.calendar_name = value;
				this.updateFinalCalendarName(data);
			}
		},
		{id: 'calendarLanguage', type: 'GoogleCalendarLanguage',
			get: function(data) { return data.content.language; },
			set: function(value, data) {
			data.content.language = value;
			}
		},
		{id: 'calendarTimezone', type: 'GoogleCalendarTimezone',
			get: function(data) { return data.content.timezone; },
			set: function(value, data) {
				data.content.timezone = value;
			}
		},
		{id: 'calendarFirstDay', type: 'GoogleCalendarFirstDay',
			get: function(data) { return data.content.weekday; },
			set: function(value, data) {
				data.content.weekday = value;
			}
		},
		{id: 'calendarBackgroundColor', type: 'GoogleCalendarBackgroundColor',
			get: function(data) { return data.content.color; },
			set: function(value, data) {
				data.content.color = value.replace('#', '');
			}
		},
		{id: 'calendarViewMode', type: 'GoogleCalendarViewMode',
			get: function(data) { return data.content.mode; },
			set: function(value, data) {
				data.content.mode = value;
			}
		},
		{id: 'calendarBorder', type: 'GoogleCalendarBorder',
			get: function(data) {return data.content.checkbox_border; },
			set: function(value, data) {
			console.log(value);
				data.content.checkbox_border = value;
				data.content.border = value ? '1' : '0';
				data.content.border_style = value ? 'border:solid 1px #777' : 'border-width:0';

			}
		},
		{id: 'calendarTitle', type: 'GoogleCalendarTitle',
			get: function(data) { return data.content.checkbox_check1; },
			set: function(value, data) {
				data.content.checkbox_check1 = value;
				data.content.check1 = value ? '' : '&showTitle=0';
			}
		},
		{id: 'calendarNavigation', type: 'GoogleCalendarNavigation',
			get: function(data) { return data.content.checkbox_check2; },
			set: function(value, data) {
				data.content.checkbox_check2 = value;
				data.content.check2 = value ? '' : '&showNav=0';
			}
		},
		{id: 'calendarDate', type: 'GoogleCalendarDate',
			get: function(data) { return data.content.checkbox_check3; },
			set: function(value, data) {
				data.content.checkbox_check3 = value;
				data.content.check3 = value ? '' : '&showDate=0';
			}
		},
		{id: 'calendarPrintIcon', type: 'GoogleCalendarPrintIcon',
			get: function(data) { return data.content.checkbox_check4; },
			set: function(value, data) {
				data.content.checkbox_check4 = value;
				data.content.check4 = value ? '' : '&showPrint=0';
			}
		},
		{id: 'calendarTabs', type: 'GoogleCalendarTabs',
			get: function(data) { return data.content.checkbox_check5; },
			set: function(value, data) {
				data.content.checkbox_check5 = value;
				data.content.check5 = value ? '' : '&showTabs=0';
			}
		},
		{id: 'calendarList', type: 'GoogleCalendarList',
			get: function(data) { return data.content.checkbox_check6; },
			set: function(value, data) {
				data.content.checkbox_check6 = value;
				data.content.check6 = value ? '' : '&showCalendars=0';
			}
		},
		{id: 'calendarShowTimezone', type: 'GoogleCalendarShowTimezone',
			get: function(data) { return data.content.checkbox_check7; },
			set: function(value, data) {
				data.content.checkbox_check7 = value;
				data.content.check7 = value ? '' : '&showTz=0';
			}
		},
	],
	batchUpdates: true,
	resizeTimeout: null,
	
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	updateFinalGroupId: function(data) {
		data.content.finalGroupId = (/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(data.content.groupId))
				? data.content.groupId : this.pluginScoped.placeholderGroupId;
	},
	updateFinalCalendarName: function(data) {
		var map = {
			'&': '&amp;',
			'<': '&lt;',
			'>': '&gt;',
			'"': '&quot;',
			"'": '&#039;'
		};
		data.content.finalCalendarName = data.content.calendar_name ? data.content.calendar_name.replace(/[&<>"']/g, function(m) {return map[m];}) : this.pluginScoped.placeholderCalendarName;
		data.content.finalCalendarName = encodeURIComponent(data.content.finalCalendarName);
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.timezone.getItemById(data.content.timezone);
		if (!itm) itm = fields.timezone.getItem(0);
		fields.timezone.selectItem(itm);
		itm = fields.language.getItemById(data.content.language);
		if (!itm) itm = fields.language.getItem(0);
		fields.language.selectItem(itm);
		itm = fields.weekday.getItemById(data.content.weekday);
		if (!itm) itm = fields.weekday.getItem(0);
		fields.weekday.selectItem(itm);
		fields.groupId.setText(data.content.groupId);
		fields.calendar_name.setText(data.content.calendar_name);
		fields.border0.setValue(data.content.border === '1');
		fields.border1.setValue(data.content.border === '0');
		
		fields.check1.setValue(data.content.check1 === '');
		fields.check2.setValue(data.content.check2 === '');
		fields.check3.setValue(data.content.check3 === '');
		fields.check4.setValue(data.content.check4 === '');
		fields.check5.setValue(data.content.check5 === '');
		fields.check6.setValue(data.content.check6 === '');
		fields.check7.setValue(data.content.check7 === '');
		
		fields.mode0.setValue(data.content.mode === 'WEEK');
		fields.mode1.setValue(data.content.mode === 'MONTH');
		fields.mode2.setValue(data.content.mode === 'AGENDA');
		
		fields.color.setValue(data.content.color);
	},
	applyAction: function(fields, data, elem) {
		var itm, color;
		itm = fields.timezone.getSelectedItem();
		data.content.timezone = itm.getOriginal().id;
		itm = fields.language.getSelectedItem();
		data.content.language = itm.getOriginal().id;
		itm = fields.weekday.getSelectedItem();
		data.content.weekday = itm.getOriginal().id;
		
		data.content.check1 = fields.check1.getValue() ? '' : '&showTitle=0';
		data.content.check2 = fields.check2.getValue() ? '' : '&showNav=0';
		data.content.check3 = fields.check3.getValue() ? '' : '&showDate=0';
		data.content.check4 = fields.check4.getValue() ? '' : '&showPrint=0';
		data.content.check5 = fields.check5.getValue() ? '' : '&showTabs=0';
		data.content.check6 = fields.check6.getValue() ? '' : '&showCalendars=0';
		data.content.check7 = fields.check7.getValue() ? '' : '&showTz=0';
		
		if (fields.border0.getValue()) {
			data.content.border = '1';
			data.content.border_style = 'border:solid 1px #777';
		}
		if (fields.border1.getValue()) {
			data.content.border = '0';
			data.content.border_style = 'border-width:0';
		}
		if (fields.mode0.getValue()) data.content.mode = 'WEEK';
		if (fields.mode1.getValue()) data.content.mode = 'MONTH';
		if (fields.mode2.getValue()) data.content.mode = 'AGENDA';
		
		color = fields.color.getValue();
		data.content.color = color.replace('#', '');
		
		data.content.groupId = fields.groupId.getText();
		data.content.calendar_name = fields.calendar_name.getText();
		this.updateFinalGroupId(data);
		this.updateFinalCalendarName(data);
	},
	loadAction: function(data) {
		if (!data.content.timezone) data.content.timezone = '';
		if (!data.content.language) data.content.language = '';
		if (!data.content.weekday) data.content.weekday = '2';
		if (!data.content.groupId) data.content.groupId = '';
		if (!data.content.calendar_name) data.content.calendar_name = '';
		if (!data.content.border) {data.content.border = '0'; data.content.checkbox_border = false;}
		else {data.content.border = '1'; data.content.checkbox_border = true;}
		if (!data.content.check1) {data.content.check1 = ''; data.content.checkbox_check1 = true;}
		else {data.content.check1 = '&showTitle=0'; data.content.checkbox_check1 = false;}
		if (!data.content.check2) {data.content.check2 = ''; data.content.checkbox_check2 = true;}
		else {data.content.check2 = '&showNav=0'; data.content.checkbox_check2 = false;}
		if (!data.content.check3) {data.content.check3 = ''; data.content.checkbox_check3 = true;}
		else {data.content.check3 = '&showDate=0'; data.content.checkbox_check3 = false;}
		if (!data.content.check4) {data.content.check4 = ''; data.content.checkbox_check4 = true;}
		else {data.content.check4 = '&showPrint=0'; data.content.checkbox_check5 = false;}
		if (!data.content.check5) {data.content.check5 = ''; data.content.checkbox_check5 = true;}
		else {data.content.check5 = '&showTabs=0'; data.content.checkbox_check5 = false;}
		if (!data.content.check6) {data.content.check6 = ''; data.content.checkbox_check6 = true;}
		else {data.content.check6 = '&showCalendars=0'; data.content.checkbox_check6 = false;}
		if (!data.content.check7) {data.content.check7 = ''; data.content.checkbox_check7 = true;}
		else {data.content.check7 = '&showTz=0'; data.content.checkbox_check7 = false;}

		if (!data.content.mode) data.content.mode = 'MONTH';
		if (!data.content.border_style) data.content.border_style = 'border-width:0';
		if (!data.content.color) data.content.color = '00adef';
		this.updateFinalGroupId(data);
		this.updateFinalCalendarName(data);
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"epsilon","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/epsilon","customConfiguration":null};
PluginWrapper._config.id = 'epsilon';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/epsilon\/main.png";
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\n{{#isPublished}}\n<div id=\"{{id}}_vars\"\n\tdata-amount=\"{{content.amount}}\"\n\tdata-transactionid=\"{{#content.store}}{transactionId}{{\/content.store}}\"\n\tdata-callbackurl=\"{{#content.store}}{callbackUrl}{{\/content.store}}\"\n\tdata-returnurl=\"{{#content.store}}{returnUrl}{{\/content.store}}\"><\/div>\n{{{requireService}}}\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/epsilon/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'epsilon_color_line.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'epsilon_color.svg', name: 'coloured'},
			{id: 'epsilon_black_line.svg', name: 'black line'},
			{id: 'epsilon_white_line.svg', name: 'white line', backgroundColor: '#000000'},
			{id: 'epsilon_color_line.svg', name: 'coloured line'},
		];
	},
	getTranslations: function() {
		return {
			'Card number': __c('Card number'),
			'Card expiration date': __c('Card expiration date'),
			'Card security code': __c('Card security code'),
			'Month': __c('Month'),
			'Year': __c('Year'),
			'loading...': __c('loading...'),
			'Close': __c('Close'),
			'Pay': __c('Pay'),
			'Error': __c('Error'),
			'Order Details': __c('Order Details'),
			'Product description': __c('Product description'),
			'Complete': __c('Complete'),
			"Field '%s' is required": __c("Field '%s' is required"),
			'An error occured during processing checkout.': __c('An error occured during processing checkout.'),
			'An error occured during card token creation.': __c('An error occured during card token creation.'),
			'Please try again later.': __c('Please try again later.'),
			'Contract code': __c('Contract code'),
			'Amount must be from %s to %s': __c('Amount must be from %s to %s'),
			'Click for more information': __c('Click for more information'),
			'Transaction code': __c('Transaction code'),
			'Payment has been submitted': __c('Payment has been submitted'),
			'Payment has been canceled': __c('Payment has been canceled'),
			'Are you sure you want to proceed?': __c('Are you sure you want to proceed?')
		};
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Epsilon',
	id: 'epsilon',
	pageUrl: 'https://www.epsilon.jp/',
	keyFieldId: 'contract_code',
	keyField2Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [12,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Contract code'), id: 'key'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key2', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	__t: Globals.getTranslations(),
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'epsilon', true)
});
PluginWrapper.registerPlugin('epsilon', {
	name: 'Epsilon',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'contract_code', type: 'EpsilonContractCode',
			get: function(data) { return data.content.contract_code; },
			set: function(value, data) {
				data.content.contract_code = value;
			}
		},
		{id: 'description', type: 'EpsilonDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'EpsilonAmount', helpText: __('Amount to be transferred') + ', JPY',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'demo', type: 'EpsilonDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'epsilon'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Contract code')},
					{type: 'TextField', id: 'contract_code'}
				]},
				{type: 'HorizontalLayout', columnWeights: [9,3], columnWeightsSmall: [9,3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + ', JPY'},
						{type: 'TextField', id: 'amount'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'epsilon')
		]
	},
	openAction: function(fields, data, elem) {
		fields.contract_code.setText(data.content.contract_code);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.contract_code = fields.contract_code.getText();
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__t = window.epsilon_translations;
		if (!data.content.contract_code) data.content.contract_code = '';
		if (!data.content.description) data.content.description = '';
		if (!data.content.amount) data.content.amount = '1';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['epsilon.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'epsilon_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"easypay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/easypay","customConfiguration":null};
PluginWrapper._config.id = 'easypay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/easypay\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Easypay\" method=\"post\" action=\"https:\/\/ssl.easypay.by\/weborder\/\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"EP_Sum\" value=\"{{content.sum}}\" \/>\n\t<input type=\"hidden\" name=\"EP_MerNo\" value=\"{{content.merno}}\" \/>\n\t<input type=\"hidden\" name=\"EP_Expires\" value=\"30\" \/>\n\t<input type=\"hidden\" name=\"EP_Comment\" value=\"{{content.ordername}}\" \/>\n\t<input type=\"hidden\" name=\"EP_OrderInfo\" value=\"{{content.orderdescription}}\" \/>\n\t{{#content.demo}}\n\t<input type=\"hidden\" name=\"EP_Debug\" value=\"1\" \/>\n\t{{\/content.demo}}\n\t<input type=\"hidden\" name=\"EP_Encoding\" value=\"utf-8\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"EP_OrderNo\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"EP_Success_URL\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"EP_Cancel_URL\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/easypay/main.php';
PluginWrapper._config.active = false;

var Globals = {
	_settingsContent: null,
	_settingsDialog: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			var base_url = 'http://' + wb_builder.siteDomain + '/';
			var content = $('<div>').append('<p><strong>Page URL:</strong> <a href="https://ssl.easypay.by/" target="_blank">https://ssl.easypay.by/</a></p>'
					+ '<p><strong>Notifications URL (IPN)</strong>:<br />'
					+ '<pre>' + base_url + '0/store-callback/Easypay' + '</pre></p>');
			Globals._settingsContent = content.html();
		}
		return Globals._settingsContent;
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'easypay_color_line.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'easypay_color.svg', name: 'coloured'},
			{id: 'easypay_black_line.svg', name: 'black line'},
			{id: 'easypay_white_line.svg', name: 'white line', backgroundColor: '#000000'},
			{id: 'easypay_color_line.svg', name: 'coloured line'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'EasyPay',
	id: 'easypay',
	pageUrl: 'https://ssl.easypay.by/',
	keyFieldId: 'merno',
	keyField2Id: 'webkey',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [6,6,12], children: [
		{type: 'TextField', placeholder: __('Merchant ID'), id: 'key'},
		{type: 'TextField', placeholder: __('Web key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'ordername,orderdescription',
	priceFieldId: 'sum',
	globalVars: ['merno', 'webkey'],
	useStylesInStoreCart: true,
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'easypay', true)
});
PluginWrapper.registerPlugin('easypay', {
	name: 'EasyPay',
	element: {
		minSize: {width: 60, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'merno', type: 'EasypayMerno', helpText:__("Merchant account number in EasyPay"),
			get: function(data) { return data.content.merno; },
			set: function(value, data) {
				data.content.merno = value;
			}
		},
		{id: 'webkey', type: 'EasypayWebKey', helpText:__("Personal key from EasyPay"),
			get: function(data) { return data.content.webkey; },
			set: function(value, data) {
				data.content.webkey = value;
			}
		},
		{id: 'ordername', type: 'EasypayOrderName', helpText:__("The name of the goods. Cannot contain special symbols"),
			get: function(data) { return data.content.ordername; },
			set: function(value, data) {
				data.content.ordername = value;
			}
		},
		{id: 'orderdescription', type: 'EasypayOrderDescription',
			get: function(data) { return data.content.orderdescription; },
			set: function(value, data) {
				data.content.orderdescription = value;
			}
		},
		{id: 'sum', type: 'EasypaySum',
			get: function(data) { return data.content.sum; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.sum = value;
			}
		},
		{id: 'demo', type: 'EasypayDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'easypay'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant ID'), helpText:__("Merchant account number in EasyPay")},
						{type: 'TextField', id: 'merno'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Web key'), helpText:__("Personal key from EasyPay")},
						{type: 'TextField', id: 'webkey'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name'), helpText:__("The name of the goods. Cannot contain special symbols")},
						{type: 'TextField', id: 'ordername'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred") + ', ' + __('BYN')},
						{type: 'TextField', id: 'sum'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'Label', text: __('Description')},
					{type: 'TextField', id: 'orderdescription'}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'bottom'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'easypay')
		]
	},
	openAction: function(fields, data, elem) {
		fields.merno.setText(data.content.merno);
		fields.webkey.setText(data.content.webkey);
		fields.ordername.setText(data.content.ordername);
		fields.orderdescription.setText(data.content.orderdescription);
		fields.sum.setText(data.content.sum);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.merno = fields.merno.getText();
		data.content.webkey = fields.webkey.getText();
		data.content.ordername = fields.ordername.getText();
		data.content.orderdescription = fields.orderdescription.getText();
		data.content.sum = fields.sum.getText();
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.merno) data.content.merno = '';
		if (!data.content.webkey) data.content.webkey = '';
		if (!data.content.ordername) data.content.ordername = ''; // Donate
		if (!data.content.orderdescription) data.content.orderdescription = ''; // Donate 1 RUB
		if (!data.content.sum) data.content.sum = '1';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['easypay.gif'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'easypay_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"webmoney_button","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/webmoney_button","customConfiguration":null};
PluginWrapper._config.id = 'webmoney_button';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/webmoney_button\/main.png";
PluginWrapper._config.template = "<form method=\"post\" action=\"https:\/\/merchant.wmtransfer.com\/lmi\/payment.asp\" data-gateway-id=\"WebmoneyButton\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input name=\"LMI_PAYMENT_AMOUNT\" value=\"{{content.amount}}\" type=\"hidden\" \/>\n\t<input name=\"LMI_PAYEE_PURSE\" value=\"{{content.purseId}}\" type=\"hidden\" \/>\n\t{{#content.store}}\n\t<input name=\"LMI_PAYMENT_DESC_BASE64\" value=\"{{content.description}}\" type=\"hidden\" \/>\n\t<input type=\"hidden\" name=\"LMI_RESULT_URL\" value=\"{callbackUrl}\" \/>\n\t<input type=\"hidden\" name=\"LMI_SUCCESS_URL\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"LMI_FAIL_URL\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"TRANSACTION_ID\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/webmoney_button/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#036cb5',
			button_border: {
				color: '#538ec1',
				style: 'none',
				weight: 1,
				css: { border: '1px none #538ec1' },
				cssRaw: 'border: 1px none #538ec1'
			},
			logo: 'webmoney_color_block_nobg.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#8abcdb'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: (isStore ? 'WebMoney' : __('pay 1.00 WMZ')),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	_settingsContent: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			var base_url = 'http://' + wb_builder.siteDomain + '/';
			var html = '<p><strong>Page URL:</strong> <a href="https://www.wmtransfer.com/" target="_blank">https://www.wmtransfer.com/</a></p>'
					+ '<p><strong>Result URL:</strong><br />'
					+ '<pre>' + base_url + '0/store-callback/Webmoneybutton' + '</pre></p>'
					+ '<p><strong>Success URL:</strong><br />'
					+ '<pre>' + base_url + '0/store-return/Webmoneybutton' + '</pre></p>'
					+ '<p><strong>Fail URL:</strong><br />'
					+ '<pre>' + base_url + '0/store-cancel/Webmoneybutton' + '</pre></p>';
			Globals._settingsContent = html;
		}
		return Globals._settingsContent;
	},
	getLogosList: function() {
		return [
			{id: 'webmoney_color.svg', name: 'coloured'},
			{id: 'webmoney_color_block.svg', name: 'coloured 2'},
			{id: 'webmoney_color_block_nobg.svg', name: 'coloured 3'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'WebMoney',
	id: 'webmoney_button',
	keyField: __('Purse ID'),
	keyFieldId: 'purseId',
	titleFieldId: 'title',
	nameFieldId: 'description|base64',
	priceFieldId: 'amount',
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'webmoney_button', true),
	settingsTabDef: Globals.getSettingsContent()
});
PluginWrapper.registerPlugin('webmoney_button', {
	name: __('WM Button'),
	element: {
		minSize: {width: 25, height: 25},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'purseId', type: 'WebmoneyPurseId',
			get: function(data) { return data.content.purseId; },
			set: function(value, data) {
				data.content.purseId = value;
			}
		},
		{id: 'description', type: 'WebmoneyDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'WebmoneyAmount', helpText: __('In WM units defined by purse'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'webmoney_button'),
	propertyDialog: {
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Purse ID')},
					{type: 'TextField', id: 'purseId'}
				]},
				{type: 'HorizontalLayout', columnWeights: [9, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('In WM units defined by purse')},
						{type: 'TextField', id: 'amount'}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'webmoney_button')
		]
	},
	openAction: function(fields, data, elem) {
		fields.purseId.setText(data.content.purseId);
		fields.amount.setText(data.content.amount);
		fields.description.setText(data.content.description);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.purseId = fields.purseId.getText();
		data.content.amount = parseFloat(fields.amount.getText().replace(',', '.'));
		if (isNaN(data.content.amount)) data.content.amount = 1.0;
		data.content.description = fields.description.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function(data) {
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			'title': 'button_label',
			'border': 'button_border',
			'background': 'button_color',
			'fontFamily': 'font_family',
			'fontSize': 'font_size',
			'fontColor': 'label_color'
		});
		if (!data.content.purseId) data.content.purseId = '';
		if (!data.content.amount) data.content.amount = 1.0;
		if (!data.content.description) data.content.description = __('Donation to charitable fund');
		if (['logo.svg'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'webmoney_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}

});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"redsys","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/redsys","customConfiguration":null};
PluginWrapper._config.id = 'redsys';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/redsys\/main.png";
PluginWrapper._config.template = "{{^isPublished}}\n{{{content.paymentGatewayButton}}}\n{{\/isPublished}}\n{{#isPublished}}\n\t{{#content.store}}\n\t\t<form action=\"\" data-gateway-id=\"Redsys\" method=\"post\">\n\t\t\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" data-multiplier=\"100\" data-fixed-decimal=\"0\" \/>\n\t\t\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t\t\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\n\t\t\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t\t\t<input type=\"hidden\" name=\"callbackUrl\" value=\"{callbackUrl}\" \/>\n\t\t\t<input type=\"hidden\" name=\"returnUrl\" value=\"{returnUrl}\" \/>\n\t\t\t<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n\t\t\t{{{content.paymentGatewayButton}}}\n\t\t<\/form>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t\t{{{requireService}}}\n\t{{\/content.store}}\n{{\/isPublished}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/redsys/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'redsys_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'redsys_color.svg', name: 'coloured'}
		];
	},
};

ElementRegister.registerPaymentGateway({
	name: 'Redsys',
	id: 'redsys',
	pageUrl: 'http://www.redsys.es/',
	keyFieldId: 'name',
	keyField2Id: 'terminal',
	keyField3Id: 'merchantCode',
	keyField4Id: 'merchantPassword',
	keyField5Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [9,3,6,6,12], noPadding: true, children: [
		{type: 'TextField', placeholder: __('Name'), id: 'key'},
		{type: 'TextField', placeholder: __('Terminal'), id: 'key2'},
		{type: 'TextField', placeholder: __('Merchant Code'), id: 'key3', css: {marginTop: 5}},
		{type: 'TextField', placeholder: __('Merchant Password'), id: 'key4', css: {marginTop: 5}},
		{type: 'CheckBox', label: __('Test mode'), id: 'key5', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['name', 'merchantCode', 'terminal', 'merchantPassword', 'demo'],
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true)
});
PluginWrapper.registerPlugin('redsys', {
	name: 'Redsys',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'name', type: 'RedsysName',
			get: function(data) { return data.content.name; },
			set: function(value, data) {
				data.content.name = value;
			}
		},
		{id: 'terminal', type: 'RedsysTerminal',
			get: function(data) { return data.content.terminal; },
			set: function(value, data) {
				data.content.terminal = value;
			}
		},
		{id: 'merchantCode', type: 'RedsysMerchantCode',
			get: function(data) { return data.content.merchantCode; },
			set: function(value, data) {
				data.content.merchantCode = value;
			}
		},
		{id: 'merchantPassword', type: 'RedsysMerchantPassword',
			get: function(data) { return data.content.merchantPassword; },
			set: function(value, data) {
				data.content.merchantPassword = value;
			}
		},
		{id: 'description', type: 'RedsysDescription', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'RedsysAmount', helpText: __('Amount to be transferred'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'RedsysCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'RedsysDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'redsys'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', spacing: 15, columnWeights: [9,3], columnWeightsSmall: [9,3], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Name')},
						{type: 'TextField', id: 'name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Terminal')},
						{type: 'TextField', id: 'terminal'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant Code')},
						{type: 'TextField', id: 'merchantCode'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Merchant Password')},
						{type: 'TextField', id: 'merchantPassword'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6,3,3], columnWeightsSmall: [6,3,3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '840', name: 'USD'},
							{id: '978', name: 'EUR'},
							{id: '826', name: 'GBP'},
							{id: '032', name: 'ARS'},
							{id: '986', name: 'BRL'},
							{id: '124', name: 'CAD'},
							{id: '756', name: 'CHF'},
							{id: '152', name: 'CLP'},
							{id: '392', name: 'CNY'},
							{id: '170', name: 'COP'},
							{id: '356', name: 'INR'},
							{id: '484', name: 'MXN'},
							{id: '604', name: 'PEN'},
							{id: '949', name: 'TRY'},
							{id: '937', name: 'VEF'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef()
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		fields.name.setText(data.content.name);
		fields.terminal.setText(data.content.terminal);
		fields.merchantCode.setText(data.content.merchantCode);
		fields.merchantPassword.setText(data.content.merchantPassword);
		fields.description.setText(data.content.description);
		fields.amount.setText(data.content.amount);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		data.content.name = fields.name.getText();
		data.content.terminal = fields.terminal.getText();
		data.content.merchantCode = fields.merchantCode.getText();
		data.content.merchantPassword = fields.merchantPassword.getText();
		data.content.description = fields.description.getText();
		data.content.amount = fields.amount.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__t = window.assist_translations;
		if (!data.content.name) data.content.name = '';
		if (!data.content.terminal) data.content.terminal = '';
		if (!data.content.merchantCode) data.content.merchantCode = '';
		if (!data.content.merchantPassword) data.content.merchantPassword = '';
		if (!data.content.description) data.content.description = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.currency) data.content.currency = '840';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['redsys.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'redsys_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"qiwi_kz","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/qiwi_kz","customConfiguration":null};
PluginWrapper._config.id = 'qiwi_kz';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/qiwi_kz\/main.png";
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\n<div class=\"modal fade\" id=\"{{id}}_modal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n                <h4 class=\"modal-title\">Qiwi.kz<\/h4>\n            <\/div>\n            <div class=\"modal-body\">\n\t\t\t\t<form data-gateway-id=\"QiwiKz\" id=\"{{id}}_form\" action=\"https:\/\/bill.qiwi.com\/order\/external\/main.action\" method=\"get\" style=\"width: 100%; height: 100%;\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<label>{{content.__t.Phone}} <span style=\"color: #c00;\">*<\/span><\/label>\n\t\t\t\t\t\t<input class=\"form-control input-sm\" type=\"text\" name=\"phone\" placeholder=\"{{content.__t.Example}}: +7 700 1234567\" required \/>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<input type=\"hidden\" name=\"ccy\" value=\"{{content.currency}}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"comment\" value=\"{{content.name}}\" \/>\n\t\t\t\t\t<input type=\"submit\" class=\"hidden\" \/>\n\t\t\t\t\t{{{requireService}}}\n\t\t\t\t\t{{#content.store}}\n\t\t\t\t\t<input type=\"hidden\" name=\"successUrl\" value=\"{returnUrl}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"failUrl\" value=\"{cancelUrl}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t\t\t\t\t{{\/content.store}}\n\t\t\t\t<\/form>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.Close}}<\/button>\n                <button type=\"button\" class=\"btn btn-primary\" id=\"{{id}}_pay_btn\">{{content.__t.Pay}}<\/button>\n            <\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar modalAppendToBody = false;\n\t\twindow.{{id}}_showModal = function() {\n\t\t\tif (!modalAppendToBody) {\n\t\t\t\t$('#{{id}}_modal').appendTo('body');\n\t\t\t\tmodalAppendToBody = true;\n\t\t\t}\n\t\t\t$('#{{id}}_modal').modal('show');\n\t\t};\n\t\t$('#{{id}}_pay_btn').on('click', function() {\n\t\t\t$(this).attr('disabled', 'disabled');\n\t\t\t$('#{{id}}_modal').find('input[type=\"submit\"]').trigger('click');\n\t\t});\n\t\t$('#{{id}}_modal').on('show.bs.modal', function() {\n\t\t\t$('#{{id}}_pay_btn').removeAttr('disabled');\n\t\t});\n\t\t$('#{{id}}_payment_gateway_button').on('click', window.{{id}}_showModal);\n\t})();\n<\/script>\n{{\/isPublished}}\n";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/qiwi_kz/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'qiwi_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'qiwi_color.svg', name: 'coloured'},
			{id: 'qiwi_dark.svg', name: 'dark'},
			{id: 'qiwi_white.svg', name: 'white'}
		];
	},
	getTranslations: function() {
		return {
			'Phone': __c('Phone'),
			'Pay': __c('Pay'),
			'Close': __c('Close'),
			'Example': __c('Example')
		};
	},
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://qiwi.kz/" target="_blank">https://qiwi.kz/</a></p>'
				+ '<p><strong>Callback URL:</strong><br />'
				+ '<pre>' + base_url + 'store-callback/Qiwi' + '</pre></p>';
	}
};

ElementRegister.registerPaymentGateway({
	name: 'QIWI.kz',
	id: 'qiwi_kz',
	pageUrl: 'https://qiwi.kz/',
	keyFieldId: 'api_id',
	keyField2Id: 'api_password',
	keyField3Id: 'prv_id',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, children: [
		{type: 'TextField', placeholder: 'API ID', id: 'key'},
		{type: 'TextField', placeholder: __('API Password'), id: 'key2'},
		{type: 'TextField', placeholder: __('Provider ID'), id: 'key3'}
	]},
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['api_id', 'api_password', 'prv_id'],
	__t: Globals.getTranslations(),
	useStylesInStoreCart: true,
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'qiwi_kz', true)
});

PluginWrapper.registerPlugin('qiwi_kz', {
	name: 'QIWI.kz',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 160, height: 81}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'api_id', type: 'KiwiQZApiId', helpText: __('Provider ID in API Visa QIWI Wallet'),
			get: function(data) { return data.content.api_id; },
			set: function(value, data) {
				data.content.api_id = value;
			}
		},
		{id: 'api_password', type: 'KiwiQZApiPassword', helpText: __('Provider password in API Visa QIWI Wallet'),
			get: function(data) { return data.content.api_password; },
			set: function(value, data) {
				data.content.api_password = value;
			}
		},
		{id: 'prv_id', type: 'KiwiQZProviderId', helpText: __('Provider numeric ID in QIWI'),
			get: function(data) { return data.content.prv_id; },
			set: function(value, data) {
				data.content.prv_id = value;
			}
		},
		{id: 'name', type: 'KiwiQZName', helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.name; },
			set: function(value, data) {
				data.content.name = value;
			}
		},
		{id: 'amount', type: 'KiwiQZAmount', helpText: __('Amount to be transferred') + ', KZT',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'qiwi_kz'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', spacing: 15, children: [
					{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: 'API ID', helpText: __('Provider ID in API Visa QIWI Wallet')},
							{type: 'TextField', id: 'api_id'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('API Password'), helpText: __('Provider password in API Visa QIWI Wallet')},
							{type: 'TextField', id: 'api_password'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Provider ID'), helpText: __('Provider numeric ID in QIWI')},
							{type: 'TextField', id: 'prv_id'}
						]}
					]},
					{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Item Name')},
							{type: 'TextField', id: 'name'}
						]},
						{type: 'VerticalLayout', children: [
							{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + ', KZT'},
							{type: 'TextField', id: 'amount'}
						]}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'qiwi_kz')
		]
	},
	openAction: function (fields, data, elem) {
		fields.api_id.setText(data.content.api_id);
		fields.api_password.setText(data.content.api_password);
		fields.prv_id.setText(data.content.prv_id);
		fields.amount.setText(data.content.amount);
		fields.name.setText(data.content.name);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		data.content.api_id = fields.api_id.getText();
		data.content.api_password = fields.api_password.getText();
		data.content.prv_id = fields.prv_id.getText();
		data.content.name = fields.name.getText();
		data.content.amount = fields.amount.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		data.content.__t = Globals.getTranslations();
		data.content.__globalVars = ['api_id', 'api_password', 'prv_id'];
		if (!data.content.api_id) data.content.api_id = '';
		if (!data.content.api_password) data.content.api_password = '';
		if (!data.content.prv_id) data.content.prv_id = '';
		if (!data.content.name) data.content.name = '';
		if (!data.content.amount) data.content.summ = '1';
		if (!data.content.currency) data.content.currency = 'KZT';
		if (['qiwi_kz.svg'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'qiwi_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"mollie","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/mollie","customConfiguration":null};
PluginWrapper._config.id = 'mollie';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/mollie\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Mollie\" method=\"POST\" accept-charset=\"utf-8\"{{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\" id=\"{{id}}_form\">\r\n\t{{#content.store}}\r\n\t<input type=\"hidden\" name=\"redirectUrl\" value=\"{returnUrl}\" \/>\r\n\t<input type=\"hidden\" name=\"webhookUrl\" value=\"{callbackUrl}\" \/>\r\n\t<input type=\"hidden\" name=\"orderId\" value=\"{transactionId}\" \/>\r\n\t{{\/content.store}}\r\n\t<input type=\"hidden\" name=\"amount\" value=\"{{content.amount}}\" \/>\r\n\t<input type=\"hidden\" name=\"description\" value=\"{{content.description}}\" \/>\r\n\t{{^content.store}}\r\n\t{{{requireService}}}\r\n\t{{\/content.store}}\r\n\t{{{content.paymentGatewayButton}}}\r\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/mollie/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#fff',
			button_border: {
				color: '#000',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #000' },
				cssRaw: 'border: 1px solid #000'
			},
			logo: 'mollie_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 106,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'mollie_color.svg', name: 'coloured'},
			{id: 'mollie_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	},
	getTranslations: function() {
		return {
			'first_name': __c('First Name'),
			'last_name': __c('Last Name'),
			'email': __c('E-mail'),
			'address': __c('Address'),
			'phone': __c('Phone'),
			'close': __c('Close'),
			'pay': __c('Pay')
		};
	}
};

ElementRegister.registerPaymentGateway({
    name: 'Mollie',
    id: 'mollie',
	pageUrl: 'https://www.mollie.com/',
    keyField: __('API Key'),
    keyFieldId: 'api_key',
    titleFieldId: 'label',
    nameFieldId: 'description',
    priceFieldId: 'amount',
	globalVars: ['api_key'],
	__t: Globals.getTranslations(),
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'mollie', true)
});

PluginWrapper.registerPlugin('mollie', {
    name: 'Mollie',
    element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 81},
		resizable: true
    },
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'api_key', type: 'MollieApiKey', helpText: __('This key you can get in account settings page'),
			get: function(data) { return data.content.api_key; },
			set: function(value, data) {
				data.content.api_key = value;
			}
		},
		{id: 'description', type: 'MollieDescription',
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'MollieAmount',
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
	], Globals.getLogosList(), 'mollie'),
    propertyDialog: {
        noScroll: true,
        tabs: [
            {children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('API Key'), helpText: __('This key you can get in account settings page')},
						{type: 'TextField', id: 'api_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [8, 4], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred') + ', EUR'},
						{type: 'TextField', id: 'amount'}
					]}
				]}
			]},
	        PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'mollie')
        ]
    },
    openAction: function (fields, data, elem) {
        fields.description.setText(data.content.description);
        fields.amount.setText(data.content.amount);
        fields.api_key.setText(data.content.api_key);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
    },
    applyAction: function (fields, data, elem) {
        data.content.description = fields.description.getText();
        data.content.amount = fields.amount.getText();
        data.content.api_key = fields.api_key.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
    },
    loadAction: function (data) {
		data.content.__globalVars = ['api_key'];
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			'label': 'button_label',
			'border': 'button_border',
			'background': 'button_color',
			'fontFamily': 'font_family',
			'fontSize': 'font_size',
			'fontColor': 'label_color'
		});
        if (!data.content.description) data.content.description = ''; // Items description
        if (!data.content.amount) data.content.amount = ''; // 129.99
        if (!data.content.api_key) data.content.api_key = ''; // test_Hptv39GWS46hmAJsjGx5bFJARsAMJb
	    if (['mollie.png'].indexOf(data.content.logo) > -1) {
		    data.content.logo = 'mollie_color.svg';
	    }
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
    },
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"alipay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/alipay","customConfiguration":null};
PluginWrapper._config.id = 'alipay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/alipay\/main.png";
PluginWrapper._config.template = "<form action=\"https:\/\/mapi.alipay.com\/gateway.do\" method=\"get\"{{^content.store}} target=\"_blank\"{{\/content.store}} data-gateway-id=\"Alipay\"{{#content.store}} data-onload=\"alipay_onload\" data-onsubmit=\"alipay_onsubmit\" data-sc=\"{{content.security_code}}\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t<input type=\"hidden\" name=\"_input_charset\" value=\"utf-8\" \/>\n\t<input type=\"hidden\" name=\"apInitiateService_run\" value=\"1\" \/>\n\t<input type=\"hidden\" name=\"body\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"notify_url\" value=\"{callbackUrl}\"\/>\n\t<input type=\"hidden\" name=\"out_trade_no\" value=\"{transactionId}\"\/>\n\t<input type=\"hidden\" name=\"sign\" value=\"\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"notify_url\" value=\"about:blank\"\/>\n\t<input type=\"hidden\" name=\"out_trade_no\" value=\"{{content.trade_no}}\"\/>\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t<input type=\"hidden\" name=\"partner\" value=\"{{content.partner}}\" \/>\n\t<input type=\"hidden\" name=\"service\" value=\"create_forex_trade\" \/>\n\t<input type=\"hidden\" name=\"subject\" value=\"{{content.description}}\" \/>\n\t<input type=\"hidden\" name=\"total_fee\" value=\"{{content.amount}}\" \/>\n\t<input type=\"hidden\" name=\"sign_type\" value=\"MD5\" \/>\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n{{#content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar alipay_sc = null;\n\t\tvar alipay_onsubmit = function(form) {\n\t\t\tif (('wb_MD5' in window) && (typeof window.wb_MD5 === 'function') && alipay_sc) {\n\t\t\t\tvar elems = form.elements;\n\t\t\t\tvar sign = '_input_charset=utf-8&apInitiateService_run=1&body='+ elems['subject'].value + '&currency=' + elems['currency'].value + '&notify_url=' + elems['notify_url'].value + '&out_trade_no=' + elems['out_trade_no'].value + '&partner=' + elems['partner'].value + '&service=create_forex_trade&subject=' + elems['subject'].value + '&total_fee=' + elems['total_fee'].value + alipay_sc;\n\t\t\t\t$('input[name=\"sign\"]', $(form)).val(wb_MD5(sign));\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tvar alipay_onload = function(form) {\n\t\t\tform = $(form);\n\t\t\talipay_sc = form.attr('data-sc');\n\t\t\tform.removeAttr('data-sc');\n\t\t};\n\t\twindow.alipay_onsubmit = alipay_onsubmit;\n\t\twindow.alipay_onload = alipay_onload;\n\t})();\n<\/script>\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/alipay/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#5bc0de',
			button_border: {
				color: '#ffffff',
				style: 'solid',
				weight: 2,
				css: { border: '2px solid #ffffff' },
				cssRaw: 'border: 2px solid #ffffff'
			},
			logo: 'alipay_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#6e9bc2'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 102,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'alipay_color.svg', name: 'coloured'},
			{id: 'alipay_black.svg', name: 'black'},
			{id: 'alipay_white.svg', name: 'white', backgroundColor: '#000000'}
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: __('Alipay'),
	id: 'alipay',
	pageUrl: 'https://global.alipay.com/',
	keyField: __('Partner'),
	keyFieldId: 'partner',
	keyField2: __('Security code'),
	keyField2Id: 'security_code',
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	defaultStyles: Globals.getDefaultStyles(true),
	useStylesInStoreCart: true,
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'alipay', true)
});

PluginWrapper.registerPlugin('alipay', {
	name: __('Alipay'),
	element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'partner', type: 'AlipayPartner', helpText: __('The ID of the partner on the Alipay system'),
			get: function(data) { return data.content.partner; },
			set: function(value, data) {
				data.content.partner = value;
			}
		},
		{id: 'security', type: 'AlipaySecurity',  helpText: __('Security key on the Alipay system'),
			get: function(data) { return data.content.security; },
			set: function(value, data) {
				data.content.security = value;
			}
		},
		{id: 'description', type: 'AlipayDescription',  helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'AlipayAmount',  helpText: __('Amount to be transferred. Range 0.01 ~ 1000000.00'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'AlipayCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
	], Globals.getLogosList(), 'alipay'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred. Range 0.01 ~ 1000000.00')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#GBP', name: 'GBP', value: 'GBP'},
							{id: '#HKD', name: 'HKD', value: 'HKD'},
							{id: '#USD', name: 'USD', value: 'USD'},
							{id: '#CHF', name: 'CHF', value: 'CHF'},
							{id: '#SGD', name: 'SGD', value: 'SGD'},
							{id: '#SEK', name: 'SEK', value: 'SEK'},
							{id: '#DKK', name: 'DKK', value: 'DKK'},
							{id: '#NOK', name: 'NOK', value: 'NOK'},
							{id: '#JPY', name: 'JPY', value: 'JPY'},
							{id: '#CAD', name: 'CAD', value: 'CAD'},
							{id: '#AUD', name: 'AUD', value: 'AUD'},
							{id: '#EUR', name: 'EUR', value: 'EUR'},
							{id: '#NZD', name: 'NZD', value: 'NZD'},
							{id: '#RUB', name: 'RUB', value: 'RUB'},
							{id: '#MOP', name: 'MOP', value: 'MOP'}
						]}
					]}
				]},
				{type: 'HorizontalLayout',css: {marginTop: 15}, columnWeights: [6, 6], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Partner'), helpText: __('The ID of the partner on the Alipay system')},
						{type: 'TextField', id: 'partner'}
					]},									
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Security code'), helpText: __('Security key on the Alipay system')},
						{type: 'TextField', id: 'security'}
					]}						
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'alipay')
		]
	},
	openAction: function(fields, data, elem) {
		fields.description.setText(data.content.description);
		fields.security.setText(data.content.security);
		fields.partner.setText(data.content.partner);
		fields.amount.setText(data.content.amount);
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		data.content.description = fields.description.getText();
		data.content.security = fields.security.getText();
		data.content.partner = fields.partner.getText();
		data.content.amount = fields.amount.getText();
		data.content.trade_no = Date.now();
		var itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function(data) {
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			'label': 'button_label',
			'border': 'button_border',
			'background': 'button_color',
			'fontFamily': 'font_family',
			'fontSize': 'font_size',
			'fontColor': 'label_color'
		});
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.security) data.content.security = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.trade_no) data.content.trade_no = '';
		if (!data.content.currency) data.content.currency = 'USD';
		if (!data.content.partner) data.content.partner = '';
		if (['logo.svg'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'alipay_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"epaybg","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/epaybg","customConfiguration":null};
PluginWrapper._config.id = 'epaybg';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/epaybg\/main.png";
PluginWrapper._config.template = "<form action=\"{{#content.demo}}https:\/\/devep2.datamax.bg\/ep2\/epay2_demo\/{{\/content.demo}}{{^content.demo}}https:\/\/www.epay.bg\/{{\/content.demo}}\" method=\"post\" data-gateway-id=\"Epaybg\" style=\"width: 100%; height: 100%;\"{{^content.store}} target=\"_blank\"{{\/content.store}}>\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"name\" value=\"{{content.name}}\" \/>\n\t<input type=\"hidden\" name=\"price\" value=\"{{content.price}}\" \/>\n\t<input type=\"hidden\" name=\"currency\" value=\"{{content.currency}}\" \/>\n\t<input type=\"hidden\" name=\"transactionId\" value=\"{transactionId}\" \/>\n\t<input type=\"hidden\" name=\"URL_OK\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"URL_CANCEL\" value=\"{cancelUrl}\" \/>\n\t{{\/content.store}}\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/epaybg/main.php';
PluginWrapper._config.active = false;

var Globals = {
	getSettingsContent: function() {
		var base_url = 'http://' + wb_builder.siteDomain + '/';
		return '<p><strong>Page URL:</strong> <a href="https://www.epay.bg/" target="_blank">https://www.epay.bg/</a></p>'
					+ '<p><strong>Notifications URL</strong> (BG: <em>"URL за известяване"</em>)<strong>:</strong><br />'
					+ '<pre>' + base_url + 'store-callback/Epaybg' + '</pre></p>';
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'epaybg_color.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 110,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'epaybg_color.svg', name: 'coloured'},
			{id: 'epaybg_black.svg', name: 'black'},
			{id: 'epaybg_white.svg', name: 'white', backgroundColor: '#000000'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'ePay.bg',
	id: 'epaybg',
	keyFieldId: 'min_number',
	keyField2Id: 'secret_key',
	keyField3Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [6,6,12], children: [
		{type: 'TextField', placeholder: 'MIN', id: 'key'},
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key2'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key3', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'name',
	priceFieldId: 'price',
	currencyFieldId: 'currency',
	globalVars: ['min_number', 'secret_key', 'demo'],
	settingsTabDef: Globals.getSettingsContent(),
	useStylesInStoreCart: true,
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'epaybg', true)
});

PluginWrapper.registerPlugin('epaybg', {
	name: 'ePay.bg',
	element: {
		minSize: {width: 70, height: 35},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'min_number', type: 'EpaybgMinNumber', helpText: __('Customer number'),
			get: function(data) { return data.content.min_number; },
			set: function(value, data) {
				data.content.min_number = value;
			}
		},
		{id: 'secret_key', type: 'EpaybgSecretKey',
			get: function(data) { return data.content.secret_key; },
			set: function(value, data) {
				data.content.secret_key = value;
			}
		},
		{id: 'name', type: 'EpaybgName',
			get: function(data) { return data.content.name; },
			set: function(value, data) {
				data.content.name = value;
			}
		},
		{id: 'price', type: 'EpaybgPrice', helpText: __('Amount to be transferred'),
			get: function(data) { return data.content.price; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.price = value;
			}
		},
		{id: 'currency', type: 'EpaybgCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'EpaybgDemo', helpText: __('For testing purpose without real payments'),
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'epaybg'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'MIN', helpText: __('Customer number')},
						{type: 'TextField', id: 'min_number'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Secret Key')},
						{type: 'TextField', id: 'secret_key'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6,3,3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'name'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred')},
						{type: 'TextField', id: 'price'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: 'BGN', name: 'BGN'},
							{id: 'USD', name: 'USD'},
							{id: 'EUR', name: 'EUR'}
						]}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'bottom'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'epaybg')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		fields.min_number.setText(data.content.min_number);
		fields.secret_key.setText(data.content.secret_key);
		fields.name.setText(data.content.name);
		fields.price.setText(data.content.price);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		data.content.min_number = fields.min_number.getText();
		data.content.secret_key = fields.secret_key.getText();
		data.content.name = fields.name.getText();
		data.content.price = fields.price.getText();
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function (data) {
		if (!data.content.min_number) data.content.min_number = '';
		if (!data.content.secret_key) data.content.secret_key = '';
		if (!data.content.name) data.content.name = '';
		if (!data.content.price) data.content.price = '1';
		if (!data.content.currency) data.content.currency = 'BGN';
		if (data.content.demo === undefined) data.content.demo = false;
		if (['epay.png'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'epaybg_color.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"gplus_badge","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/gplus_badge","customConfiguration":null};
PluginWrapper._config.id = 'gplus_badge';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/gplus_badge\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_gp_comunity\"><\/div>\n{{#isPublished}}\n<script type=\"text\/javascript\">\n\twindow.___gcfg = {parsetags: 'explicit'};\n<\/script>\n<script src=\"https:\/\/apis.google.com\/js\/platform.js\" type=\"text\/javascript\"><\/script>\n{{\/isPublished}}\n<script type=\"text\/javascript\">\n\tif (window.gapi) {\n\t\twindow.gapi.{{{content.btype}}}.render('{{id}}_gp_comunity', {\n\t\t\tlayout: '{{content.mode}}',\n\t\t\tshowcoverphoto: '{{content.cover}}',\n\t\t\tshowtagline: '{{content.tagline}}',\n\t\t\ttheme: '{{content.theme}}',\n\t\t\twidth: '{{width}}',\n\t\t\thref: 'https:\/\/plus.google.com\/{{{content.community}}}{{content.profileId}}'\n\t\t});\n\t}\n<\/script>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = false;
PluginWrapper.registerPlugin('gplus_badge', {
	name: 'Badge',
	noButton: true,
	element: {
		minSize: {width: 250, height: 100},
		defaultSize: {width: 400, height: 100},
		resizable: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('ID'),
						helpText: __('Please type profile, page or community ID and check respective badge type')
					},
					{type: 'TextField', id: 'profileId'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Badge type')},
						{type: 'RadioBox', id: 'btype0', label: __('Profile badge'), group: 'btype'},
						{type: 'RadioBox', id: 'btype1', label: __('Google+ page badge'), group: 'btype'},
						{type: 'RadioBox', id: 'btype2', label: __('Community badge'), group: 'btype'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Layout'), helpText: __('Orientation of the badge')},
						{type: 'RadioBox', id: 'mode0', label: __('Landscape'), group: 'mode'},
						{type: 'RadioBox', id: 'mode1', label: __('Portrait'), group: 'mode'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Theme'),
							helpText: __('Color theme of the badge. Light for light pages and dark theme for dark pages')
						},
						{type: 'RadioBox', id: 'light', label: __('Light'), group: 'theme'},
						{type: 'RadioBox', id: 'dark', label: __('Dark'), group: 'theme'}
					]}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, columnWeights: [4, 8], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Cover photo'), helpText: __('Show cover photo if exists')},
						{type: 'RadioBox', id: 'cover0', label: __('Yes'), group: 'cover'},
						{type: 'RadioBox', id: 'cover1', label: __('No'), group: 'cover'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Tag line'), helpText: __('Show tag line if exists')},
						{type: 'RadioBox', id: 'tagline0', label: __('Yes'), group: 'tagline'},
						{type: 'RadioBox', id: 'tagline1', label: __('No'), group: 'tagline'}
					]}
				]}
			]}
		]
	},

	pluginScoped: {
		scriptLoaded: false,
		scriptReady: false,
		listeners: [],
		addListener: function(inst, func) {
			if (this.scriptReady) {
				func.call(inst);
			} else {
				this.listeners.push({inst: inst, func: func});
			}
			if (!this.scriptLoaded) {
				this.scriptLoaded = true;
				var self = this;
				$.getScript('https://apis.google.com/js/platform.js', function() {
					self.scriptReady = true;
					for (var i = 0; i < self.listeners.length; i++) {
						self.listeners[i].func.call(self.listeners[i].inst);
					}
				});
			}
		}
	},
	resizeTimeout: null,

	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function() {
				self.resizeTimeout = null;
				self.updateElement();
			}, 2000);
		}
	},
	openAction: function(fields, data, elem) {
		fields.profileId.setText(data.content.profileId);
		
		fields.mode0.setValue(data.content.mode === 'landscape');
		fields.mode1.setValue(data.content.mode === 'portrait');

		fields.btype0.setValue(data.content.btype === 'person');
		fields.btype1.setValue(data.content.btype === 'page');
		fields.btype2.setValue(data.content.btype === 'community');

		fields.cover0.setValue(data.content.cover === 'true');
		fields.cover1.setValue(data.content.cover === 'false');
		
		fields.tagline0.setValue(data.content.tagline === 'true');
		fields.tagline1.setValue(data.content.tagline === 'false');

		fields.light.setValue(data.content.theme === 'light');
		fields.dark.setValue(data.content.theme === 'dark');
	},
	applyAction: function(fields, data, elem) {
		data.content.profileId = fields.profileId.getText();
		if (fields.mode0.getValue()) data.content.mode = 'landscape';
		if (fields.mode1.getValue()) data.content.mode = 'portrait';

		if (fields.btype0.getValue()) data.content.btype = 'person';
		if (fields.btype1.getValue()) data.content.btype = 'page';
		if (fields.btype2.getValue()) data.content.btype = 'community';
		if (data.content.btype === 'community') {
			data.content.community = 'communities/';
		} else {
			data.content.community = '';
		}
		if (fields.light.getValue()) data.content.theme = 'light';
		if (fields.dark.getValue()) data.content.theme = 'dark';

		if (fields.cover0.getValue()) data.content.cover = 'true';
		if (fields.cover1.getValue()) data.content.cover = 'false';

		if (fields.tagline0.getValue()) data.content.tagline = 'true';
		if (fields.tagline1.getValue()) data.content.tagline = 'false';
		if (data.content.mode === 'portrait') {
			if (data.content.cover === 'true') {
				this.setSize('', 400);
			} else {
				this.setSize('', 245);
			}
		}
		if (data.content.mode === 'landscape') {
			this.setSize('', 100);
		}
	},
	loadAction: function(data) {
		if (!data.content.mode) data.content.mode = 'landscape';
		if (!data.content.btype) data.content.btype = 'page';
		if (!data.content.theme) data.content.theme = 'light';
		if (!data.content.cover) data.content.cover = 'false';
		if (!data.content.tagline) data.content.tagline = 'false';

		if (!data.content.profileId) data.content.profileId = '+googleplus';
		if (data.content.btype === 'community') {
			data.content.community = 'communities/';
		} else {
			data.content.community = '';
		}
	},
	loadedAction: function(data, elem) {
		window.___gcfg = {parsetags: 'explicit'};
		this.pluginScoped.addListener(this, function() {
			window.gapi[data.content.btype].render(data.id + '_gp_comunity', {
				layout: data.content.mode,
				showcoverphoto: data.content.cover,
				showtagline: data.content.tagline,
				theme: data.content.theme,
				width: data.width,
				href: 'https://plus.google.com/' + data.content.community + data.content.profileId
			});
		});
	},

	saveAction: function(data, elem) {
		// TODO: save data
	}

});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"bank_transfer","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/bank_transfer","customConfiguration":null};
PluginWrapper._config.id = 'bank_transfer';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/bank_transfer\/main.png";
PluginWrapper._config.template = "{{%FILTERS}}\n<form data-gateway-id=\"BankTransfer\" action=\"\" method=\"post\" style=\"width: 100%; height: 100%;\" id=\"{{id}}_bank_transfer_form\" onsubmit=\"return false;\">\n\t<input type=\"hidden\" name=\"invoiceUrl\" value=\"\" \/>\n\t{{^content.store}}\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{#content.store}}\n\t<button class=\"btn btn-default btn-raised\" style=\"vertical-align: middle; height: 47px; font-weight: bold;\"><i class=\"fa fa-bank\"><\/i> {{content.__t.label}}<\/button>\n\t{{\/content.store}}\n<\/form>\n\n{{#content.store}}\n<script type=\"text\/javascript\">\n\t(function() {\n\t\t$('#{{id}}_bank_transfer_form').on('beforesend', function(e, checkoutData) {\n\t\t\te.preventDefault();\n\t\t\t$('#{{id}}_bank_transfer_invoice_link').attr(\"href\", checkoutData.orderData.invoiceUrl);\n\t\t\t$('#{{id}}_bank_transfer_modal')\n\t\t\t\t.appendTo(\"body\")\n\t\t\t\t.modal({\n\t\t\t\t\tbackdrop: 'static',\n\t\t\t\t\tkeyboard: false\n\t\t\t\t})\n\t\t\t\t.on('hide.bs.modal', function() {\n\t\t\t\t\twindow.location.href = checkoutData.backUrl;\n\t\t\t\t})\n\t\t\t;\n\t\t\treturn false;\n\t\t});\n\t})();\n<\/script>\n<div class=\"modal fade\" id=\"{{id}}_bank_transfer_modal\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n                <h4 class=\"modal-title\">{{content.__t.label}}<\/h4>\n            <\/div>\n            <div class=\"modal-body\">\n\t\t\t\t{{{content.info | i18n}}}\n\t\t\t\t<div>\n\t\t\t\t\t<a id=\"{{id}}_bank_transfer_invoice_link\" href=\"javascript:void(0)\" target=\"_blank\" class=\"btn btn-success\"><i class=\"fa fa-file-pdf-o\"><\/i> {{{content.btnDownloadLabel | i18n}}}<\/a>\n\t\t\t\t<\/div>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\n            <\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n{{\/content.store}}";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/bank_transfer/main.php';
PluginWrapper._config.active = false;
(function() {
	if (typeof window.bank_transfer_translations === 'undefined') {
		window.bank_transfer_translations = {
			'download_invoice': __c('Download invoice'),
			'label': __c('Bank Transfer'),
			'close': __c('Close')
		};
	}
})();

var updateBankTransferWarning = function(list, store) {
	var _this = this;
	setTimeout(function() {
		var text = '';
		if( _this.enabler.getValue() ) {
			var cartPropertiesFields = list.getUiFields();
			if( !cartPropertiesFields.billingShippingRequired.getValue() )
				text += '<li>' + __('"%s" checkbox must also be checked to enable this gateway.').replace("%s", __('Require Billing/Shipping Information')) + '</li>';
			if( !cartPropertiesFields.companyInfo.getValue() || cartPropertiesFields.companyInfo.getValue() === "" )
				text += '<li>' + __('Seller details are required to create invoices.') + '</li>';
			if( !cartPropertiesFields.invoiceDocumentNumberFormat.getValue() || cartPropertiesFields.invoiceDocumentNumberFormat.getValue() === "" )
				text += '<li>' + __('Invoice document number format is required to create invoices.') + '</li>';
			if( !store.contactForm.content.email || !store.contactForm.content.emailFrom  || store.contactForm.content.emailFrom === "" || store.contactForm.content.email === "" )
				text += '<li>' + __('To send order confirmations recipient and sender emails must be entered in store contact form email settings.') + '</li>';
		}
		if( text === '' )
			_this.bankTransferWarnings.setContent('');
		else
			_this.bankTransferWarnings.setContent('<div class="alert alert-warning" style="margin: 5px 0 0;"><ul style="padding: 0 0 0 15px;">' + text + '</ul></div>');
	}, 0);
};

var isV4 = window.wb_builder && wb_builder.builderMajorVersion && wb_builder.builderMajorVersion > 3;

ElementRegister.registerPaymentGateway({
	name: __('Bank Transfer'),
	id: 'bank_transfer',
	priority: 2,
	forceActive: true, // PluginWrapper._config.active,
	pageUrl: null,
	keyFieldId: 'info',
	keyField2Id: 'btnDownloadLabel',
	keyFieldDefaultValue: '<p><span style="color:rgb(0,0,0);">' + __("Your order was successfully placed.") + '<br />' + __("Please use Seller bank account information in invoice to make a bank transfer for your order.") + '</span></p>',
	keyField2DefaultValue: __('Download invoice'),
	keyFieldDef: {type: 'VerticalLayout', children: [
		{type: 'HorizontalLayout', columnWeights: [12, 12, 12], noPadding: true, children: [
			{type: 'Label', text: __('Information to display when order is placed')},
			{type: 'WYSIWYGControl', id: 'key', css: {height: 100, marginBottom: 5}, forcePasteAsPlainText: true},
			{type: 'MultilangTextField', id: 'key2', css: {width: 180}, visible: isV4, init: function() {
				this.getInputs().css('text-align', 'center');
			}}
		]},
		{type: 'CustomContainer', id: 'bankTransferWarnings'}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	globalVars: ['info', 'btnDownloadLabel'],
	__t: window.bank_transfer_translations,
	onInit: function(list, store) {
		var _this = this;
		var cartPropertiesFields = list.getUiFields();
		cartPropertiesFields.billingShippingRequired.on("change", function() {
			updateBankTransferWarning.call(_this, list, store);
		});
		cartPropertiesFields.companyInfo.on("change", function() {
			updateBankTransferWarning.call(_this, list, store);
		});
		cartPropertiesFields.invoiceDocumentNumberFormat.on("change", function() {
			updateBankTransferWarning.call(_this, list, store);
		});
		cartPropertiesFields.invoiceDocumentNumberSeries.on("change", function() {
			updateBankTransferWarning.call(_this, list, store);
		});
		cartPropertiesFields.invoiceDocumentNumberLength.on("change", function() {
			updateBankTransferWarning.call(_this, list, store);
		});
	},
	onEnable: updateBankTransferWarning,
	onDisable: updateBankTransferWarning
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"libelula","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/libelula","customConfiguration":null};
PluginWrapper._config.id = 'libelula';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/libelula\/main.png";
PluginWrapper._config.template = "{{{content.paymentGatewayButton}}}\n\n{{#isPublished}}\n<div class=\"modal fade\" id=\"{{id}}_modal\" tabindex=\"-1\" role=\"dialog\">\n\t<div class=\"modal-dialog\" role=\"document\">\n\t\t<div class=\"modal-content\">\n\t\t\t<div class=\"modal-header\">\n\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;<\/span><\/button>\n\t\t\t\t<h4 class=\"modal-title\">Libelula<\/h4>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-body\">\n\t\t\t\t<form action=\"{{#content.demo}}https:\/\/www.todotix.com:20365\/rest\/deuda\/registrar{{\/content.demo}}{{^content.demo}}https:\/\/www.todotix.com:20365\/rest\/deuda\/registrar{{\/content.demo}}\"id=\"{{id}}_form\" method=\"post\"{{^content.store}} target=\"_blank\"{{\/content.store}} data-gateway-id=\"Libelula\" style=\"width: 100%; height: 100%;\">\n\t\t\t\t\t<div class=\"form-group\">\n\t\t\t\t\t\t<p>Esta a punto de ser redireccionado al sitio de Libelula para concretar su pago. \u00bfO no?<\/p>\n\t\t\t\t\t<\/div>\n\t\t\t\t\t<input type=\"hidden\" name=\"email_cliente\" value=\"{{content.__t.email}}\"\/>\n\t\t\t\t\t<input type=\"hidden\" name=\"_input_charset\" value=\"utf-8\" \/>\n\n\t\t\t\t\t<input type=\"hidden\" name=\"lineas_detalle_deuda[0][concepto]\" value=\"{{content.description}}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"lineas_detalle_deuda[0][cantidad]\" value=\"1\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"lineas_detalle_deuda[0][costo_unitario]\" value=\"{{content.amount}}\" \/>\n\n\t\t\t\t\t<input type=\"hidden\" name=\"descripcion\" value=\"{{content.description}}\" \/>\n\t\t\t\t\t<input type=\"hidden\" name=\"appkey\" value=\"{{content.security}}\" \/>\n\n\t\t\t\t\t<input type=\"hidden\" name=\"moneda\" value=\"{{content.currency}}\" \/>\n\t\t\t\t\t\n\t\t\t\t\t{{#content.store}}\n\t\t\t\t\t<input type=\"hidden\" name=\"callback_url\" value=\"{callbackUrl}\"\/>\n\t\t\t\t\t<input type=\"hidden\" name=\"url_retorno\" value=\"{returnUrl}\"\/>\n\t\t\t\t\t<input type=\"hidden\" name=\"numero_documento\" value=\"{transactionId}\"\/>\n\t\t\t\t\t{{\/content.store}}\n\n\t\t\t\t\t<input type=\"submit\" class=\"hidden\" \/>\n\t\t\t\t<\/form>\n\t\t\t<\/div>\n\t\t\t<div class=\"modal-footer\">\n\t\t\t\t<button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">{{content.__t.close}}<\/button>\n\t\t\t\t<button type=\"button\" class=\"btn btn-primary\" id=\"{{id}}_pay_btn\">{{content.__t.pay}}<\/button>\n\t\t\t<\/div>\n\t\t<\/div>\n\t<\/div>\n<\/div>\n\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar modalAppendToBody = false;\n\t\twindow.{{id}}_showModal = function() {\n\t\t\tif (!modalAppendToBody) {\n\t\t\t\t$('#{{id}}_modal').appendTo('body');\n\t\t\t\tmodalAppendToBody = true;\n\t\t\t}\n\t\t\t$('#{{id}}_modal').modal('show');\n\t\t};\n\t\tfunction payment(e) {\n\t\t\t$('#{{id}}_pay_btn').attr('disabled', 'disabled');\n\n\t\t\t$.ajax({\n\t\t\t\turl: $('#{{id}}_form')[0].action,\n\t\t\t\ttype: \"POST\",\n\t\t\t\tdata: $('#{{id}}_form').serializeArray(),\n\t\t\t\tsuccess: function (data)\n\t\t\t\t{\n\t\t\t\t\tif (data['error']) {\n\t\t\t\t\t\talert(data['mensaje'])\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar link = document.createElement('a');\n\t\t\t\t\t\tlink.href = data['url_pasarela_pagos'];\n\t\t\t\t\t\t{{^content.store}}\n\t\t\t\t\t\tlink.target = '_blank';\n\t\t\t\t\t\t{{\/content.store}}\n\t\t\t\t\t\tdocument.body.appendChild(link);\n\t\t\t\t\t\tlink.click();\n\t\t\t\t\t\tlink.remove();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\n\t\tvar isStore = {{#content.store }}true{{\/content.store}}{{^content.store}}false{{\/content.store}};\n\t\t$('#{{id}}_form').on(isStore ? 'beforesend' : 'submit', payment);\n\n\t\t$('#{{id}}_pay_btn').on('click', function() {\n\t\t\t$(this).attr('disabled', 'disabled');\n\t\t\t$('#{{id}}_modal').find('input[type=\"submit\"]').trigger('click');\n\t\t});\n\n\n\t\t$('#{{id}}_modal').on('show.bs.modal', function() {\n\t\t\tif (isStore) {\n\t\t\t\tvar url = $('head base').attr('href') + '0\/requestGetBillingInfo\/Libelula';\n\t\t\t\t$.get(url, function (resp) {\n\t\t\t\t\tvar form = $('#{{id}}_form');\n\t\t\t\t\tif (resp.email) {\n\t\t\t\t\t\tform.get(0).elements['email_cliente'].value = resp.email;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t$('#{{id}}_pay_btn').removeAttr('disabled');\n\t\t});\n\t\t$('#{{id}}_payment_gateway_button').on('click', {{id}}_showModal);\n\t})();\n<\/script>\n{{\/isPublished}}\n";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/libelula/main.php';
PluginWrapper._config.active = true;

var Globals = {
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#ffffff',
			button_border: {
				color: '#cccccc',
				style: 'solid',
				weight: 1,
				css: { border: '1px solid #cccccc' },
				cssRaw: 'border: 1px solid #cccccc'
			},
			logo: 'libelula_black.svg',
			font_family: 'Arial',
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 102,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'libelula_black.svg', name: 'black'},
		];
	},
	getTranslations: function() {
		return {
			'email': __c('E-mail'),
			'pay': __c('Pay'),
			'close': __c('Close')
		};
	}
};

ElementRegister.registerPaymentGateway({
	name: __('Libelula'),
	id: 'libelula',
	pageUrl: 'https://www.todotix.com',
	keyField: __('Security code'),
	keyFieldId: 'security',
	keyField2Id: 'demo',
	keyFieldDef: {type: 'HorizontalLayout', noPadding: true, columnWeights: [12,12], children: [
		{type: 'TextField', placeholder: __('Secret Key'), id: 'key'},
		{type: 'CheckBox', label: __('Test mode'), id: 'key2', css: {padding: 7, marginTop: 5, display: 'inline-block'}, init: function() {
			this.getElem().attr('title', __('For testing purpose without real payments')).tooltip({placement: 'right'});
		}}
	]},
	titleFieldId: 'label',
	nameFieldId: 'description',
	priceFieldId: 'amount',
	currencyFieldId: 'currency',
	defaultStyles: Globals.getDefaultStyles(true),
	useStylesInStoreCart: true,
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'libelula', true),
	__t: Globals.getTranslations(),
	globalVars: ['organization', 'security', 'demo'],
});

PluginWrapper.registerPlugin('libelula', {
	name: __('Libelula'),
	element: {
		minSize: {width: 100, height: 30},
		defaultSize: {width: 160, height: 81},
		resizable: true
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'security', type: 'LibelulaSecurity',  helpText: __('Security key on the Libelula system'),
			get: function(data) { return data.content.security; },
			set: function(value, data) {
				data.content.security = value;
			}
		},
		{id: 'description', type: 'LibelulaDescription',  helpText: __('The name of the goods. Cannot contain special symbols'),
			get: function(data) { return data.content.description; },
			set: function(value, data) {
				data.content.description = value;
			}
		},
		{id: 'amount', type: 'LibelulaAmount',  helpText: __('Amount to be transferred. Range 0.01 ~ 1000000.00'),
			get: function(data) { return data.content.amount; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.amount = value;
			}
		},
		{id: 'currency', type: 'LibelulaCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'LibelulaDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'libelula'),
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Product description'), helpText: __('The name of the goods. Cannot contain special symbols')},
						{type: 'TextField', id: 'description'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __('Amount to be transferred. Range 0.01 ~ 1000000.00')},
						{type: 'TextField', id: 'amount'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: '#BOB', name: 'BOB', value: 'BOB'},
							{id: '#USD', name: 'USD', value: 'USD'},
						]}
					]}
				]},
				{type: 'HorizontalLayout',css: {marginTop: 15}, columnWeights: [6, 6], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Security code'), helpText: __('Security key on the Libelula system')},
						{type: 'TextField', id: 'security'}
					]}
				]},
				{type: 'VerticalLayout', css: {marginTop: 15}, children: [
					{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
						this.getElem().attr('title', __('For testing purpose without real payments'));
						this.getElem().tooltip({placement: 'right'});
					}}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'libelula')
		]
	},
	openAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getItemById('#' + data.content.currency);
		fields.currency.selectItem(itm);
		fields.description.setText(data.content.description);
		fields.security.setText(data.content.security);
		fields.amount.setText(data.content.amount);
		fields.demo.setText(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data);
	},
	applyAction: function(fields, data, elem) {
		var itm;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().value;
		data.content.description = fields.description.getText();
		data.content.security = fields.security.getText();
		data.content.amount = fields.amount.getText();
		data.content.demo = fields.demo.getText();
		PluginWrapper.paymentGatewayApplyAction(fields, data);
	},
	loadAction: function(data) {
		PluginWrapper.paymentGatewayMigrateNewVars(data, {
			'label': 'button_label',
			'border': 'button_border',
			'background': 'button_color',
			'fontFamily': 'font_family',
			'fontSize': 'font_size',
			'fontColor': 'label_color'
		});
		data.content.__t = Globals.getTranslations();
		if (!data.content.currency) data.content.currency = 'BOB';
		if (!data.content.description) data.content.description = __('Product description');
		if (!data.content.security) data.content.security = '';
		if (!data.content.amount) data.content.amount = '1';
		if (!data.content.demo) data.content.demo = '1';
		if (['logo.svg'].indexOf(data.content.logo) > -1) {
			data.content.logo = 'libelula_black.svg';
		}
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"expresspay","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/expresspay","customConfiguration":null};
PluginWrapper._config.id = 'expresspay';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/expresspay\/main.png";
PluginWrapper._config.template = "<form data-gateway-id=\"Expresspay\" method=\"POST\" accept-charset=\"utf-8\" {{^content.store}} target=\"_blank\"{{\/content.store}} style=\"width: 100%; height: 100%;\">\n\t{{#content.store}}\n\t<input type=\"hidden\" name=\"redirectUrl\" value=\"{returnUrl}\" \/>\n\t<input type=\"hidden\" name=\"cancelUrl\" value=\"{cancelUrl}\" \/>\n\t<input type=\"hidden\" name=\"orderId\" value=\"{transactionId}\" \/>\n\t{{\/content.store}}\n\t<input name=\"amount\" value=\"{{content.sum}}\" type=\"hidden\" \/>\n\t<input name=\"currency\" value=\"{{content.currency}}\" type=\"hidden\" \/>\n\t<input name=\"description\" value=\"{{content.orderDetails}}\" type=\"hidden\" \/>\n\t{{^content.store}}\n\t<input type=\"hidden\" name=\"{{id}}_submit\" value=\"1\" \/>\n\t{{{requireService}}}\n\t{{\/content.store}}\n\t{{{content.paymentGatewayButton}}}\n<\/form>\n";
PluginWrapper._config.serviceUrl = 'http://mipagina.okhosting.com/plugins/expresspay/main.php';
PluginWrapper._config.active = true;

var Globals = {
	_settingsContent: null,
	_settingsDialog: null,
	getSettingsContent: function() {
		if (!Globals._settingsContent) {
			var base_url = 'https://' + wb_builder.siteDomain + '/';
			var note = $('<p><strong>' + __('Note') + ':</strong> Ваш сайт должен поддерживать'
					+ ' HTTPS протокол, а также должен иметь валидный SSL сертификат'
					+ ' чтобы сервис Экспресс Платежи работал.<br />'
					+ 'Также убедитесь что опция <em>"Публикация сайта с принудительным HTTPS"</em>'
					+ ' в настройках сайта активна.</p>');
			var content = $('<div>').append('<p><strong>' + __('Page URL') + ':</strong> <a href="https://express-pay.by/" target="_blank">https://express-pay.by/</a></p>'
					+ '<p><strong>URL для уведомлений:</strong><br />'
					+ '<pre>' + base_url + '0/store-callback/Expresspay' + '</pre></p>');
			content.prepend('<br>').prepend(note);
			Globals._settingsContent = content.html();
		}
		return Globals._settingsContent;
	},
	getSettingsDialog: function() {
		if (!Globals._settingsDialog) {
			var dlg = new WB_Dialog(__('Settings'));
			dlg.setContent(Globals.getSettingsContent());
			dlg.removeAllButtons();
			dlg.addButton(__('Close'), function() {
				dlg.setVisible(false);
			}, false, 'btn-default');
			Globals._settingsDialog = dlg;
		}
		return Globals._settingsDialog;
	},
	getDefaultStyles: function(isStore) {
		var styles = {
			button_color: '#FFFFFF',
			button_border: {
				color: '#FFFFFF',
				style: 'solid',
				weight: 1,
				differ: true,
				radius: 0,
				css: {
					'border-top': "1px solid #07090e",
					'border-right': "1px solid #07090e",
					'border-bottom': "1px solid #07090e",
					'border-left': "1px solid #07090e"
				},
				cssRaw: 'border-top: 1px solid #07090e; border-right: 1px solid #07090e; border-bottom: 1px solid #07090e; border-left: 1px solid #07090e;'
			},
			logo: 'expresspay-logo.svg',
			font_family: "Arial",
			font_size: 12,
			label_color: '#949494'
		};
		return isStore ? styles : $.extend(true, styles, {
			button_label: __('Pay with %s').replace('%s', ''),
			showlogo: true,
			logo_width: 108,
			button_padding: 4
		});
	},
	getLogosList: function() {
		return [
			{id: 'expresspay-logo.svg', name: 'logo'},
			{id: 'expresspay-logo-erip.svg', name: 'logo-erip'},
			{id: 'expresspay-logo-epos.svg', name: 'logo-epos'},
			{id: 'expresspay-logo-card.svg', name: 'logo-card'},
		];
	}
};

ElementRegister.registerPaymentGateway({
	name: 'Экспресс Платежи',
	id: 'expresspay',
	keyFieldId: 'serviceId',
	keyField2Id: 'token',
	keyField3Id: 'secretWord',
	keyField4Id: 'secretWordForNotif',
	keyField5Id: 'cartPayType',
	keyFieldDef: {type: 'HorizontalLayout', columnWeights: [6, 6, 6, 6, 6, 6], noPadding: true, children: [
		{type: 'TextField', placeholder: 'Номер услуги', id: 'key'},
		{type: 'TextField', placeholder: 'Ключ API', id: 'key2'},
		{type: 'TextField', placeholder: 'Секретное слово', id: 'key3', css: {marginTop: 5}},
		{type: 'TextField', placeholder: 'Секретное слово для уведомлений', id: 'key4', css: {marginTop: 5}},
		{type: 'DropdownBox', placeholder: 'Способ оплаты', id: 'key5', css: {marginTop: 5}, options: [
			{id: 'CART_ERIP', name: 'ЕРИП'},
			{id: 'CART_EPOS', name: 'E-POS'},
			{id: 'CART_CARD', name: 'Интернет-эквайринг'},
		]}
	]},
	titleFieldId: 'label',
	nameFieldId: 'orderDetails',
	priceFieldId: 'sum',
	currencyFieldId: 'currency',
	globalVars: ['serviceId', 'token', 'secretWord', 'secretWordForNotif', 'cartPayType'],
	useStylesInStoreCart: true,
	settingsTabDef: Globals.getSettingsContent(),
	defaultStyles: Globals.getDefaultStyles(true),
	styleTabDef: PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'expresspay', true),
	forceActive: true
});

PluginWrapper.registerPlugin('expresspay', {
	name: 'Экспресс Платежи',
	element: {
		minSize: {width: 50, height: 20},
		defaultSize: {width: 150, height: 70}
	},
	properties: PluginWrapper.paymentGatewayStylePropertiesDef([
		{id: 'serviceId', type: 'ExpresspayServiceId', helpText: 'Можно узнать в личном кабинете сервиса "Экспресс Платежи" в настройках услуги.',
			get: function(data) { return data.content.serviceId; },
			set: function(value, data) {
				data.content.serviceId = value;
			}
		},
		{id: 'token', type: 'ExpresspayToken', helpText: 'Можно узнать в личном кабинете сервиса "Экспресс Платежи" в настройках услуги.',
			get: function(data) { return data.content.token; },
			set: function(value, data) {
				data.content.token = value;
			}
		},
		{id: 'secretWord', type: 'ExpresspaySecretWord', helpText: 'Задается в личном кабинете, секретное слово должно совпадать с секретным словом, установленным в личном кабинете сервиса "Экспресс Платежи".',
			get: function(data) { return data.content.secretWord; },
			set: function(value, data) {
				data.content.secretWord = value;
			}
		},
		{id: 'payType', type: 'ExpresspayPayType',
			get: function(data) { return data.content.payType; },
			set: function(value, data) {
				data.content.payType = value;
			}
		},
		{id: 'sum', type: 'ExpresspayAmount', helpText: __('Amount to be transferred') + ', BYN',
			get: function(data) { return data.content.sum; },
			validate: function(value) {
				if (/^[\d.,]+$/.test(value)) {
					return '';
				} else {
					return (__('Incorrect format'));
				}
			},
			set: function(value, data) {
				data.content.sum = value;
			}
		},
		{id: 'currency', type: 'ExpresspayCurrency',
			get: function(data) { return data.content.currency; },
			set: function(value, data) {
				data.content.currency = value;
			}
		},
		{id: 'demo', type: 'ExpresspayDemo',
			get: function(data) { return data.content.demo; },
			set: function(value, data) {
				data.content.demo = value;
			}
		},
	], Globals.getLogosList(), 'expresspay'),
	propertyDialog: {
		noScroll: false,
		tabs: [
			{children: [
				{type: 'HorizontalLayout', columnWeights: [6, 6], children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'Номер услуги', helpText: 'Можно узнать в личном кабинете сервиса "Экспресс Платежи" в настройках услуги.'},
						{type: 'TextField', id: 'serviceId'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'Ключ API', helpText: 'Можно узнать в личном кабинете сервиса "Экспресс Платежи" в настройках услуги.'},
						{type: 'TextField', id: 'token'}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'Секретное слово', helpText: 'Задается в личном кабинете, секретное слово должно совпадать с секретным словом, установленным в личном кабинете сервиса "Экспресс Платежи".'},
						{type: 'TextField', id: 'secretWord'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: 'Способ оплаты'},
						{type: 'DropdownBox', id: 'payType', options: [
							{id: 'ERIP', name: 'ЕРИП'},
							{id: 'EPOS', name: 'E-POS'},
							{id: 'CARD', name: 'Интернет-эквайринг'},
						]}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 3, 3], css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Item Name')},
						{type: 'TextField', id: 'orderDetails'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Amount'), helpText: __("Amount to be transferred") + ', ' + __('BYN')},
						{type: 'TextField', id: 'sum'}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Currency')},
						{type: 'DropdownBox', id: 'currency', options: [
							{id: 'BYN', name: 'BYN'},
						]}
					]}
				]},
				{type: 'HorizontalLayout', columnWeights: [6, 6], css: {marginTop: 15, }, children: [
					{type: 'VerticalLayout', children: [
						{type: 'CheckBox', id: 'demo', css: {display: 'inline-block'}, label: __('Test mode'), init: function() {
							this.getElem().attr('title', __('For testing purpose without real payments'));
							this.getElem().tooltip({placement: 'right'});
						}}
					]}
				]}
			]},
			PluginWrapper.paymentGatewayStyleTabDef(Globals.getLogosList(), 'expresspay')
		]
	},
	openAction: function (fields, data, elem) {
		var itm;
		var payTypeItm;
		fields.serviceId.setText(data.content.serviceId);
		fields.token.setText(data.content.token);
		fields.secretWord.setText(data.content.secretWord);
		fields.orderDetails.setText(data.content.orderDetails);
		fields.sum.setText(data.content.sum);
		payTypeItm = fields.payType.getItemById(data.content.payType);
		fields.payType.selectItem(payTypeItm);
		itm = fields.currency.getItemById(data.content.currency);
		fields.currency.selectItem(itm);
		fields.demo.setValue(data.content.demo);
		PluginWrapper.paymentGatewayOpenAction(fields, data, elem);
	},
	applyAction: function (fields, data, elem) {
		var itm;
		var payTypeItm;
		data.content.serviceId = fields.serviceId.getText();
		data.content.token = fields.token.getText();
		data.content.secretWord = fields.secretWord.getText();
		data.content.orderDetails = fields.orderDetails.getText();
		data.content.sum = fields.sum.getText();
		payTypeItm = fields.payType.getSelectedItem();
		data.content.payType = payTypeItm.getOriginal().id;
		itm = fields.currency.getSelectedItem();
		data.content.currency = itm.getOriginal().id;
		data.content.demo = fields.demo.getValue();
		PluginWrapper.paymentGatewayApplyAction(fields, data, elem);
	},
	loadAction: function (data) {
		data.content.__globalVars = ['serviceId', 'token', 'secretWord', 'demo', 'payType'];
		if (!data.content.serviceId) data.content.serviceId = ''; // 2
		if (!data.content.token) data.content.token = ''; // a75b74cbcfe446509e8ee874f421bd64
		if (!data.content.secretWord) data.content.secretWord = '';
		if (!data.content.orderDetails) data.content.orderDetails = '';
		if (!data.content.sum) data.content.sum = '1';
		if (!data.content.currency) data.content.currency = 'BYN';
		if (!data.content.payType) data.content.payType = 'ERIP';
		if (data.content.demo === undefined) data.content.demo = true;
		PluginWrapper.paymentGatewayLoadAction(data, Globals.getDefaultStyles());
	},
	getUsedFonts: function(data) {
		var items = [];
		if( data.content.font_family ) items.push(data.content.font_family);
		return items;
	}
});},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"instagram_video","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/instagram_video","customConfiguration":null};
PluginWrapper._config.id = 'instagram_video';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/instagram_video\/main.png";
PluginWrapper._config.template = "<iframe id=\"{{id}}_instagram_video\"\n        src=\"https:\/\/www.instagram.com\/{{content.finalVideoId}}\/embed\"\n        width=\"100%\" height=\"100%\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen><\/iframe>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
var defaultVideoId = 'p/CPbqgo4DMXU';

PluginWrapper.registerPlugin('instagram_video', {
	name: __('Instagram video'),
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 400, height: 480},
		resizable: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Instagram ID or URL'),
						helpText: '<span style="white-space: pre-wrap; word-break: break-word;">' + __('Instagram video ID or URL with format %s').replace('%s', 'https://www.instagram.com/{video_id}') + '</span>'
					},
					{type: 'TextField', id: 'videoId', placeholder: defaultVideoId}
				]},
			]}
		]
	},
	pluginScoped: {},
	batchUpdates: true,
	properties: [
		{id: 'videoId', type: 'InstagramVideoId', helpText: '<span style="white-space: pre-wrap; word-break: break-word;">' + __('Instagram video ID or URL with format %s').replace('%s', 'https://www.instagram.com/{video_id}') + '</span>',
			get: function(data) { return data.content.videoId; },
			validate: function (value, data, api) {
				this.getVideoId(value, api);
			},
			set: function(value, data) {
				var url = this.getVideoId(value);
				data.content.videoId = url ? url : value;
				data.content.finalVideoId = data.content.videoId ? data.content.videoId : defaultVideoId;
			}
		},
	],
	getVideoId: function(value, api) {
		var url = '';
		if (/^([a-zA-Z]+)$/.test(value) || /https?:\/\/(?:www\.)?instagram.com\/(\w+\/\w+)(?:$|\/)/.test(value)) {
			url = RegExp.$1;
			if (api) {
				this.displayErrorMessage(false);
				api.setError('');
			}
		} else if (api) {
			this.setErrorMessage(__('Invalid URL or ID'));
			api.setError(__('Invalid URL or ID'));
		}
		return url;
	},
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		var self = this;
		fields.videoId.setText(data.content.videoId);

		fields.videoId.on('change', function(e) {
			fields.videoId.setText(self.getVideoId(e.target.value));
		});
	},
	applyAction: function(fields, data, elem) {
		data.content.videoId = fields.videoId.getText();
		data.content.finalVideoId = data.content.videoId ? data.content.videoId : defaultVideoId;
	},
	loadAction: function (data) {
		if (!data.content.videoId) data.content.videoId = '';
		data.content.finalVideoId = data.content.videoId ? data.content.videoId : defaultVideoId;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"facebook_video","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/facebook_video","customConfiguration":null};
PluginWrapper._config.id = 'facebook_video';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/facebook_video\/main.png";
PluginWrapper._config.template = "<iframe id=\"{{id}}_facebook_video\"\n        src=\"https:\/\/www.facebook.com\/plugins\/video.php?href=https%3A%2F%2Fwww.facebook.com%2F{{content.finalVideoId}}&show_text=false&t={{content.finalStartTime}}\"\n        width=\"100%\"\n        height=\"100%\"\n        style=\"border:none;overflow:hidden\"\n        scrolling=\"no\"\n        frameborder=\"0\"\n        allowfullscreen=\"true\"\n        allow=\"autoplay; clipboard-write; encrypted-media; picture-in-picture; web-share\"><\/iframe>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
var defaultVideoId = '170515954946/videos/435802976468824';

PluginWrapper.registerPlugin('facebook_video', {
	name: __('Facebook video'),
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 400, height: 220},
		resizable: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Facebook ID or URL'),
						helpText: '<span style="white-space: pre-wrap; word-break: break-word;">' + __('Facebook video ID or URL with format %s').replace('%s', 'https://www.facebook.com/{page}/videos/{video_id}') + '</span>'
					},
					{type: 'TextField', id: 'videoId', placeholder: defaultVideoId}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Start at')},
						{type: 'TextField', id: 'startTime', placeholder: '00:00'}
					]}
				]}
			]}
		]
	},
	pluginScoped: {
		parseTime: function(time) {
			var h = 0, m = 0, s = 0, parts = time.split(':');
			if (parts.length >= 3) {
				h = parseInt(parts.shift(), 10);
				if (isNaN(h)) h = 0;
			}
			if (parts.length >= 2) {
				m = parseInt(parts.shift(), 10);
				if (isNaN(m)) m = 0;
			}
			s = parseInt(parts.shift(), 10);
			if (isNaN(s)) s = 0;

			return (h * 60 * 60) + (m * 60) + s;
		}
	},
	batchUpdates: true,
	properties: [
		{id: 'videoId', type: 'FacebookVideoId', helpText: '<span style="white-space: pre-wrap; word-break: break-word;">' + __('Facebook video ID or URL with format %s').replace('%s', 'https://www.facebook.com/{page}/videos/{video_id}') + '</span>',
			get: function(data) { return data.content.videoId; },
			validate: function (value, data, api) {
				this.getVideoId(value, api);
			},
			set: function(value, data) {
				var url = this.getVideoId(value);
				data.content.videoId = url ? url : value;
				data.content.finalVideoId = data.content.videoId ? data.content.videoId : defaultVideoId;
			}
		},
		{id: 'startTime', type: 'FacebookVideoStartTime',
			get: function(data) { return data.content.startTime; },
			set: function(value, data) {
				data.content.startTime = value;
			}
		}
	],
	getVideoId: function(value, api) {
		var url = '';
		if (/^([a-zA-Z]+)$/.test(value) || /https?:\/\/(?:www\.)?facebook.com\/(.+\/videos\/\d+)(?:$|\/)/.test(value)) {
			url = RegExp.$1;
			if (api) {
				this.displayErrorMessage(false);
				api.setError('');
			}
		} else if (api) {
			this.setErrorMessage(__('Invalid URL or ID'));
			api.setError(__('Invalid URL or ID'));
		}
		return url;
	},
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		var self = this;
		fields.videoId.setText(data.content.videoId);
		fields.startTime.setValue(data.content.startTime);

		fields.videoId.on('change', function(e) {
			fields.videoId.setText(self.getVideoId(e.target.value));
		});
	},
	applyAction: function(fields, data, elem) {
		data.content.startTime = fields.startTime.getValue();
		data.content.videoId = fields.videoId.getText();
		data.content.finalVideoId = data.content.videoId ? data.content.videoId : defaultVideoId;
		if ( typeof data.content.finalVideoId === 'string') {
			data.content.finalVideoId = (data.content.finalVideoId).replace(/\//g, '%2F');
		}
		data.content.finalStartTime = data.content.startTime ? this.pluginScoped.parseTime(data.content.startTime) : 0;
	},
	loadAction: function (data) {
		if (!data.content.videoId) data.content.videoId = '';
		if (!data.content.startTime) data.content.startTime = '';
		data.content.finalVideoId = data.content.videoId ? data.content.videoId : defaultVideoId;
		if ( typeof data.content.finalVideoId === 'string') {
			data.content.finalVideoId = (data.content.finalVideoId).replace(/\//g, '%2F');
		}
		data.content.finalStartTime = data.content.startTime ? this.pluginScoped.parseTime(data.content.startTime) : 0;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"aparat","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/aparat","customConfiguration":null};
PluginWrapper._config.id = 'aparat';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/aparat\/main.png";
PluginWrapper._config.template = "<iframe id=\"{{id}}_aparat\" src=\"https:\/\/www.aparat.com\/video\/video\/embed\/videohash\/{{content.finalGroupId}}\/vt\/frame?startTime={{content.finalStartTime}}\" width=\"100%\" height=\"100%\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen><\/iframe>\n";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('aparat', {
	name: 'Aparat',
	element: {
		minSize: {width: 100, height: 100},
		defaultSize: {width: 480, height: 300},
		resizable: true,
		supportsFullWidth: true
	},
	propertyDialog: {
		noScroll: true,
		tabs: [
			{children: [
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Aparat ID or URL'),
						helpText: __('Aparat video ID or URL with format https://www.aparat.com/v/{video_id}')
					},
					{type: 'TextField', id: 'groupId', placeholder: 'uE1Bq'}
				]},
				{type: 'HorizontalLayout', css: {marginTop: 15}, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Start at')},
						{type: 'TextField', id: 'startTime', placeholder: '00:00'}
					]}
				]}
			]}
		]
	},
	pluginScoped: {
		parseTime: function(time) {
			var h = 0, m = 0, s = 0, parts = time.split(':');
			if (parts.length >= 3) {
				h = parseInt(parts.shift(), 10);
				if (isNaN(h)) h = 0;
			}
			if (parts.length >= 2) {
				m = parseInt(parts.shift(), 10);
				if (isNaN(m)) m = 0;
			}
			s = parseInt(parts.shift(), 10);
			if (isNaN(s)) s = 0;

			return (h * 60 * 60) + (m * 60) + s;
		}
	},
	batchUpdates: true,
	properties: [
		{id: 'groupId', type: 'AparatGroupId', helpText: __('Aparat video id or url with format https://www.aparat.com/v/{video_id}'),
			get: function(data) { return data.content.groupId; },
			validate: function (value, data, api) {
				this.getVideoId(value, api);
			},
			set: function(value, data) {
				var url = this.getVideoId(value);
				data.content.groupId = url ? url : value;
				data.content.finalGroupId = data.content.groupId ? data.content.groupId : 'uE1Bq';
			}
		},
		{id: 'startTime', type: 'AparatStartTime',
			get: function(data) { return data.content.startTime; },
			set: function(value, data) {
				data.content.startTime = value;
			}
		}
	],
	getVideoId: function(value, api) {
		var url = '';
		if (/^([a-zA-Z]+)$/.test(value) || /https?:\/\/(?:www\.)?aparat.com\/v\/([a-zA-Z]+)(?:$|\/)/.test(value)) {
			url = RegExp.$1;
			if (api) {
				this.displayErrorMessage(false);
				api.setError('');
			}
		} else if (api) {
			this.setErrorMessage(__('Invalid URL or ID'));
			api.setError(__('Invalid URL or ID'));
		}
		return url;
	},
	resizeTimeout: null,
	resizeAction: function(data, elem) {
		if (!this.resizeTimeout) {
			var self = this;
			this.resizeTimeout = setTimeout(function () {
				self.resizeTimeout = null;
				self.updateElement();
			}, 1000);
		}
	},
	openAction: function(fields, data, elem) {
		var self = this;
		fields.groupId.setText(data.content.groupId);
		fields.startTime.setValue(data.content.startTime);

		fields.groupId.on('change', function(e) {
			fields.groupId.setText(self.getVideoId(e.target.value));
		});
	},
	applyAction: function(fields, data, elem) {
		data.content.startTime = fields.startTime.getValue();
		data.content.groupId = fields.groupId.getText();
		data.content.finalGroupId = data.content.groupId ? data.content.groupId : 'uE1Bq';
		data.content.finalStartTime = data.content.startTime ? this.pluginScoped.parseTime(data.content.startTime) : 0;
	},
	loadAction: function (data) {
		if (!data.content.groupId) data.content.groupId = '';
		if (!data.content.startTime) data.content.startTime = '';
		data.content.finalGroupId = data.content.groupId ? data.content.groupId : 'uE1Bq';
		data.content.finalStartTime = data.content.startTime ? this.pluginScoped.parseTime(data.content.startTime) : 0;
	}
});
},
function(ElementRegister, PluginWrapper, $) {
    var pluginData = {"id":"count_up","extReferenceId":null,"baseUrl":"http:\/\/mipagina.okhosting.com\/plugins\/count_up","customConfiguration":null};
PluginWrapper._config.id = 'count_up';
PluginWrapper._config.icon = "http:\/\/mipagina.okhosting.com\/plugins\/count_up\/main.png";
PluginWrapper._config.template = "<div id=\"{{id}}_wb_count_up\"><\/div>\n<script type=\"text\/javascript\">\n\t(function() {\n\t\tvar id = \"{{id}}_wb_count_up\";\n\t\tvar easingFn = function (t, b, c, d) {\n            return c * (-Math.pow(2, -10 * t \/ d) + 1) * 1024 \/ 1023 + b;\n        }\n\n        var useEasing = parseInt(\"{{content.useEasing}}\") || 0;\n\t\tvar fromValue = Math.max(\"{{content.fromValue}}\" * 1, 0);\n\t\tvar toValue = Math.max(\"{{content.toValue}}\" * 1, fromValue);\n\t\tif (fromValue < 0) fromValue = 0;\n\t\tif (toValue < fromValue) toValue = fromValue;\n\t\tvar duration = parseInt(\"{{content.duration}}\");\n\t\tif (duration <= 0) duration = 1;\n\t\tvar elem = document.getElementById(id);\n\n\t\telem.style.color = \"{{content.text.color}}\";\n\t\telem.style.fontSize = \"{{content.text.size}}px\";\n\t\telem.style.fontFamily = \"{{{content.text.font}}}\";\n\t\telem.style.textAlign = \"{{content.text.align}}\" || \"center\";\n\t\telem.style.fontWeight = (\"{{content.text.style.bold}}\" == \"true\" || \"{{content.text.style.bold}}\" == \"1\") ? \"bold\" : \"normal\";\n\t\telem.style.fontStyle = (\"{{content.text.style.italic}}\" == \"true\" || \"{{content.text.style.italic}}\" == \"1\") ? \"italic\" : \"normal\";\n\t\telem.style.textDecoration = (\"{{content.text.style.underline}}\" == \"true\" || \"{{content.text.style.underline}}\" == \"1\") ? \"underline\" : \"none\";\n\t\telem.style.letterSpacing = \"{{content.text.letterSpacing}}px\";\n\n\t\tvar nowValue = fromValue;\n\t\telem.innerText = nowValue;\n\t\tvar animFrame = null;\n\n\t\tvar startTime = null;\n\t\tvar start = function(timestamp) {\n            if (!startTime) { startTime = timestamp; }\n            const progress = timestamp - startTime;\n\n            if (useEasing) {\n                nowValue = easingFn(progress, fromValue, toValue - fromValue, duration * 1000);\n            } else {\n                nowValue = fromValue + ((toValue - fromValue) * (progress \/ duration \/ 1000));\n            }\n            nowValue = Math.round(nowValue);\n\n            if (nowValue >= toValue) {\n                nowValue = toValue;\n            }\n            elem.innerText = nowValue;\n\n            if (progress < duration * 1000) {\n                animFrame = requestAnimationFrame(start);\n            }\n\t\t};\n\n\t\tif ((typeof window.IntersectionObserver === 'function')) {\n\t\t\tvar observer = new IntersectionObserver(function(entries) {\n\t\t\t\tfor (var i = 0, c = entries.length; i < c; i++) {\n\t\t\t\t\tif (!entries[i].isIntersecting) continue;\n\t\t\t\t\tstart();\n                    animFrame = requestAnimationFrame(start)\n\t\t\t\t}\n\t\t\t}, {});\n\t\t\tobserver.observe(elem);\n\t\t} else {\n\t\t\tstart();\n\t\t}\n\t})();\n<\/script>";
PluginWrapper._config.serviceUrl = null;
PluginWrapper._config.active = true;
PluginWrapper.registerPlugin('count_up', {
	name: 'Count Up',
	element: {
		minSize: {
			width: 80,
			height: 20
		},
		defaultSize: {
			width: 100,
			height: 46
		},
		resizable: true,
		supportsFullWidth: false
	},
	properties: [
		{id: 'fromValue', type: 'CountUpFrom',
			get: function(data) { return data.content.fromValue; },
			set: function(value, data) { data.content.fromValue = value; }
		},
		{id: 'toValue', type: 'CountUpTo',
			get: function(data) { return data.content.toValue; },
			set: function(value, data) { data.content.toValue = value; }
		},
		{id: 'duration', type: 'CountUpDuration',
			get: function(data) { return data.content.duration; },
			set: function(value, data) { data.content.duration = value; }
		},
		{id: 'text', type: 'CountUpText',
			get: function(data) { return data.content.text; },
			set: function(value, data) { data.content.text = value; }
		},
	],
	propertyDialog: {
		noScroll: true,
		tabs: [{name: 'General', children: [
			{type: 'VerticalLayout', spacing: 15, children: [
				{type: 'FlowLayout', spacing: 15, children: [
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('From')},
						{type: 'SizeSelector', id: 'fromValue', min: 0}
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('To')},
						{type: 'SizeSelector', id: 'toValue', min: 0},
					]},
					{type: 'VerticalLayout', children: [
						{type: 'Label', text: __('Duration')},
						{type: 'SliderControl', id: 'duration', min: 1, max: 6, unit: 's'},
					]}
				]},
				{type: 'VerticalLayout', children: [
					{type: 'Label', text: __('Text')},
					{type: 'FontSelector', id: 'text'}
				]}
			]}
		]}]
	},

	supportsAutoHeight: function() { return true; },
	openAction: function(fields, data, elem) {
		var o = data.content;
		fields.fromValue.setValue(o.fromValue);
		fields.toValue.setValue(o.toValue);
		fields.duration.setValue(o.duration);
		fields.text.setValue(o.text);
		// fields.useEasing(o.useEasing);
	},
	applyAction: function(fields, data, elem) {
		var o = data.content;
		o.fromValue = Math.max(Math.round(fields.fromValue.getValue()), 0);
		o.toValue = Math.max(Math.round(fields.toValue.getValue()), o.fromValue);
		o.duration = Math.max(fields.duration.getValue(), 0);
		o.text = fields.text.getValue();
		// o.useEasing = fields.useEasing.getValue();
		o.useEasing = 1;
	},
	loadAction: function(data) {
		var o = data.content;
		o.fromValue = o.fromValue || 0;
		o.toValue = o.toValue || 41;
		if (o.fromValue < 0) o.fromValue = 0;
		if (o.toValue < o.fromValue) o.toValue = o.fromValue;
		o.duration = o.duration || 2;
		o.useEasing = o.useEasing || 1;
		o.text = o.text || {
			color: '#333',
			size: 36,
			align: 'center',
			style: {bold: true}
		};
	},
	getUsedFonts: function(data) {
		var items = [];
		if (data.content.text) items.push(data.content.text.font);
		return items;
	}
});
}	]);
window.wb_builder_vars = {
whiteLabel: {"defaultLogo":"modules\/builder\/img\/sitepro-logo-black.svg"},
initUiPluginId: null,
uiColorScheme: "light",
pluginData: {"extReferenceId":null},
pluginToolbar: [{"id":"17","name":"Dise\u00f1o","icon":"ico-pl-mix-layout","enabled":true,"inactive":false,"groups":[{"name":"Layout","width":12,"enabled":true,"items":[{"id":"default\/312","name":"S1","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/317","name":"S4","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/314","name":"S2","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/316","name":"S6","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/318","name":"S5","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/315","name":"S3","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/319","name":"S7","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/320","name":"S8","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/310","name":"D1","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/309","name":"D2","type":"render","icon":"fa fa-film","width":3,"height":2,"enabled":true},{"id":"default\/101","name":"D3","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/103","name":"D4","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/313","name":"T1","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/311","name":"T2","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/105","name":"T3","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/106","name":"T4","type":"render","icon":"","width":3,"height":2,"enabled":true}]}]},{"id":"1","name":"Texto","icon":"fa fa-font","enabled":true,"inactive":false,"groups":[{"name":"Paragraphs","width":12,"enabled":true,"items":[{"id":"default\/209","name":"Normal Roboto","type":"render","icon":"","width":6,"height":2,"enabled":true},{"id":"default\/250","name":"Normal PT Serif","type":"render","icon":"","width":6,"height":2,"enabled":true},{"id":"default\/251","name":"Normal PlexMono","type":"render","icon":"","width":6,"height":2,"enabled":true},{"id":"default\/252","name":"Normal Exo2","type":"render","icon":"","width":6,"height":2,"enabled":true}]},{"name":"Page title","width":12,"enabled":true,"items":[{"id":"default\/202","name":"Page title Merriweather","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/254","name":"Page title Ubunutu","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/255","name":"Page title Montserrat","type":"render","icon":"","width":4,"height":2,"enabled":true}]},{"name":"Sub Title","width":12,"enabled":true,"items":[{"id":"default\/256","name":"Sub Title Advent pro","type":"render","icon":"","width":6,"height":2,"enabled":true},{"id":"default\/257","name":"Sub Title","type":"render","icon":"","width":6,"height":2,"enabled":true}]},{"name":"Heading 1","width":12,"enabled":true,"items":[{"id":"default\/203","name":"Heading 1 Averia serif","type":"render","icon":"","width":4,"height":2,"enabled":true}]},{"name":"Heading 2","width":12,"enabled":true,"items":[{"id":"default\/263","name":"Heading 2 Averia serif","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/264","name":"Heading 2 open sans","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/265","name":"Heading 2 cormoran Garamond","type":"render","icon":"","width":4,"height":2,"enabled":true}]},{"name":"Heading 3","width":12,"enabled":true,"items":[{"id":"default\/211","name":"Heading 3 Arial","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/266","name":"Heading 3 open sans condens","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/267","name":"Heading 3 cor garamo","type":"render","icon":"","width":4,"height":2,"enabled":true}]},{"name":"Highlight","width":12,"enabled":true,"items":[{"id":"default\/204","name":"Highlight vidalo","type":"render","icon":"","width":6,"height":2,"enabled":true},{"id":"default\/210","name":"Highlight Helvetica italic","type":"render","icon":"","width":6,"height":2,"enabled":true}]},{"name":"Special","width":12,"enabled":true,"items":[{"id":"default\/268","name":"Special","type":"render","icon":"","width":6,"height":2,"enabled":true}]},{"name":"Footer","width":12,"enabled":true,"items":[{"id":"default\/269","name":"Footer addres","type":"render","icon":"","width":3,"height":3,"enabled":true},{"id":"default\/205","name":"Footer tel","type":"render","icon":"","width":3,"height":3,"enabled":true}]}]},{"id":"9","name":"Imagen","icon":"fa fa-picture-o","enabled":true,"inactive":false,"groups":[{"name":"Picture","width":12,"enabled":true,"items":[{"id":"default\/323","name":"Default","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/184","name":"Rounded","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/324","name":"Circle","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/192","name":"Default stroke","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/240","name":"Rounded stroke","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/253","name":"Circle stroke","type":"render","icon":"","width":4,"height":3,"enabled":true}]},{"name":"Icons","width":12,"enabled":true,"items":[{"id":"default\/59","name":"Facebook","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/61","name":"Twitter","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/259","name":"Vk","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/330","name":"Instagram","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/333","name":"Youtube","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/245","name":"Vimeo","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/82","name":"Linkedin","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/273","name":"Tumblr","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/307","name":"Pinterest","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/60","name":"Skype","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/331","name":"Twitch","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/332","name":"Reddit","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/109","name":"Home","type":"render","icon":"fa fa-home","width":1,"height":1,"enabled":true},{"id":"default\/154","name":"Star outline","type":"render","icon":"fa fa-star-o","width":1,"height":1,"enabled":true},{"id":"default\/187","name":"Heart outline","type":"render","icon":"fa fa-heart-o","width":1,"height":1,"enabled":true},{"id":"default\/302","name":"Heart filled","type":"render","icon":"fa fa-heart","width":1,"height":1,"enabled":true},{"id":"default\/181","name":"Star filled","type":"render","icon":"fa fa-star","width":1,"height":1,"enabled":true},{"id":"default\/157","name":"Check","type":"render","icon":"fa fa-check","width":1,"height":1,"enabled":true},{"id":"default\/166","name":"Remove","type":"render","icon":"fa fa-times","width":1,"height":1,"enabled":true},{"id":"default\/174","name":"Info circle","type":"render","icon":"fa fa-info-circle","width":1,"height":1,"enabled":true},{"id":"default\/107","name":"Question circle","type":"render","icon":"fa fa-question-circle","width":1,"height":1,"enabled":true},{"id":"default\/108","name":"Exclamation circle","type":"render","icon":"fa fa-exclamation-circle","width":1,"height":1,"enabled":true},{"id":"default\/180","name":"Flag","type":"render","icon":"fa fa-flag","width":1,"height":1,"enabled":true},{"id":"default\/185","name":"Camera","type":"icon","icon":"fa fa-camera","width":1,"height":1,"enabled":true},{"id":"default\/183","name":"Plane","type":"icon","icon":"fa fa-plane","width":1,"height":1,"enabled":true},{"id":"default\/162","name":"Camera retro","type":"icon","icon":"fa fa-camera-retro","width":1,"height":1,"enabled":true},{"id":"default\/152","name":"Phone","type":"render","icon":"fa fa-phone","width":1,"height":1,"enabled":true},{"id":"default\/176","name":"Comments","type":"render","icon":"fa fa-comments","width":1,"height":1,"enabled":true},{"id":"default\/322","name":"Search","type":"render","icon":"fa fa-search","width":1,"height":1,"enabled":true},{"id":"default\/160","name":"Thumbs up","type":"icon","icon":"fa fa-thumbs-o-up","width":1,"height":1,"enabled":true},{"id":"default\/172","name":"Thumbs down","type":"icon","icon":"fa fa-thumbs-o-down","width":1,"height":1,"enabled":true},{"id":"default\/159","name":"Puzzle","type":"render","icon":"fa fa-puzzle-piece","width":1,"height":1,"enabled":true},{"id":"default\/161","name":"Bell","type":"render","icon":"fa fa-bell","width":1,"height":1,"enabled":true},{"id":"default\/153","name":"Globe","type":"icon","icon":"fa fa-globe","width":1,"height":1,"enabled":true},{"id":"default\/182","name":"Quote left","type":"render","icon":"fa fa-quote-right","width":1,"height":1,"enabled":true},{"id":"default\/189","name":"Quote right","type":"render","icon":"fa fa-quote-left","width":1,"height":1,"enabled":true},{"id":"default\/194","name":"Music","type":"render","icon":"fa fa-music","width":1,"height":1,"enabled":true},{"id":"default\/191","name":"Envelope","type":"render","icon":"fa fa-envelope-o","width":1,"height":1,"enabled":true},{"id":"default\/301","name":"Photo","type":"render","icon":"fa fa-picture-o","width":1,"height":1,"enabled":true},{"id":"default\/167","name":"A left","type":"icon","icon":"fa fa-arrow-left","width":1,"height":1,"enabled":true},{"id":"default\/168","name":"A right","type":"icon","icon":"fa fa-arrow-right","width":1,"height":1,"enabled":true},{"id":"default\/169","name":"A up","type":"icon","icon":"fa fa-arrow-up","width":1,"height":1,"enabled":true},{"id":"default\/170","name":"A down","type":"icon","icon":"fa fa-arrow-down","width":1,"height":1,"enabled":true},{"id":"default\/158","name":"Chevron left","type":"icon","icon":"fa fa-chevron-left","width":1,"height":1,"enabled":true},{"id":"default\/163","name":"Chevron right","type":"icon","icon":"fa fa-chevron-right","width":1,"height":1,"enabled":true},{"id":"default\/164","name":"Chevron up","type":"icon","icon":"fa fa-chevron-up","width":1,"height":1,"enabled":true},{"id":"default\/165","name":"Chevron down","type":"icon","icon":"fa fa-chevron-down","width":1,"height":1,"enabled":true},{"id":"default\/155","name":"Angle double left","type":"icon","icon":"fa fa-angle-double-left","width":1,"height":1,"enabled":true},{"id":"default\/173","name":"Angle double right","type":"icon","icon":"fa fa-angle-double-right","width":1,"height":1,"enabled":true},{"id":"default\/175","name":"Angle double up","type":"icon","icon":"fa fa-angle-double-up","width":1,"height":1,"enabled":true},{"id":"default\/177","name":"Angle double down","type":"icon","icon":"fa fa-angle-double-down","width":1,"height":1,"enabled":true},{"id":"default\/178","name":"Angle left","type":"icon","icon":"fa fa-angle-left","width":1,"height":1,"enabled":true},{"id":"default\/186","name":"Angle right","type":"icon","icon":"fa fa-angle-right","width":1,"height":1,"enabled":true},{"id":"default\/188","name":"Angle up","type":"icon","icon":"fa fa-angle-up","width":1,"height":1,"enabled":true},{"id":"default\/190","name":"Angle down","type":"icon","icon":"fa fa-angle-down","width":1,"height":1,"enabled":true},{"id":"default\/303","name":"Long arrow left","type":"icon","icon":"fa fa-long-arrow-left","width":1,"height":1,"enabled":true},{"id":"default\/304","name":"Long arrow right","type":"icon","icon":"fa fa-long-arrow-right","width":1,"height":1,"enabled":true},{"id":"default\/305","name":"Long arrow up","type":"icon","icon":"fa fa-long-arrow-up","width":1,"height":1,"enabled":true},{"id":"default\/306","name":"Long arrow down","type":"icon","icon":"fa fa-long-arrow-down","width":1,"height":1,"enabled":true},{"id":"default\/171","name":"A forward","type":"icon","icon":"fa fa-share","width":1,"height":1,"enabled":true}]}]},{"id":"2","name":"Galer\u00eda","icon":"fa fa-th-large","enabled":true,"inactive":false,"groups":[{"name":"Galleries","width":12,"enabled":true,"items":[{"id":"default\/226","name":"Slideshow with captions","type":"render","icon":"","width":12,"height":5,"enabled":true},{"id":"default\/143","name":"Background","type":"render","icon":"","width":6,"height":3,"enabled":true},{"id":"default\/81","name":"Thumbnails","type":"render","icon":"","width":6,"height":3,"enabled":true},{"id":"default\/78","name":"Slideshow","type":"render","icon":"","width":6,"height":3,"enabled":true},{"id":"default\/79","name":"Masonry","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/80","name":"List","type":"render","icon":"","width":12,"height":5,"enabled":true}]}]},{"id":"3","name":"Media","icon":"fa fa-youtube-play","enabled":true,"inactive":false,"groups":[{"name":"Video players","width":12,"enabled":true,"items":[{"id":"default\/221","name":"Youtube","type":"render_and_text","icon":"","width":6,"height":5,"enabled":true},{"id":"default\/346","name":"Video","type":"render_and_text","icon":"fa fa-play-circle-o","width":6,"height":5,"enabled":true},{"id":"default\/349","name":"Instagram video","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/347","name":"Facebook video","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/212","name":"Vimeo","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/220","name":"Youku","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/74","name":"Aparat","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true}]},{"name":"Audio players","width":12,"enabled":true,"items":[{"id":"default\/291","name":"Spotify player","type":"render_and_text","icon":"","width":6,"height":5,"enabled":true},{"id":"default\/130","name":"Music Player","type":"render_and_text","icon":"","width":6,"height":2,"enabled":true}]}]},{"id":"7","name":"Mapas","icon":"fa fa-map-o","enabled":true,"inactive":false,"groups":[{"name":"Google Maps","width":12,"enabled":true,"items":[{"id":"default\/85","name":"GoogleMaps dark","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/84","name":"GoogleMaps original","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/87","name":"GoogleMaps light","type":"render","icon":"","width":4,"height":3,"enabled":true},{"id":"default\/86","name":"GoogleMaps monochrome","type":"render","icon":"","width":4,"height":3,"enabled":true}]},{"name":"Maps","width":12,"enabled":true,"items":[{"id":"default\/8","name":"Bing","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true}]}]},{"name":"-"},{"id":"4","name":"Forma","icon":"fa fa-square-o","enabled":true,"inactive":false,"groups":[{"name":"Shapes","width":12,"enabled":true,"items":[{"id":"default\/193","name":"Square","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/156","name":"Rounded","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/274","name":"Circle","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/110","name":"S1","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/140","name":"S2","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/141","name":"S3","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/142","name":"F1","type":"render","icon":"","width":12,"height":3,"enabled":true}]},{"name":"Horizontal lines","width":6,"enabled":true,"items":[{"id":"default\/99","name":"Solid blue","type":"render","icon":"","width":6,"height":1,"enabled":true},{"id":"default\/102","name":"Double blue","type":"render","icon":"","width":6,"height":1,"enabled":true},{"id":"default\/100","name":"Dashed blue","type":"render","icon":"","width":6,"height":1,"enabled":true},{"id":"default\/104","name":"Dotted black","type":"render","icon":"","width":6,"height":1,"enabled":true},{"id":"default\/179","name":"Star line","type":"render","icon":"fa fa-bell","width":6,"height":1,"enabled":true}]},{"name":"Vertical lines","width":6,"enabled":true,"items":[{"id":"default\/96","name":"Solid pink","type":"render","icon":"","width":1,"height":5,"enabled":true},{"id":"default\/247","name":"Double light blue","type":"render","icon":"","width":1,"height":5,"enabled":true},{"id":"default\/97","name":"Dashed pink","type":"render","icon":"","width":1,"height":5,"enabled":true},{"id":"default\/98","name":"Dotted pink","type":"render","icon":"","width":1,"height":5,"enabled":true},{"id":"default\/95","name":"Star line","type":"render","icon":"","width":1,"height":5,"enabled":true}]}]},{"id":"6","name":"Bot\u00f3n","icon":"fa fa-share-square-o","enabled":true,"inactive":false,"groups":[{"name":"Standard buttons","width":12,"enabled":true,"items":[{"id":"default\/144","name":"S1","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/147","name":"S2","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/260","name":"S3","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/272","name":"S4","type":"render","icon":"","width":3,"height":2,"enabled":true}]},{"name":"Text buttons","width":12,"enabled":true,"items":[{"id":"default\/15","name":"Money back guarantee","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/19","name":"Get premium (green)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/28","name":"Just do it (custom shape)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/16","name":"Start now (pink)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/11","name":"Just do it (blue)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/18","name":"Get free (grey)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/62","name":"Start now (image background)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/21","name":"Just try (orange)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/14","name":"Online technical support","type":"render","icon":"","width":8,"height":2,"enabled":true},{"id":"default\/13","name":"Let's travel (orange)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/49","name":"Shop now (custom shape)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/17","name":"Buy now (green)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/20","name":"Latest news (white)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/12","name":"Just do it (violet)","type":"render","icon":"","width":4,"height":2,"enabled":true},{"id":"default\/321","name":"G1","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/325","name":"G2","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/326","name":"G3","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/327","name":"G4","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/328","name":"G5","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/329","name":"G6","type":"render","icon":"","width":2,"height":2,"enabled":true}]},{"name":"Icon buttons","width":12,"enabled":true,"items":[{"id":"default\/52","name":"Rounded mobile","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/56","name":"Rounded bookmark","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/48","name":"Rounded button star","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/35","name":"Camera icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/40","name":"World icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/31","name":"CreditCard icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/43","name":"Movie icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/26","name":"Envelope icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/50","name":"Rounded button location","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/29","name":"Mic icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/42","name":"House icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/37","name":"Down Icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/38","name":"Label icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/27","name":"CC icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/46","name":"Rounded button check","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/41","name":"Secure icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/57","name":"Rounded button time","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/25","name":"Thumbs down icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/36","name":"Location pin icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/24","name":"Cancel icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/51","name":"Rounded button lunch","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/53","name":"Rounded button desktop","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/55","name":"Rounded button share","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/45","name":"Rounded button love","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/30","name":"Mute icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/34","name":"Local phone icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/39","name":"Thumbs up icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/44","name":"Images icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/32","name":"Print icon","type":"render","icon":"","width":1,"height":1,"enabled":true},{"id":"default\/58","name":"Rounded button user","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/54","name":"Rounded button edit","type":"render","icon":"","width":2,"height":2,"enabled":true},{"id":"default\/33","name":"Time icon","type":"render","icon":"","width":1,"height":1,"enabled":true}]}]},{"id":"8","name":"Formulario","icon":"fa fa-list-alt","enabled":true,"inactive":false,"groups":[{"name":"Contacts","width":12,"enabled":true,"items":[{"id":"default\/75","name":"Form 1","type":"render","icon":"","width":12,"height":7,"enabled":true},{"id":"default\/77","name":"Form 2","type":"render","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/76","name":"Form 3","type":"render","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/286","name":"Form 4","type":"render","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/287","name":"Form 5","type":"render","icon":"","width":6,"height":4,"enabled":true}]}]},{"id":"10","name":"Men\u00fa","icon":"fa fa-sitemap","enabled":true,"inactive":false,"groups":[{"name":"Horizontal","width":12,"enabled":true,"items":[{"id":"default\/113","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/119","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/120","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/117","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/124","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/121","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/116","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/123","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/126","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/122","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true},{"id":"default\/127","name":"Menu","type":"render","icon":"","width":12,"height":2,"enabled":true}]},{"name":"Vertical","width":12,"enabled":true,"items":[{"id":"default\/115","name":"Menu","type":"render","icon":"","width":3,"height":6,"enabled":true},{"id":"default\/125","name":"Menu","type":"render","icon":"","width":3,"height":6,"enabled":true},{"id":"default\/114","name":"Menu","type":"render","icon":"","width":3,"height":6,"enabled":true},{"id":"default\/118","name":"Menu","type":"render","icon":"","width":3,"height":6,"enabled":true}]}]},{"id":"11","name":"Idiomas","icon":"fa fa-language","enabled":true,"inactive":false,"groups":[{"name":"Languages","width":12,"enabled":true,"items":[{"id":"default\/93","name":"Languages rectangle","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/94","name":"Languages rounded","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/92","name":"Languages dropdown","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/248","name":"Languages square","type":"render","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/249","name":"Languages vertical","type":"render","icon":"","width":2,"height":2,"enabled":true}]},{"name":"Other widgets","width":12,"enabled":true,"items":[{"id":"default\/246","name":"All languages","type":"render","icon":"","width":12,"height":2,"enabled":true}]}]},{"name":"-"},{"id":"12","name":"Bloques","icon":"fa fa-object-group","enabled":true,"inactive":false,"groups":[{"name":"Header","width":12,"enabled":true,"items":[{"id":"default\/352","name":"Header 1","type":"render","icon":"","width":12,"height":2,"enabled":true}]},{"name":"About us","width":12,"enabled":true,"items":[{"id":"default\/232","name":"About us 1","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/223","name":"About us 2","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/224","name":"About us 3","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/225","name":"About us 4","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/145","name":"About us 5","type":"render","icon":"","width":12,"height":6,"enabled":true}]},{"name":"Blog","width":12,"enabled":true,"items":[{"id":"default\/295","name":"Blog 1","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/294","name":"Blog 2","type":"render","icon":"","width":6,"height":3,"enabled":true},{"id":"default\/296","name":"Blog 3","type":"render","icon":"","width":3,"height":3,"enabled":true},{"id":"default\/297","name":"Blog 4","type":"render","icon":"","width":3,"height":3,"enabled":true}]},{"name":"Contacts","width":12,"enabled":true,"items":[{"id":"default\/233","name":"Contacts 1","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/234","name":"Contacts 2","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/230","name":"Contacts 4","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/229","name":"Contacts 6","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/284","name":"Contacts 7","type":"render","icon":"","width":12,"height":4,"enabled":true}]},{"name":"Features","width":12,"enabled":true,"items":[{"id":"default\/335","name":"Features 1","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/336","name":"Features 2","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/337","name":"Features 3","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/339","name":"Features 4","type":"render","icon":"","width":12,"height":6,"enabled":true}]},{"name":"Media","width":12,"enabled":true,"items":[{"id":"default\/236","name":"Media 1","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/235","name":"Media 2","type":"render","icon":"","width":6,"height":6,"enabled":true}]},{"name":"Pricing","width":12,"enabled":true,"items":[{"id":"default\/298","name":"Prices 1","type":"render","icon":"","width":12,"height":6,"enabled":true}]},{"name":"Products","width":12,"enabled":true,"items":[{"id":"default\/239","name":"Products 1","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/238","name":"Products 2","type":"render","icon":"","width":6,"height":6,"enabled":true}]},{"name":"Teams","width":12,"enabled":true,"items":[{"id":"default\/231","name":"Teams 1","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/243","name":"Teams 2","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/241","name":"Teams 3","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/244","name":"Teams 4","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/242","name":"Teams 5","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/228","name":"Teams 6","type":"render","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/285","name":"Teams 7","type":"render","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/308","name":"Teams 8","type":"render","icon":"","width":12,"height":8,"enabled":true}]},{"name":"Testimonials","width":12,"enabled":true,"items":[{"id":"default\/278","name":"Testimonials 1","type":"render","icon":"","width":12,"height":4,"enabled":true},{"id":"default\/279","name":"Testimonials 2","type":"render","icon":"","width":6,"height":3,"enabled":true},{"id":"default\/280","name":"Testimonials 3","type":"render","icon":"","width":6,"height":3,"enabled":true}]},{"name":"Services","width":12,"enabled":true,"items":[{"id":"default\/281","name":"Services 1","type":"render","icon":"","width":12,"height":3,"enabled":true},{"id":"default\/283","name":"Services 2","type":"render","icon":"","width":12,"height":3,"enabled":true}]},{"name":"Social","width":12,"enabled":true,"items":[{"id":"default\/227","name":"Social 1","type":"render","icon":"","width":12,"height":6,"enabled":true},{"id":"default\/341","name":"Social 2","type":"render","icon":"","width":12,"height":6,"enabled":true}]},{"name":"Subscribe","width":12,"enabled":true,"items":[{"id":"default\/334","name":"Subscribe 1","type":"render","icon":"","width":12,"height":6,"enabled":true}]},{"name":"Video","width":12,"enabled":true,"items":[{"id":"default\/342","name":"Video 1","type":"render","icon":"","width":12,"height":6,"enabled":true}]},{"name":"Welcome","width":12,"enabled":true,"items":[{"id":"default\/288","name":"Welcome 1","type":"render","icon":"","width":12,"height":8,"enabled":true},{"id":"default\/289","name":"Welcome 2","type":"render","icon":"","width":12,"height":8,"enabled":true},{"id":"default\/290","name":"Welcome 3","type":"render","icon":"","width":12,"height":8,"enabled":true}]},{"name":"Footer","width":12,"enabled":true,"items":[{"id":"default\/275","name":"Footer 1","type":"render","icon":"","width":12,"height":3,"enabled":true},{"id":"default\/277","name":"Footer 3","type":"render","icon":"","width":12,"height":3,"enabled":true},{"id":"default\/276","name":"Footer 2","type":"render","icon":"","width":12,"height":3,"enabled":true},{"id":"default\/282","name":"Footer 4","type":"render","icon":"","width":12,"height":3,"enabled":true}]}]},{"name":"-"},{"id":"16","name":"Comercio","icon":"fa fa-shopping-cart","enabled":true,"inactive":false,"groups":[{"name":"Commerce","width":12,"enabled":true,"items":[{"id":"default\/197","name":"Store","type":"render","icon":"fa fa-shopping-cart","width":12,"height":6,"enabled":true},{"id":"default\/198","name":"StoreCart font awesome","type":"render","icon":"fa fa-shopping-basket","width":3,"height":1,"enabled":true},{"id":"default\/258","name":"StoreCart black outline","type":"render","icon":"","width":3,"height":1,"enabled":true},{"id":"default\/261","name":"StoreCart orange bag","type":"render","icon":"","width":3,"height":1,"enabled":true},{"id":"default\/262","name":"StoreCart violet","type":"render","icon":"","width":3,"height":1,"enabled":true}]},{"name":"Payment Gateways","width":12,"enabled":true,"items":[{"id":"default\/199","name":"Stripe","type":"icon_and_text","icon":"ico-pl-stripe","width":2,"height":2,"enabled":true},{"id":"default\/128","name":"Mercado Pago","type":"icon_and_text","icon":"ico-pl-mercado","width":2,"height":2,"enabled":true},{"id":"default\/195","name":"Skrill","type":"icon_and_text","icon":"ico-pl-skrill","width":2,"height":2,"enabled":true},{"id":"default\/129","name":"Mollie","type":"icon_and_text","icon":"ico-pl-mollie","width":2,"height":2,"enabled":true},{"id":"default\/149","name":"Redsys","type":"icon_and_text","icon":"ico-pl-redsys","width":2,"height":2,"enabled":true},{"id":"default\/10","name":"Braintree","type":"icon_and_text","icon":"ico-pl-braintree","width":2,"height":2,"enabled":true},{"id":"default\/138","name":"PayU","type":"icon_and_text","icon":"ico-pl-payu","width":2,"height":2,"enabled":true},{"id":"default\/63","name":"Buy Now","type":"icon_and_text","icon":"fa fa-paypal","width":2,"height":2,"enabled":true},{"id":"default\/134","name":"PagSeguro","type":"icon_and_text","icon":"ico-pl-pagseguro","width":2,"height":2,"enabled":true},{"id":"default\/1","name":"2checkout","type":"icon_and_text","icon":"ico-pl-2checkout","width":2,"height":2,"enabled":true},{"id":"default\/23","name":"Klarna","type":"icon_and_text","icon":"ico-pl-klarna","width":2,"height":2,"enabled":true},{"id":"default\/343","name":"Paymentez","type":"icon_and_text","icon":"ico-pl-paymentez","width":2,"height":2,"enabled":true},{"id":"default\/348","name":"Libelula","type":"icon_and_text","icon":"ico-pl-libelula","width":2,"height":2,"enabled":true},{"id":"default\/351","name":"Expresspay","type":"icon_and_text","icon":"ico-pl-expresspay","width":2,"height":2,"enabled":true}]}]},{"name":"-"},{"id":"15","name":"Blog","icon":"fa fa-pencil-square-o","enabled":true,"inactive":false,"groups":[{"name":"Blog","width":12,"enabled":true,"items":[{"id":"default\/68","name":"Blog Thumbnails","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/299","name":"Blog List","type":"render","icon":"","width":6,"height":6,"enabled":true},{"id":"default\/300","name":"Blog One-three","type":"render","icon":"","width":12,"height":6,"enabled":true}]}]},{"name":"-"},{"id":"13","name":"Social","icon":"fa fa-group","enabled":true,"inactive":false,"groups":[{"name":"Social","width":12,"enabled":true,"items":[{"id":"default\/90","name":"Instagram","type":"render_and_text","icon":"","width":8,"height":6,"enabled":true},{"id":"default\/72","name":"Facebook Like","type":"render_and_text","icon":"","width":2,"height":1,"enabled":true},{"id":"default\/73","name":"Facebook comment","type":"render_and_text","icon":"","width":6,"height":4,"enabled":true},{"id":"default\/9","name":"Bookmarks Share","type":"render_and_text","icon":"","width":2,"height":1,"enabled":true},{"id":"default\/71","name":"Facebook Fans","type":"render_and_text","icon":"","width":4,"height":4,"enabled":true},{"id":"default\/148","name":"Pinterest","type":"render_and_text","icon":"","width":2,"height":1,"enabled":true},{"id":"default\/131","name":"Odnoklassniki","type":"render_and_text","icon":"","width":3,"height":4,"enabled":true},{"id":"default\/146","name":"Twitter","type":"render_and_text","icon":"fa fa-moon-o","width":4,"height":3,"enabled":true},{"id":"default\/350","name":"Instagram post","type":"render_and_text","icon":"","width":4,"height":3,"enabled":true}]}]},{"name":"-"},{"id":"14","name":"Avanzado","icon":"fa fa-gears","enabled":true,"inactive":false,"groups":[{"name":"Advanced","width":12,"enabled":true,"items":[{"id":"default\/88","name":"Google calendar v1","type":"render_and_text","icon":"","width":6,"height":5,"enabled":true},{"id":"default\/83","name":"Google AdSense","type":"icon_and_text","icon":"ico-pl-adsense","width":2,"height":2,"enabled":true},{"id":"default\/89","name":"Google calendar v2","type":"render_and_text","icon":"","width":6,"height":5,"enabled":true},{"id":"default\/5","name":"Banner","type":"icon_and_text","icon":"fa fa-square","width":2,"height":2,"enabled":true},{"id":"default\/200","name":"Table","type":"render_and_text","icon":"","width":12,"height":4,"enabled":true},{"id":"default\/196","name":"Skype Im Online","type":"render_and_text","icon":"","width":3,"height":2,"enabled":true},{"id":"default\/65","name":"Custom Html","type":"icon_and_text","icon":"fa fa-file-code-o","width":2,"height":2,"enabled":true},{"id":"default\/293","name":"Countdown","type":"icon_and_text","icon":"fa fa-clock-o","width":2,"height":2,"enabled":true},{"id":"default\/345","name":"Count Up","type":"icon_and_text","icon":"fa fa-angle-double-up","width":2,"height":2,"enabled":true}]},{"name":"Chat","width":12,"enabled":true,"items":[{"id":"default\/47","name":"Getbutton","type":"icon_and_text","icon":"ico-pl-getbutton","width":2,"height":2,"enabled":true},{"id":"default\/201","name":"Tawk.to","type":"icon_and_text","icon":"ico-pl-tawkto","width":2,"height":2,"enabled":true},{"id":"default\/133","name":"Olark","type":"icon_and_text","icon":"ico-pl-olark","width":2,"height":2,"enabled":true},{"id":"default\/222","name":"Zendesk","type":"icon_and_text","icon":"ico-pl-zopim","width":2,"height":2,"enabled":true}]}]}]
}
